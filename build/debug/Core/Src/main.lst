ARM GAS  /tmp/ccjZEZrM.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text._write,"ax",%progbits
  19              		.align	1
  20              		.global	_write
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_write:
  26              	.LVL0:
  27              	.LFB68:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @author         :Sarthak Chaudhary
   5:Core/Src/main.c ****   * @file           : main.c
   6:Core/Src/main.c ****   * @brief          : Main program body
   7:Core/Src/main.c ****   * @date           : Oct 23, 2024
   8:Core/Src/main.c ****   ******************************************************************************
   9:Core/Src/main.c ****   * @attention
  10:Core/Src/main.c ****   *
  11:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  12:Core/Src/main.c ****   * All rights reserved.
  13:Core/Src/main.c ****   *
  14:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  15:Core/Src/main.c ****   * in the root directory of this software component.
  16:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  17:Core/Src/main.c ****   *
  18:Core/Src/main.c ****   ******************************************************************************
  19:Core/Src/main.c ****   */
  20:Core/Src/main.c **** /* USER CODE END Header */
  21:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/main.c **** #include "main.h"
  23:Core/Src/main.c **** #include "i2c.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** #include <stdio.h>
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.c **** #define LSM6DS0_ADDR        0xD6 // Change this if your I2C address is different D7 for read and D6
  31:Core/Src/main.c **** #define WHO_AM_I            0x0F
ARM GAS  /tmp/ccjZEZrM.s 			page 2


  32:Core/Src/main.c **** #define CTRL_REG2_G         0x11
  33:Core/Src/main.c **** #define CTRL_REG1_XL        0x10
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Accelerometer*/
  37:Core/Src/main.c **** #define OUT_X_L_G           0x22    //22
  38:Core/Src/main.c **** #define OUT_X_L_XL          0x28
  39:Core/Src/main.c **** #define OUT_X_H_XL          0x29
  40:Core/Src/main.c **** #define OUT_Y_L_XL          0x2A
  41:Core/Src/main.c **** #define OUT_Y_H_XL          0x2B
  42:Core/Src/main.c **** #define OUT_Z_L_XL          0x2C
  43:Core/Src/main.c **** #define OUT_Z_H_XL          0x2D
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Gyroscope*/
  46:Core/Src/main.c **** #define LSM6DS0_OUT_X_G_L							0x22	 
  47:Core/Src/main.c **** #define LSM6DS0_OUT_X_G_H							0x23	 
  48:Core/Src/main.c **** #define LSM6DS0_OUT_Y_G_L							0x24		 
  49:Core/Src/main.c **** #define LSM6DS0_OUT_Y_G_H							0x25		 
  50:Core/Src/main.c **** #define LSM6DS0_OUT_Z_G_L							0x26		
  51:Core/Src/main.c **** #define LSM6DS0_OUT_Z_G_H							0x27	
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Temperature*/
  54:Core/Src/main.c **** #define OUT_TEMP_L          0X20
  55:Core/Src/main.c **** #define OUT_TEMP_H          0X21
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** #define STATUS_REG          0x1E
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END Includes */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  66:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  67:Core/Src/main.c **** int _write(int file, char *data, int len) {
  28              		.loc 1 67 43 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 67 43 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 1446     		mov	r4, r2
  68:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)data, len, HAL_MAX_DELAY);
  38              		.loc 1 68 5 is_stmt 1 view .LVU2
  39 0004 4FF0FF33 		mov	r3, #-1
  40 0008 92B2     		uxth	r2, r2
  41              	.LVL1:
  42              		.loc 1 68 5 is_stmt 0 view .LVU3
  43 000a 0248     		ldr	r0, .L3
  44              	.LVL2:
  45              		.loc 1 68 5 view .LVU4
  46 000c FFF7FEFF 		bl	HAL_UART_Transmit
  47              	.LVL3:
ARM GAS  /tmp/ccjZEZrM.s 			page 3


  69:Core/Src/main.c ****     return len;
  48              		.loc 1 69 5 is_stmt 1 view .LVU5
  70:Core/Src/main.c **** }
  49              		.loc 1 70 1 is_stmt 0 view .LVU6
  50 0010 2046     		mov	r0, r4
  51 0012 10BD     		pop	{r4, pc}
  52              	.LVL4:
  53              	.L4:
  54              		.loc 1 70 1 view .LVU7
  55              		.align	2
  56              	.L3:
  57 0014 00000000 		.word	huart1
  58              		.cfi_endproc
  59              	.LFE68:
  61              		.global	__aeabi_f2iz
  62              		.global	__aeabi_i2f
  63              		.global	__aeabi_fsub
  64              		.global	__aeabi_f2d
  65              		.global	__aeabi_i2d
  66              		.global	__aeabi_dmul
  67              		.global	__aeabi_d2iz
  68              		.section	.text.dissectFloat,"ax",%progbits
  69              		.align	1
  70              		.global	dissectFloat
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  75              	dissectFloat:
  76              	.LVL5:
  77              	.LFB69:
  71:Core/Src/main.c **** void dissectFloat(float value, int *intPart, int *fracPart, int decimalPlaces) {
  78              		.loc 1 71 80 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		.loc 1 71 80 is_stmt 0 view .LVU9
  83 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  84              		.cfi_def_cfa_offset 24
  85              		.cfi_offset 3, -24
  86              		.cfi_offset 4, -20
  87              		.cfi_offset 5, -16
  88              		.cfi_offset 6, -12
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 0646     		mov	r6, r0
  92 0004 0F46     		mov	r7, r1
  93 0006 1446     		mov	r4, r2
  94 0008 1D46     		mov	r5, r3
  72:Core/Src/main.c ****     *intPart = (int)value;  // Extract the integer part
  95              		.loc 1 72 5 is_stmt 1 view .LVU10
  96              		.loc 1 72 16 is_stmt 0 view .LVU11
  97 000a FFF7FEFF 		bl	__aeabi_f2iz
  98              	.LVL6:
  99              		.loc 1 72 14 view .LVU12
 100 000e 3860     		str	r0, [r7]
  73:Core/Src/main.c ****     *fracPart = (int)((fabs(value - *intPart)) * pow(10, decimalPlaces));  // Extract the fractiona
 101              		.loc 1 73 5 is_stmt 1 view .LVU13
ARM GAS  /tmp/ccjZEZrM.s 			page 4


 102              		.loc 1 73 35 is_stmt 0 view .LVU14
 103 0010 FFF7FEFF 		bl	__aeabi_i2f
 104              	.LVL7:
 105 0014 0146     		mov	r1, r0
 106 0016 3046     		mov	r0, r6
 107 0018 FFF7FEFF 		bl	__aeabi_fsub
 108              	.LVL8:
 109              		.loc 1 73 24 view .LVU15
 110 001c 20F00040 		bic	r0, r0, #-2147483648
 111 0020 FFF7FEFF 		bl	__aeabi_f2d
 112              	.LVL9:
 113 0024 0646     		mov	r6, r0
 114              	.LVL10:
 115              		.loc 1 73 24 view .LVU16
 116 0026 0F46     		mov	r7, r1
 117              	.LVL11:
 118              		.loc 1 73 50 view .LVU17
 119 0028 2846     		mov	r0, r5
 120 002a FFF7FEFF 		bl	__aeabi_i2d
 121              	.LVL12:
 122 002e 0246     		mov	r2, r0
 123 0030 0B46     		mov	r3, r1
 124 0032 0020     		movs	r0, #0
 125 0034 0849     		ldr	r1, .L9
 126 0036 FFF7FEFF 		bl	pow
 127              	.LVL13:
 128 003a 0246     		mov	r2, r0
 129 003c 0B46     		mov	r3, r1
 130              		.loc 1 73 48 discriminator 1 view .LVU18
 131 003e 3046     		mov	r0, r6
 132 0040 3946     		mov	r1, r7
 133 0042 FFF7FEFF 		bl	__aeabi_dmul
 134              	.LVL14:
 135              		.loc 1 73 17 discriminator 1 view .LVU19
 136 0046 FFF7FEFF 		bl	__aeabi_d2iz
 137              	.LVL15:
 138              		.loc 1 73 15 discriminator 1 view .LVU20
 139 004a 2060     		str	r0, [r4]
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****     // If fractional part is negative, make it positive
  76:Core/Src/main.c ****     if (*fracPart < 0) {
 140              		.loc 1 76 5 is_stmt 1 view .LVU21
 141              		.loc 1 76 8 is_stmt 0 view .LVU22
 142 004c 0028     		cmp	r0, #0
 143 004e 00DB     		blt	.L8
 144              	.L5:
  77:Core/Src/main.c ****         *fracPart = -(*fracPart);
  78:Core/Src/main.c ****     }
  79:Core/Src/main.c **** }
 145              		.loc 1 79 1 view .LVU23
 146 0050 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 147              	.LVL16:
 148              	.L8:
  77:Core/Src/main.c ****         *fracPart = -(*fracPart);
 149              		.loc 1 77 9 is_stmt 1 view .LVU24
  77:Core/Src/main.c ****         *fracPart = -(*fracPart);
 150              		.loc 1 77 21 is_stmt 0 view .LVU25
ARM GAS  /tmp/ccjZEZrM.s 			page 5


 151 0052 4042     		rsbs	r0, r0, #0
  77:Core/Src/main.c ****         *fracPart = -(*fracPart);
 152              		.loc 1 77 19 view .LVU26
 153 0054 2060     		str	r0, [r4]
 154              		.loc 1 79 1 view .LVU27
 155 0056 FBE7     		b	.L5
 156              	.L10:
 157              		.align	2
 158              	.L9:
 159 0058 00002440 		.word	1076101120
 160              		.cfi_endproc
 161              	.LFE69:
 163              		.section	.text.LSM6DS0_begin,"ax",%progbits
 164              		.align	1
 165              		.global	LSM6DS0_begin
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 170              	LSM6DS0_begin:
 171              	.LFB70:
  80:Core/Src/main.c **** /* USER CODE END PTD */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  83:Core/Src/main.c **** /* USER CODE BEGIN PD */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** int LSM6DS0_begin(void){
 172              		.loc 1 85 24 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 8
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176 0000 00B5     		push	{lr}
 177              		.cfi_def_cfa_offset 4
 178              		.cfi_offset 14, -4
 179 0002 87B0     		sub	sp, sp, #28
 180              		.cfi_def_cfa_offset 32
  86:Core/Src/main.c ****   uint8_t data=0;
 181              		.loc 1 86 3 view .LVU29
 182              		.loc 1 86 11 is_stmt 0 view .LVU30
 183 0004 0023     		movs	r3, #0
 184 0006 8DF81730 		strb	r3, [sp, #23]
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****     // Check WHO_AM_I register
  89:Core/Src/main.c ****   HAL_I2C_Mem_Read(&hi2c1, 0xD7, WHO_AM_I, 1, &data, 1, HAL_MAX_DELAY);
 185              		.loc 1 89 3 is_stmt 1 view .LVU31
 186 000a 4FF0FF33 		mov	r3, #-1
 187 000e 0293     		str	r3, [sp, #8]
 188 0010 0123     		movs	r3, #1
 189 0012 0193     		str	r3, [sp, #4]
 190 0014 0DF11702 		add	r2, sp, #23
 191 0018 0092     		str	r2, [sp]
 192 001a 0F22     		movs	r2, #15
 193 001c D721     		movs	r1, #215
 194 001e 0648     		ldr	r0, .L15
 195 0020 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 196              	.LVL17:
  90:Core/Src/main.c ****   if (data != 0x6C) {
 197              		.loc 1 90 3 view .LVU32
ARM GAS  /tmp/ccjZEZrM.s 			page 6


 198              		.loc 1 90 12 is_stmt 0 view .LVU33
 199 0024 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 200              		.loc 1 90 6 view .LVU34
 201 0028 6C2B     		cmp	r3, #108
 202 002a 03D1     		bne	.L13
  91:Core/Src/main.c ****       // Handle error
  92:Core/Src/main.c ****       // HAL_GPIO_WritePin(LED_GPIO_Port,LED_Pin,SET);
  93:Core/Src/main.c ****     return 0;
  94:Core/Src/main.c ****   
  95:Core/Src/main.c ****   }
  96:Core/Src/main.c ****   return 1;
 203              		.loc 1 96 10 view .LVU35
 204 002c 0120     		movs	r0, #1
 205              	.L11:
  97:Core/Src/main.c **** }
 206              		.loc 1 97 1 view .LVU36
 207 002e 07B0     		add	sp, sp, #28
 208              		.cfi_remember_state
 209              		.cfi_def_cfa_offset 4
 210              		@ sp needed
 211 0030 5DF804FB 		ldr	pc, [sp], #4
 212              	.L13:
 213              		.cfi_restore_state
  93:Core/Src/main.c ****   
 214              		.loc 1 93 12 view .LVU37
 215 0034 0020     		movs	r0, #0
 216 0036 FAE7     		b	.L11
 217              	.L16:
 218              		.align	2
 219              	.L15:
 220 0038 00000000 		.word	hi2c1
 221              		.cfi_endproc
 222              	.LFE70:
 224              		.section	.text.LSM6DS0_Init,"ax",%progbits
 225              		.align	1
 226              		.global	LSM6DS0_Init
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 231              	LSM6DS0_Init:
 232              	.LFB71:
  98:Core/Src/main.c **** void LSM6DS0_Init(void) {
 233              		.loc 1 98 25 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 8
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 238              		.cfi_def_cfa_offset 20
 239              		.cfi_offset 4, -20
 240              		.cfi_offset 5, -16
 241              		.cfi_offset 6, -12
 242              		.cfi_offset 7, -8
 243              		.cfi_offset 14, -4
 244 0002 87B0     		sub	sp, sp, #28
 245              		.cfi_def_cfa_offset 48
  99:Core/Src/main.c ****     uint8_t data=0;
 246              		.loc 1 99 5 view .LVU39
ARM GAS  /tmp/ccjZEZrM.s 			page 7


 247              		.loc 1 99 13 is_stmt 0 view .LVU40
 248 0004 0023     		movs	r3, #0
 249 0006 8DF81730 		strb	r3, [sp, #23]
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****     // Initialize Gyroscope
 102:Core/Src/main.c ****     data = 0x6C; // 416 Hz, 2000 dps
 250              		.loc 1 102 5 is_stmt 1 view .LVU41
 251              		.loc 1 102 10 is_stmt 0 view .LVU42
 252 000a 6C23     		movs	r3, #108
 253 000c 8DF81730 		strb	r3, [sp, #23]
 103:Core/Src/main.c ****     HAL_I2C_Mem_Write(&hi2c1, LSM6DS0_ADDR, CTRL_REG2_G, 1, &data, 1, HAL_MAX_DELAY);
 254              		.loc 1 103 5 is_stmt 1 view .LVU43
 255 0010 0E4D     		ldr	r5, .L19
 256 0012 4FF0FF37 		mov	r7, #-1
 257 0016 0297     		str	r7, [sp, #8]
 258 0018 0124     		movs	r4, #1
 259 001a 0194     		str	r4, [sp, #4]
 260 001c 0DF11706 		add	r6, sp, #23
 261 0020 0096     		str	r6, [sp]
 262 0022 2346     		mov	r3, r4
 263 0024 1122     		movs	r2, #17
 264 0026 D621     		movs	r1, #214
 265 0028 2846     		mov	r0, r5
 266 002a FFF7FEFF 		bl	HAL_I2C_Mem_Write
 267              	.LVL18:
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****     // Initialize Accelerometer
 106:Core/Src/main.c ****     // HAL_I2C_Mem_Write(&hi2c1, LSM6DS0_ADDR, CTRL_REG1_XL, 1, &data1, 1, HAL_MAX_DELAY);
 107:Core/Src/main.c ****     data = 0x60; // 416 Hz, +/- 2g
 268              		.loc 1 107 5 view .LVU44
 269              		.loc 1 107 10 is_stmt 0 view .LVU45
 270 002e 6023     		movs	r3, #96
 271 0030 8DF81730 		strb	r3, [sp, #23]
 108:Core/Src/main.c ****     HAL_I2C_Mem_Write(&hi2c1, LSM6DS0_ADDR, CTRL_REG1_XL, 1, &data, 1, HAL_MAX_DELAY);
 272              		.loc 1 108 5 is_stmt 1 view .LVU46
 273 0034 0297     		str	r7, [sp, #8]
 274 0036 0194     		str	r4, [sp, #4]
 275 0038 0096     		str	r6, [sp]
 276 003a 2346     		mov	r3, r4
 277 003c 1022     		movs	r2, #16
 278 003e D621     		movs	r1, #214
 279 0040 2846     		mov	r0, r5
 280 0042 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 281              	.LVL19:
 109:Core/Src/main.c **** }
 282              		.loc 1 109 1 is_stmt 0 view .LVU47
 283 0046 07B0     		add	sp, sp, #28
 284              		.cfi_def_cfa_offset 20
 285              		@ sp needed
 286 0048 F0BD     		pop	{r4, r5, r6, r7, pc}
 287              	.L20:
 288 004a 00BF     		.align	2
 289              	.L19:
 290 004c 00000000 		.word	hi2c1
 291              		.cfi_endproc
 292              	.LFE71:
 294              		.section	.text.check_Gyro_Init,"ax",%progbits
ARM GAS  /tmp/ccjZEZrM.s 			page 8


 295              		.align	1
 296              		.global	check_Gyro_Init
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 301              	check_Gyro_Init:
 302              	.LFB72:
 110:Core/Src/main.c **** int check_Gyro_Init(){
 303              		.loc 1 110 22 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 8
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307 0000 00B5     		push	{lr}
 308              		.cfi_def_cfa_offset 4
 309              		.cfi_offset 14, -4
 310 0002 87B0     		sub	sp, sp, #28
 311              		.cfi_def_cfa_offset 32
 111:Core/Src/main.c ****   uint8_t data=0;
 312              		.loc 1 111 3 view .LVU49
 313              		.loc 1 111 11 is_stmt 0 view .LVU50
 314 0004 0023     		movs	r3, #0
 315 0006 8DF81730 		strb	r3, [sp, #23]
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****     // Check WHO_AM_I register
 114:Core/Src/main.c ****   HAL_I2C_Mem_Read(&hi2c1, 0xD7, CTRL_REG2_G, 1, &data, 1, HAL_MAX_DELAY);
 316              		.loc 1 114 3 is_stmt 1 view .LVU51
 317 000a 4FF0FF33 		mov	r3, #-1
 318 000e 0293     		str	r3, [sp, #8]
 319 0010 0123     		movs	r3, #1
 320 0012 0193     		str	r3, [sp, #4]
 321 0014 0DF11702 		add	r2, sp, #23
 322 0018 0092     		str	r2, [sp]
 323 001a 1122     		movs	r2, #17
 324 001c D721     		movs	r1, #215
 325 001e 0648     		ldr	r0, .L25
 326 0020 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 327              	.LVL20:
 115:Core/Src/main.c ****   if(data !=0x6C){
 328              		.loc 1 115 3 view .LVU52
 329              		.loc 1 115 11 is_stmt 0 view .LVU53
 330 0024 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 331              		.loc 1 115 5 view .LVU54
 332 0028 6C2B     		cmp	r3, #108
 333 002a 03D0     		beq	.L23
 116:Core/Src/main.c ****     return 0;
 334              		.loc 1 116 12 view .LVU55
 335 002c 0020     		movs	r0, #0
 336              	.L21:
 117:Core/Src/main.c ****   }else{
 118:Core/Src/main.c ****     return 1;
 119:Core/Src/main.c ****   }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** }
 337              		.loc 1 121 1 view .LVU56
 338 002e 07B0     		add	sp, sp, #28
 339              		.cfi_remember_state
 340              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccjZEZrM.s 			page 9


 341              		@ sp needed
 342 0030 5DF804FB 		ldr	pc, [sp], #4
 343              	.L23:
 344              		.cfi_restore_state
 118:Core/Src/main.c ****   }
 345              		.loc 1 118 12 view .LVU57
 346 0034 0120     		movs	r0, #1
 347 0036 FAE7     		b	.L21
 348              	.L26:
 349              		.align	2
 350              	.L25:
 351 0038 00000000 		.word	hi2c1
 352              		.cfi_endproc
 353              	.LFE72:
 355              		.section	.text.check_XL_Init,"ax",%progbits
 356              		.align	1
 357              		.global	check_XL_Init
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 362              	check_XL_Init:
 363              	.LFB73:
 122:Core/Src/main.c **** int check_XL_Init(){
 364              		.loc 1 122 20 is_stmt 1 view -0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 8
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368 0000 00B5     		push	{lr}
 369              		.cfi_def_cfa_offset 4
 370              		.cfi_offset 14, -4
 371 0002 87B0     		sub	sp, sp, #28
 372              		.cfi_def_cfa_offset 32
 123:Core/Src/main.c ****   uint8_t data=0;
 373              		.loc 1 123 3 view .LVU59
 374              		.loc 1 123 11 is_stmt 0 view .LVU60
 375 0004 0023     		movs	r3, #0
 376 0006 8DF81730 		strb	r3, [sp, #23]
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****     // Check WHO_AM_I register
 126:Core/Src/main.c ****   HAL_I2C_Mem_Read(&hi2c1, 0xD7, CTRL_REG1_XL, 1, &data, 1, HAL_MAX_DELAY);
 377              		.loc 1 126 3 is_stmt 1 view .LVU61
 378 000a 4FF0FF33 		mov	r3, #-1
 379 000e 0293     		str	r3, [sp, #8]
 380 0010 0123     		movs	r3, #1
 381 0012 0193     		str	r3, [sp, #4]
 382 0014 0DF11702 		add	r2, sp, #23
 383 0018 0092     		str	r2, [sp]
 384 001a 1022     		movs	r2, #16
 385 001c D721     		movs	r1, #215
 386 001e 0648     		ldr	r0, .L31
 387 0020 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 388              	.LVL21:
 127:Core/Src/main.c ****   if(data !=0x60){
 389              		.loc 1 127 3 view .LVU62
 390              		.loc 1 127 11 is_stmt 0 view .LVU63
 391 0024 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 392              		.loc 1 127 5 view .LVU64
ARM GAS  /tmp/ccjZEZrM.s 			page 10


 393 0028 602B     		cmp	r3, #96
 394 002a 03D0     		beq	.L29
 128:Core/Src/main.c ****     return 0;
 395              		.loc 1 128 12 view .LVU65
 396 002c 0020     		movs	r0, #0
 397              	.L27:
 129:Core/Src/main.c ****   }else{
 130:Core/Src/main.c ****     return 1;
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** }
 398              		.loc 1 133 1 view .LVU66
 399 002e 07B0     		add	sp, sp, #28
 400              		.cfi_remember_state
 401              		.cfi_def_cfa_offset 4
 402              		@ sp needed
 403 0030 5DF804FB 		ldr	pc, [sp], #4
 404              	.L29:
 405              		.cfi_restore_state
 130:Core/Src/main.c ****   }
 406              		.loc 1 130 12 view .LVU67
 407 0034 0120     		movs	r0, #1
 408 0036 FAE7     		b	.L27
 409              	.L32:
 410              		.align	2
 411              	.L31:
 412 0038 00000000 		.word	hi2c1
 413              		.cfi_endproc
 414              	.LFE73:
 416              		.global	__aeabi_ui2f
 417              		.global	__aeabi_fmul
 418              		.section	.text.LSM6DS0_ReadTemperature_C,"ax",%progbits
 419              		.align	1
 420              		.global	LSM6DS0_ReadTemperature_C
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 425              	LSM6DS0_ReadTemperature_C:
 426              	.LFB74:
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** float LSM6DS0_ReadTemperature_C() {
 427              		.loc 1 135 35 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 8
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431 0000 70B5     		push	{r4, r5, r6, lr}
 432              		.cfi_def_cfa_offset 16
 433              		.cfi_offset 4, -16
 434              		.cfi_offset 5, -12
 435              		.cfi_offset 6, -8
 436              		.cfi_offset 14, -4
 437 0002 86B0     		sub	sp, sp, #24
 438              		.cfi_def_cfa_offset 40
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** 	  uint8_t Out_Temp_L = 0;
 439              		.loc 1 137 4 view .LVU69
 440              		.loc 1 137 12 is_stmt 0 view .LVU70
ARM GAS  /tmp/ccjZEZrM.s 			page 11


 441 0004 0023     		movs	r3, #0
 442 0006 8DF81730 		strb	r3, [sp, #23]
 138:Core/Src/main.c **** 	  uint8_t Out_Temp_H = 0;
 443              		.loc 1 138 4 is_stmt 1 view .LVU71
 444              		.loc 1 138 12 is_stmt 0 view .LVU72
 445 000a 8DF81630 		strb	r3, [sp, #22]
 139:Core/Src/main.c ****     uint16_t Raw_Temp=0;
 446              		.loc 1 139 5 is_stmt 1 view .LVU73
 447              	.LVL22:
 140:Core/Src/main.c ****     float degreeCelsius =0;
 448              		.loc 1 140 5 view .LVU74
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR,OUT_TEMP_L, I2C_MEMADD_SIZE_8BIT, &Out_Temp_L, 1, HAL_MAX
 449              		.loc 1 142 5 view .LVU75
 450 000e 144D     		ldr	r5, .L35
 451 0010 4FF0FF36 		mov	r6, #-1
 452 0014 0296     		str	r6, [sp, #8]
 453 0016 0124     		movs	r4, #1
 454 0018 0194     		str	r4, [sp, #4]
 455 001a 0DF11703 		add	r3, sp, #23
 456 001e 0093     		str	r3, [sp]
 457 0020 2346     		mov	r3, r4
 458 0022 2022     		movs	r2, #32
 459 0024 D621     		movs	r1, #214
 460 0026 2846     		mov	r0, r5
 461 0028 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 462              	.LVL23:
 143:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR,OUT_TEMP_H, I2C_MEMADD_SIZE_8BIT, &Out_Temp_H, 1, HAL_MAX
 463              		.loc 1 143 5 view .LVU76
 464 002c 0296     		str	r6, [sp, #8]
 465 002e 0194     		str	r4, [sp, #4]
 466 0030 0DF11603 		add	r3, sp, #22
 467 0034 0093     		str	r3, [sp]
 468 0036 2346     		mov	r3, r4
 469 0038 2122     		movs	r2, #33
 470 003a D621     		movs	r1, #214
 471 003c 2846     		mov	r0, r5
 472 003e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 473              	.LVL24:
 144:Core/Src/main.c ****     Raw_Temp = ((Out_Temp_H<<8)| Out_Temp_L);
 474              		.loc 1 144 5 view .LVU77
 475              		.loc 1 144 32 is_stmt 0 view .LVU78
 476 0042 9DF81600 		ldrb	r0, [sp, #22]	@ zero_extendqisi2
 477 0046 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 478              	.LVL25:
 145:Core/Src/main.c ****     degreeCelsius = (float)Raw_Temp/256;
 479              		.loc 1 145 5 is_stmt 1 view .LVU79
 480              		.loc 1 145 21 is_stmt 0 view .LVU80
 481 004a 43EA0020 		orr	r0, r3, r0, lsl #8
 482              	.LVL26:
 483              		.loc 1 145 21 view .LVU81
 484 004e FFF7FEFF 		bl	__aeabi_ui2f
 485              	.LVL27:
 486              		.loc 1 145 19 view .LVU82
 487 0052 4FF06E51 		mov	r1, #998244352
 488 0056 FFF7FEFF 		bl	__aeabi_fmul
 489              	.LVL28:
ARM GAS  /tmp/ccjZEZrM.s 			page 12


 146:Core/Src/main.c ****     return (degreeCelsius);
 490              		.loc 1 146 5 is_stmt 1 view .LVU83
 147:Core/Src/main.c **** }
 491              		.loc 1 147 1 is_stmt 0 view .LVU84
 492 005a 06B0     		add	sp, sp, #24
 493              		.cfi_def_cfa_offset 16
 494              		@ sp needed
 495 005c 70BD     		pop	{r4, r5, r6, pc}
 496              	.L36:
 497 005e 00BF     		.align	2
 498              	.L35:
 499 0060 00000000 		.word	hi2c1
 500              		.cfi_endproc
 501              	.LFE74:
 503              		.section	.text.LSM6DS0_ReadGyro_X,"ax",%progbits
 504              		.align	1
 505              		.global	LSM6DS0_ReadGyro_X
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 510              	LSM6DS0_ReadGyro_X:
 511              	.LFB75:
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** float LSM6DS0_ReadGyro_X() {
 512              		.loc 1 149 28 is_stmt 1 view -0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 8
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516 0000 70B5     		push	{r4, r5, r6, lr}
 517              		.cfi_def_cfa_offset 16
 518              		.cfi_offset 4, -16
 519              		.cfi_offset 5, -12
 520              		.cfi_offset 6, -8
 521              		.cfi_offset 14, -4
 522 0002 86B0     		sub	sp, sp, #24
 523              		.cfi_def_cfa_offset 40
 150:Core/Src/main.c ****     uint8_t Out_X_G_L = 0;
 524              		.loc 1 150 5 view .LVU86
 525              		.loc 1 150 13 is_stmt 0 view .LVU87
 526 0004 0023     		movs	r3, #0
 527 0006 8DF81730 		strb	r3, [sp, #23]
 151:Core/Src/main.c **** 	  uint8_t Out_X_G_H = 0;
 528              		.loc 1 151 4 is_stmt 1 view .LVU88
 529              		.loc 1 151 12 is_stmt 0 view .LVU89
 530 000a 8DF81630 		strb	r3, [sp, #22]
 152:Core/Src/main.c ****     int16_t Raw_X = 0;
 531              		.loc 1 152 5 is_stmt 1 view .LVU90
 532              	.LVL29:
 153:Core/Src/main.c ****     float Gyro_X = 0;
 533              		.loc 1 153 5 view .LVU91
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, LSM6DS0_OUT_X_G_L, I2C_MEMADD_SIZE_8BIT, &Out_X_G_L, 1, 
 534              		.loc 1 155 5 view .LVU92
 535 000e 144D     		ldr	r5, .L39
 536 0010 4FF0FF36 		mov	r6, #-1
 537 0014 0296     		str	r6, [sp, #8]
 538 0016 0124     		movs	r4, #1
ARM GAS  /tmp/ccjZEZrM.s 			page 13


 539 0018 0194     		str	r4, [sp, #4]
 540 001a 0DF11703 		add	r3, sp, #23
 541 001e 0093     		str	r3, [sp]
 542 0020 2346     		mov	r3, r4
 543 0022 2222     		movs	r2, #34
 544 0024 D621     		movs	r1, #214
 545 0026 2846     		mov	r0, r5
 546 0028 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 547              	.LVL30:
 156:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, LSM6DS0_OUT_X_G_H, I2C_MEMADD_SIZE_8BIT, &Out_X_G_H, 1, 
 548              		.loc 1 156 5 view .LVU93
 549 002c 0296     		str	r6, [sp, #8]
 550 002e 0194     		str	r4, [sp, #4]
 551 0030 0DF11603 		add	r3, sp, #22
 552 0034 0093     		str	r3, [sp]
 553 0036 2346     		mov	r3, r4
 554 0038 2322     		movs	r2, #35
 555 003a D621     		movs	r1, #214
 556 003c 2846     		mov	r0, r5
 557 003e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 558              	.LVL31:
 157:Core/Src/main.c ****     Raw_X = ((Out_X_G_H<<8)| Out_X_G_L);
 559              		.loc 1 157 5 view .LVU94
 560              		.loc 1 157 28 is_stmt 0 view .LVU95
 561 0042 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 562 0046 1B02     		lsls	r3, r3, #8
 563 0048 1BB2     		sxth	r3, r3
 564 004a 9DF81700 		ldrb	r0, [sp, #23]	@ zero_extendqisi2
 565              	.LVL32:
 158:Core/Src/main.c ****     Gyro_X = (float)Raw_X*70;
 566              		.loc 1 158 5 is_stmt 1 view .LVU96
 567              		.loc 1 158 14 is_stmt 0 view .LVU97
 568 004e 1843     		orrs	r0, r0, r3
 569              	.LVL33:
 570              		.loc 1 158 14 view .LVU98
 571 0050 FFF7FEFF 		bl	__aeabi_i2f
 572              	.LVL34:
 573              		.loc 1 158 12 view .LVU99
 574 0054 0349     		ldr	r1, .L39+4
 575 0056 FFF7FEFF 		bl	__aeabi_fmul
 576              	.LVL35:
 159:Core/Src/main.c ****     return (Gyro_X);
 577              		.loc 1 159 5 is_stmt 1 view .LVU100
 160:Core/Src/main.c **** }
 578              		.loc 1 160 1 is_stmt 0 view .LVU101
 579 005a 06B0     		add	sp, sp, #24
 580              		.cfi_def_cfa_offset 16
 581              		@ sp needed
 582 005c 70BD     		pop	{r4, r5, r6, pc}
 583              	.L40:
 584 005e 00BF     		.align	2
 585              	.L39:
 586 0060 00000000 		.word	hi2c1
 587 0064 00008C42 		.word	1116471296
 588              		.cfi_endproc
 589              	.LFE75:
 591              		.section	.text.LSM6DS0_ReadGyro_Y,"ax",%progbits
ARM GAS  /tmp/ccjZEZrM.s 			page 14


 592              		.align	1
 593              		.global	LSM6DS0_ReadGyro_Y
 594              		.syntax unified
 595              		.thumb
 596              		.thumb_func
 598              	LSM6DS0_ReadGyro_Y:
 599              	.LFB76:
 161:Core/Src/main.c **** float LSM6DS0_ReadGyro_Y() {
 600              		.loc 1 161 28 is_stmt 1 view -0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 8
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 604 0000 70B5     		push	{r4, r5, r6, lr}
 605              		.cfi_def_cfa_offset 16
 606              		.cfi_offset 4, -16
 607              		.cfi_offset 5, -12
 608              		.cfi_offset 6, -8
 609              		.cfi_offset 14, -4
 610 0002 86B0     		sub	sp, sp, #24
 611              		.cfi_def_cfa_offset 40
 162:Core/Src/main.c ****     uint8_t Out_Y_G_L = 0;
 612              		.loc 1 162 5 view .LVU103
 613              		.loc 1 162 13 is_stmt 0 view .LVU104
 614 0004 0023     		movs	r3, #0
 615 0006 8DF81730 		strb	r3, [sp, #23]
 163:Core/Src/main.c **** 	  uint8_t Out_Y_G_H = 0;
 616              		.loc 1 163 4 is_stmt 1 view .LVU105
 617              		.loc 1 163 12 is_stmt 0 view .LVU106
 618 000a 8DF81630 		strb	r3, [sp, #22]
 164:Core/Src/main.c ****     int16_t Raw_Y = 0;
 619              		.loc 1 164 5 is_stmt 1 view .LVU107
 620              	.LVL36:
 165:Core/Src/main.c ****     float Gyro_Y = 0;
 621              		.loc 1 165 5 view .LVU108
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, LSM6DS0_OUT_Y_G_L, I2C_MEMADD_SIZE_8BIT, &Out_Y_G_L, 1, 
 622              		.loc 1 167 5 view .LVU109
 623 000e 144D     		ldr	r5, .L43
 624 0010 4FF0FF36 		mov	r6, #-1
 625 0014 0296     		str	r6, [sp, #8]
 626 0016 0124     		movs	r4, #1
 627 0018 0194     		str	r4, [sp, #4]
 628 001a 0DF11703 		add	r3, sp, #23
 629 001e 0093     		str	r3, [sp]
 630 0020 2346     		mov	r3, r4
 631 0022 2422     		movs	r2, #36
 632 0024 D621     		movs	r1, #214
 633 0026 2846     		mov	r0, r5
 634 0028 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 635              	.LVL37:
 168:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, LSM6DS0_OUT_Y_G_H, I2C_MEMADD_SIZE_8BIT, &Out_Y_G_H, 1, 
 636              		.loc 1 168 5 view .LVU110
 637 002c 0296     		str	r6, [sp, #8]
 638 002e 0194     		str	r4, [sp, #4]
 639 0030 0DF11603 		add	r3, sp, #22
 640 0034 0093     		str	r3, [sp]
 641 0036 2346     		mov	r3, r4
ARM GAS  /tmp/ccjZEZrM.s 			page 15


 642 0038 2522     		movs	r2, #37
 643 003a D621     		movs	r1, #214
 644 003c 2846     		mov	r0, r5
 645 003e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 646              	.LVL38:
 169:Core/Src/main.c ****     Raw_Y = ((Out_Y_G_H<<8)| Out_Y_G_L);
 647              		.loc 1 169 5 view .LVU111
 648              		.loc 1 169 28 is_stmt 0 view .LVU112
 649 0042 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 650 0046 1B02     		lsls	r3, r3, #8
 651 0048 1BB2     		sxth	r3, r3
 652 004a 9DF81700 		ldrb	r0, [sp, #23]	@ zero_extendqisi2
 653              	.LVL39:
 170:Core/Src/main.c ****     Gyro_Y = (float)Raw_Y*70;
 654              		.loc 1 170 5 is_stmt 1 view .LVU113
 655              		.loc 1 170 14 is_stmt 0 view .LVU114
 656 004e 1843     		orrs	r0, r0, r3
 657              	.LVL40:
 658              		.loc 1 170 14 view .LVU115
 659 0050 FFF7FEFF 		bl	__aeabi_i2f
 660              	.LVL41:
 661              		.loc 1 170 12 view .LVU116
 662 0054 0349     		ldr	r1, .L43+4
 663 0056 FFF7FEFF 		bl	__aeabi_fmul
 664              	.LVL42:
 171:Core/Src/main.c ****     return (Gyro_Y);
 665              		.loc 1 171 5 is_stmt 1 view .LVU117
 172:Core/Src/main.c **** }
 666              		.loc 1 172 1 is_stmt 0 view .LVU118
 667 005a 06B0     		add	sp, sp, #24
 668              		.cfi_def_cfa_offset 16
 669              		@ sp needed
 670 005c 70BD     		pop	{r4, r5, r6, pc}
 671              	.L44:
 672 005e 00BF     		.align	2
 673              	.L43:
 674 0060 00000000 		.word	hi2c1
 675 0064 00008C42 		.word	1116471296
 676              		.cfi_endproc
 677              	.LFE76:
 679              		.section	.text.LSM6DS0_ReadGyro_Z,"ax",%progbits
 680              		.align	1
 681              		.global	LSM6DS0_ReadGyro_Z
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
 686              	LSM6DS0_ReadGyro_Z:
 687              	.LFB77:
 173:Core/Src/main.c **** float LSM6DS0_ReadGyro_Z() {
 688              		.loc 1 173 28 is_stmt 1 view -0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 8
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692 0000 70B5     		push	{r4, r5, r6, lr}
 693              		.cfi_def_cfa_offset 16
 694              		.cfi_offset 4, -16
 695              		.cfi_offset 5, -12
ARM GAS  /tmp/ccjZEZrM.s 			page 16


 696              		.cfi_offset 6, -8
 697              		.cfi_offset 14, -4
 698 0002 86B0     		sub	sp, sp, #24
 699              		.cfi_def_cfa_offset 40
 174:Core/Src/main.c ****     uint8_t Out_Z_G_L = 0;
 700              		.loc 1 174 5 view .LVU120
 701              		.loc 1 174 13 is_stmt 0 view .LVU121
 702 0004 0023     		movs	r3, #0
 703 0006 8DF81730 		strb	r3, [sp, #23]
 175:Core/Src/main.c **** 	  uint8_t Out_Z_G_H = 0;
 704              		.loc 1 175 4 is_stmt 1 view .LVU122
 705              		.loc 1 175 12 is_stmt 0 view .LVU123
 706 000a 8DF81630 		strb	r3, [sp, #22]
 176:Core/Src/main.c ****     int16_t Raw_Z = 0;
 707              		.loc 1 176 5 is_stmt 1 view .LVU124
 708              	.LVL43:
 177:Core/Src/main.c ****     float Gyro_Z = 0;
 709              		.loc 1 177 5 view .LVU125
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, LSM6DS0_OUT_Z_G_L, I2C_MEMADD_SIZE_8BIT, &Out_Z_G_L, 1, 
 710              		.loc 1 179 5 view .LVU126
 711 000e 144D     		ldr	r5, .L47
 712 0010 4FF0FF36 		mov	r6, #-1
 713 0014 0296     		str	r6, [sp, #8]
 714 0016 0124     		movs	r4, #1
 715 0018 0194     		str	r4, [sp, #4]
 716 001a 0DF11703 		add	r3, sp, #23
 717 001e 0093     		str	r3, [sp]
 718 0020 2346     		mov	r3, r4
 719 0022 2622     		movs	r2, #38
 720 0024 D621     		movs	r1, #214
 721 0026 2846     		mov	r0, r5
 722 0028 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 723              	.LVL44:
 180:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, LSM6DS0_OUT_Z_G_H, I2C_MEMADD_SIZE_8BIT, &Out_Z_G_H, 1, 
 724              		.loc 1 180 5 view .LVU127
 725 002c 0296     		str	r6, [sp, #8]
 726 002e 0194     		str	r4, [sp, #4]
 727 0030 0DF11603 		add	r3, sp, #22
 728 0034 0093     		str	r3, [sp]
 729 0036 2346     		mov	r3, r4
 730 0038 2722     		movs	r2, #39
 731 003a D621     		movs	r1, #214
 732 003c 2846     		mov	r0, r5
 733 003e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 734              	.LVL45:
 181:Core/Src/main.c ****     Raw_Z = ((Out_Z_G_H<<8)| Out_Z_G_L);
 735              		.loc 1 181 5 view .LVU128
 736              		.loc 1 181 28 is_stmt 0 view .LVU129
 737 0042 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 738 0046 1B02     		lsls	r3, r3, #8
 739 0048 1BB2     		sxth	r3, r3
 740 004a 9DF81700 		ldrb	r0, [sp, #23]	@ zero_extendqisi2
 741              	.LVL46:
 182:Core/Src/main.c ****     Gyro_Z = (float)Raw_Z*70;
 742              		.loc 1 182 5 is_stmt 1 view .LVU130
 743              		.loc 1 182 14 is_stmt 0 view .LVU131
ARM GAS  /tmp/ccjZEZrM.s 			page 17


 744 004e 1843     		orrs	r0, r0, r3
 745              	.LVL47:
 746              		.loc 1 182 14 view .LVU132
 747 0050 FFF7FEFF 		bl	__aeabi_i2f
 748              	.LVL48:
 749              		.loc 1 182 12 view .LVU133
 750 0054 0349     		ldr	r1, .L47+4
 751 0056 FFF7FEFF 		bl	__aeabi_fmul
 752              	.LVL49:
 183:Core/Src/main.c ****     return (Gyro_Z);
 753              		.loc 1 183 5 is_stmt 1 view .LVU134
 184:Core/Src/main.c **** }
 754              		.loc 1 184 1 is_stmt 0 view .LVU135
 755 005a 06B0     		add	sp, sp, #24
 756              		.cfi_def_cfa_offset 16
 757              		@ sp needed
 758 005c 70BD     		pop	{r4, r5, r6, pc}
 759              	.L48:
 760 005e 00BF     		.align	2
 761              	.L47:
 762 0060 00000000 		.word	hi2c1
 763 0064 00008C42 		.word	1116471296
 764              		.cfi_endproc
 765              	.LFE77:
 767              		.section	.text.LSM6DS0_ReadAccel_X,"ax",%progbits
 768              		.align	1
 769              		.global	LSM6DS0_ReadAccel_X
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 774              	LSM6DS0_ReadAccel_X:
 775              	.LFB78:
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** float LSM6DS0_ReadAccel_X(void) {
 776              		.loc 1 187 33 is_stmt 1 view -0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 8
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780 0000 70B5     		push	{r4, r5, r6, lr}
 781              		.cfi_def_cfa_offset 16
 782              		.cfi_offset 4, -16
 783              		.cfi_offset 5, -12
 784              		.cfi_offset 6, -8
 785              		.cfi_offset 14, -4
 786 0002 86B0     		sub	sp, sp, #24
 787              		.cfi_def_cfa_offset 40
 188:Core/Src/main.c ****     uint8_t Out_X_XL_L = 0;
 788              		.loc 1 188 5 view .LVU137
 789              		.loc 1 188 13 is_stmt 0 view .LVU138
 790 0004 0023     		movs	r3, #0
 791 0006 8DF81730 		strb	r3, [sp, #23]
 189:Core/Src/main.c **** 	  uint8_t Out_X_XL_H = 0;
 792              		.loc 1 189 4 is_stmt 1 view .LVU139
 793              		.loc 1 189 12 is_stmt 0 view .LVU140
 794 000a 8DF81630 		strb	r3, [sp, #22]
 190:Core/Src/main.c ****     int16_t Raw_X = 0;
ARM GAS  /tmp/ccjZEZrM.s 			page 18


 795              		.loc 1 190 5 is_stmt 1 view .LVU141
 796              	.LVL50:
 191:Core/Src/main.c ****     float Acceleration_X = 0;
 797              		.loc 1 191 5 view .LVU142
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, OUT_X_L_XL, I2C_MEMADD_SIZE_8BIT, &Out_X_XL_L, 1, HAL_MA
 798              		.loc 1 193 5 view .LVU143
 799 000e 144D     		ldr	r5, .L51
 800 0010 4FF0FF36 		mov	r6, #-1
 801 0014 0296     		str	r6, [sp, #8]
 802 0016 0124     		movs	r4, #1
 803 0018 0194     		str	r4, [sp, #4]
 804 001a 0DF11703 		add	r3, sp, #23
 805 001e 0093     		str	r3, [sp]
 806 0020 2346     		mov	r3, r4
 807 0022 2822     		movs	r2, #40
 808 0024 D621     		movs	r1, #214
 809 0026 2846     		mov	r0, r5
 810 0028 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 811              	.LVL51:
 194:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, OUT_X_H_XL, I2C_MEMADD_SIZE_8BIT, &Out_X_XL_H, 1, HAL_MA
 812              		.loc 1 194 5 view .LVU144
 813 002c 0296     		str	r6, [sp, #8]
 814 002e 0194     		str	r4, [sp, #4]
 815 0030 0DF11603 		add	r3, sp, #22
 816 0034 0093     		str	r3, [sp]
 817 0036 2346     		mov	r3, r4
 818 0038 2922     		movs	r2, #41
 819 003a D621     		movs	r1, #214
 820 003c 2846     		mov	r0, r5
 821 003e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 822              	.LVL52:
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****     Raw_X = ((Out_X_XL_H << 8) | Out_X_XL_L);
 823              		.loc 1 196 5 view .LVU145
 824              		.loc 1 196 32 is_stmt 0 view .LVU146
 825 0042 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 826 0046 1B02     		lsls	r3, r3, #8
 827 0048 1BB2     		sxth	r3, r3
 828 004a 9DF81700 		ldrb	r0, [sp, #23]	@ zero_extendqisi2
 829              	.LVL53:
 197:Core/Src/main.c ****     Acceleration_X = (float)Raw_X*0.061f;
 830              		.loc 1 197 5 is_stmt 1 view .LVU147
 831              		.loc 1 197 22 is_stmt 0 view .LVU148
 832 004e 1843     		orrs	r0, r0, r3
 833              	.LVL54:
 834              		.loc 1 197 22 view .LVU149
 835 0050 FFF7FEFF 		bl	__aeabi_i2f
 836              	.LVL55:
 837              		.loc 1 197 20 view .LVU150
 838 0054 0349     		ldr	r1, .L51+4
 839 0056 FFF7FEFF 		bl	__aeabi_fmul
 840              	.LVL56:
 198:Core/Src/main.c ****     return (Acceleration_X);
 841              		.loc 1 198 5 is_stmt 1 view .LVU151
 199:Core/Src/main.c **** }
 842              		.loc 1 199 1 is_stmt 0 view .LVU152
ARM GAS  /tmp/ccjZEZrM.s 			page 19


 843 005a 06B0     		add	sp, sp, #24
 844              		.cfi_def_cfa_offset 16
 845              		@ sp needed
 846 005c 70BD     		pop	{r4, r5, r6, pc}
 847              	.L52:
 848 005e 00BF     		.align	2
 849              	.L51:
 850 0060 00000000 		.word	hi2c1
 851 0064 23DB793D 		.word	1031396131
 852              		.cfi_endproc
 853              	.LFE78:
 855              		.section	.text.LSM6DS0_ReadAccel_Y,"ax",%progbits
 856              		.align	1
 857              		.global	LSM6DS0_ReadAccel_Y
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 862              	LSM6DS0_ReadAccel_Y:
 863              	.LFB79:
 200:Core/Src/main.c **** float LSM6DS0_ReadAccel_Y(void) {
 864              		.loc 1 200 33 is_stmt 1 view -0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 8
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868 0000 70B5     		push	{r4, r5, r6, lr}
 869              		.cfi_def_cfa_offset 16
 870              		.cfi_offset 4, -16
 871              		.cfi_offset 5, -12
 872              		.cfi_offset 6, -8
 873              		.cfi_offset 14, -4
 874 0002 86B0     		sub	sp, sp, #24
 875              		.cfi_def_cfa_offset 40
 201:Core/Src/main.c ****     uint8_t Out_Y_XL_L = 0;
 876              		.loc 1 201 5 view .LVU154
 877              		.loc 1 201 13 is_stmt 0 view .LVU155
 878 0004 0023     		movs	r3, #0
 879 0006 8DF81730 		strb	r3, [sp, #23]
 202:Core/Src/main.c **** 	  uint8_t Out_Y_XL_H = 0;
 880              		.loc 1 202 4 is_stmt 1 view .LVU156
 881              		.loc 1 202 12 is_stmt 0 view .LVU157
 882 000a 8DF81630 		strb	r3, [sp, #22]
 203:Core/Src/main.c ****     int16_t Raw_Y = 0;
 883              		.loc 1 203 5 is_stmt 1 view .LVU158
 884              	.LVL57:
 204:Core/Src/main.c ****     float Acceleration_Y = 0;
 885              		.loc 1 204 5 view .LVU159
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, OUT_Y_L_XL, I2C_MEMADD_SIZE_8BIT, &Out_Y_XL_L, 1, HAL_MA
 886              		.loc 1 206 5 view .LVU160
 887 000e 144D     		ldr	r5, .L55
 888 0010 4FF0FF36 		mov	r6, #-1
 889 0014 0296     		str	r6, [sp, #8]
 890 0016 0124     		movs	r4, #1
 891 0018 0194     		str	r4, [sp, #4]
 892 001a 0DF11703 		add	r3, sp, #23
 893 001e 0093     		str	r3, [sp]
 894 0020 2346     		mov	r3, r4
ARM GAS  /tmp/ccjZEZrM.s 			page 20


 895 0022 2A22     		movs	r2, #42
 896 0024 D621     		movs	r1, #214
 897 0026 2846     		mov	r0, r5
 898 0028 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 899              	.LVL58:
 207:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, OUT_Y_H_XL, I2C_MEMADD_SIZE_8BIT, &Out_Y_XL_H, 1, HAL_MA
 900              		.loc 1 207 5 view .LVU161
 901 002c 0296     		str	r6, [sp, #8]
 902 002e 0194     		str	r4, [sp, #4]
 903 0030 0DF11603 		add	r3, sp, #22
 904 0034 0093     		str	r3, [sp]
 905 0036 2346     		mov	r3, r4
 906 0038 2B22     		movs	r2, #43
 907 003a D621     		movs	r1, #214
 908 003c 2846     		mov	r0, r5
 909 003e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 910              	.LVL59:
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****     Raw_Y = ((Out_Y_XL_H << 8) | Out_Y_XL_L);
 911              		.loc 1 209 5 view .LVU162
 912              		.loc 1 209 32 is_stmt 0 view .LVU163
 913 0042 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 914 0046 1B02     		lsls	r3, r3, #8
 915 0048 1BB2     		sxth	r3, r3
 916 004a 9DF81700 		ldrb	r0, [sp, #23]	@ zero_extendqisi2
 917              	.LVL60:
 210:Core/Src/main.c ****     Acceleration_Y = (float)Raw_Y*0.061f;
 918              		.loc 1 210 5 is_stmt 1 view .LVU164
 919              		.loc 1 210 22 is_stmt 0 view .LVU165
 920 004e 1843     		orrs	r0, r0, r3
 921              	.LVL61:
 922              		.loc 1 210 22 view .LVU166
 923 0050 FFF7FEFF 		bl	__aeabi_i2f
 924              	.LVL62:
 925              		.loc 1 210 20 view .LVU167
 926 0054 0349     		ldr	r1, .L55+4
 927 0056 FFF7FEFF 		bl	__aeabi_fmul
 928              	.LVL63:
 211:Core/Src/main.c ****     return (Acceleration_Y);
 929              		.loc 1 211 5 is_stmt 1 view .LVU168
 212:Core/Src/main.c **** }
 930              		.loc 1 212 1 is_stmt 0 view .LVU169
 931 005a 06B0     		add	sp, sp, #24
 932              		.cfi_def_cfa_offset 16
 933              		@ sp needed
 934 005c 70BD     		pop	{r4, r5, r6, pc}
 935              	.L56:
 936 005e 00BF     		.align	2
 937              	.L55:
 938 0060 00000000 		.word	hi2c1
 939 0064 23DB793D 		.word	1031396131
 940              		.cfi_endproc
 941              	.LFE79:
 943              		.section	.text.LSM6DS0_ReadAccel_Z,"ax",%progbits
 944              		.align	1
 945              		.global	LSM6DS0_ReadAccel_Z
 946              		.syntax unified
ARM GAS  /tmp/ccjZEZrM.s 			page 21


 947              		.thumb
 948              		.thumb_func
 950              	LSM6DS0_ReadAccel_Z:
 951              	.LFB80:
 213:Core/Src/main.c **** float LSM6DS0_ReadAccel_Z(void) {
 952              		.loc 1 213 33 is_stmt 1 view -0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 8
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956 0000 70B5     		push	{r4, r5, r6, lr}
 957              		.cfi_def_cfa_offset 16
 958              		.cfi_offset 4, -16
 959              		.cfi_offset 5, -12
 960              		.cfi_offset 6, -8
 961              		.cfi_offset 14, -4
 962 0002 86B0     		sub	sp, sp, #24
 963              		.cfi_def_cfa_offset 40
 214:Core/Src/main.c ****     uint8_t Out_Z_XL_L = 0;
 964              		.loc 1 214 5 view .LVU171
 965              		.loc 1 214 13 is_stmt 0 view .LVU172
 966 0004 0023     		movs	r3, #0
 967 0006 8DF81730 		strb	r3, [sp, #23]
 215:Core/Src/main.c **** 	  uint8_t Out_Z_XL_H = 0;
 968              		.loc 1 215 4 is_stmt 1 view .LVU173
 969              		.loc 1 215 12 is_stmt 0 view .LVU174
 970 000a 8DF81630 		strb	r3, [sp, #22]
 216:Core/Src/main.c ****     int16_t Raw_Z = 0;
 971              		.loc 1 216 5 is_stmt 1 view .LVU175
 972              	.LVL64:
 217:Core/Src/main.c ****     float Acceleration_Z = 0;
 973              		.loc 1 217 5 view .LVU176
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, OUT_Z_L_XL, I2C_MEMADD_SIZE_8BIT, &Out_Z_XL_L, 1, HAL_MA
 974              		.loc 1 219 5 view .LVU177
 975 000e 144D     		ldr	r5, .L59
 976 0010 4FF0FF36 		mov	r6, #-1
 977 0014 0296     		str	r6, [sp, #8]
 978 0016 0124     		movs	r4, #1
 979 0018 0194     		str	r4, [sp, #4]
 980 001a 0DF11703 		add	r3, sp, #23
 981 001e 0093     		str	r3, [sp]
 982 0020 2346     		mov	r3, r4
 983 0022 2C22     		movs	r2, #44
 984 0024 D621     		movs	r1, #214
 985 0026 2846     		mov	r0, r5
 986 0028 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 987              	.LVL65:
 220:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, OUT_Z_H_XL, I2C_MEMADD_SIZE_8BIT, &Out_Z_XL_H, 1, HAL_MA
 988              		.loc 1 220 5 view .LVU178
 989 002c 0296     		str	r6, [sp, #8]
 990 002e 0194     		str	r4, [sp, #4]
 991 0030 0DF11603 		add	r3, sp, #22
 992 0034 0093     		str	r3, [sp]
 993 0036 2346     		mov	r3, r4
 994 0038 2D22     		movs	r2, #45
 995 003a D621     		movs	r1, #214
 996 003c 2846     		mov	r0, r5
ARM GAS  /tmp/ccjZEZrM.s 			page 22


 997 003e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 998              	.LVL66:
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****     Raw_Z = ((Out_Z_XL_H << 8) | Out_Z_XL_L);
 999              		.loc 1 222 5 view .LVU179
 1000              		.loc 1 222 32 is_stmt 0 view .LVU180
 1001 0042 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 1002 0046 1B02     		lsls	r3, r3, #8
 1003 0048 1BB2     		sxth	r3, r3
 1004 004a 9DF81700 		ldrb	r0, [sp, #23]	@ zero_extendqisi2
 1005              	.LVL67:
 223:Core/Src/main.c ****     Acceleration_Z = (float)Raw_Z*0.061f;
 1006              		.loc 1 223 5 is_stmt 1 view .LVU181
 1007              		.loc 1 223 22 is_stmt 0 view .LVU182
 1008 004e 1843     		orrs	r0, r0, r3
 1009              	.LVL68:
 1010              		.loc 1 223 22 view .LVU183
 1011 0050 FFF7FEFF 		bl	__aeabi_i2f
 1012              	.LVL69:
 1013              		.loc 1 223 20 view .LVU184
 1014 0054 0349     		ldr	r1, .L59+4
 1015 0056 FFF7FEFF 		bl	__aeabi_fmul
 1016              	.LVL70:
 224:Core/Src/main.c ****     return (Acceleration_Z);
 1017              		.loc 1 224 5 is_stmt 1 view .LVU185
 225:Core/Src/main.c **** }
 1018              		.loc 1 225 1 is_stmt 0 view .LVU186
 1019 005a 06B0     		add	sp, sp, #24
 1020              		.cfi_def_cfa_offset 16
 1021              		@ sp needed
 1022 005c 70BD     		pop	{r4, r5, r6, pc}
 1023              	.L60:
 1024 005e 00BF     		.align	2
 1025              	.L59:
 1026 0060 00000000 		.word	hi2c1
 1027 0064 23DB793D 		.word	1031396131
 1028              		.cfi_endproc
 1029              	.LFE80:
 1031              		.section	.text.Error_Handler,"ax",%progbits
 1032              		.align	1
 1033              		.global	Error_Handler
 1034              		.syntax unified
 1035              		.thumb
 1036              		.thumb_func
 1038              	Error_Handler:
 1039              	.LFB83:
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****  
 228:Core/Src/main.c **** /* USER CODE END PD */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
 231:Core/Src/main.c **** /* USER CODE BEGIN PM */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** /* USER CODE END PM */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
 236:Core/Src/main.c **** 
ARM GAS  /tmp/ccjZEZrM.s 			page 23


 237:Core/Src/main.c **** /* USER CODE BEGIN PV */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** /* USER CODE END PV */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 242:Core/Src/main.c **** void SystemClock_Config(void);
 243:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** /* USER CODE END PFP */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 248:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c **** /* USER CODE END 0 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** /**
 253:Core/Src/main.c ****   * @brief  The application entry point.
 254:Core/Src/main.c ****   * @retval int
 255:Core/Src/main.c ****   */
 256:Core/Src/main.c **** int main(void)
 257:Core/Src/main.c **** {
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE END 1 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 266:Core/Src/main.c ****   HAL_Init();
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* USER CODE END Init */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* Configure the system clock */
 273:Core/Src/main.c ****   SystemClock_Config();
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****   /* USER CODE END SysInit */
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /* Initialize all configured peripherals */
 280:Core/Src/main.c ****   MX_GPIO_Init();
 281:Core/Src/main.c ****   MX_I2C1_Init();
 282:Core/Src/main.c ****   MX_USART1_UART_Init();
 283:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 284:Core/Src/main.c ****   if(LSM6DS0_begin()==0){
 285:Core/Src/main.c ****         printf("LSM_not_found\r\n");
 286:Core/Src/main.c ****   }else{
 287:Core/Src/main.c ****         printf("LSM_found..\r\n");
 288:Core/Src/main.c ****         printf("initializing six axis sensor....\r\n");
 289:Core/Src/main.c ****    }
 290:Core/Src/main.c ****   LSM6DS0_Init();
 291:Core/Src/main.c ****   if (check_Gyro_Init()!=1){
 292:Core/Src/main.c ****     printf("gyro_init_failed\r\n");
 293:Core/Src/main.c ****   }else{
ARM GAS  /tmp/ccjZEZrM.s 			page 24


 294:Core/Src/main.c ****     printf("gyro_init_successful\r\n");
 295:Core/Src/main.c ****   }
 296:Core/Src/main.c ****   if(check_XL_Init()!=1){
 297:Core/Src/main.c ****     printf("XL_init_failed\r\n");
 298:Core/Src/main.c ****   }
 299:Core/Src/main.c ****   else{
 300:Core/Src/main.c ****     printf("XL_init_successfull\r\n");
 301:Core/Src/main.c ****   }
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /* USER CODE END 2 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* Infinite loop */
 306:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 307:Core/Src/main.c ****   
 308:Core/Src/main.c ****     float Temp; 
 309:Core/Src/main.c ****     float gyro_data[3];
 310:Core/Src/main.c ****     float accel_data[3];
 311:Core/Src/main.c ****     int i;
 312:Core/Src/main.c ****     int intPart,fracPart;
 313:Core/Src/main.c ****     // uint8_t status;
 314:Core/Src/main.c ****     // HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, STATUS_REG, 1, &status, 6, HAL_MAX_DELAY);
 315:Core/Src/main.c ****   while (1)
 316:Core/Src/main.c ****   {
 317:Core/Src/main.c ****     // if(LSM6DS0_begin()==0){
 318:Core/Src/main.c ****     //     printf("LSM_not_found\r\n");
 319:Core/Src/main.c ****     // }else{
 320:Core/Src/main.c ****     //     printf("LSM_found..\r\n");
 321:Core/Src/main.c ****     //     printf("initializing six axis sensor....\r\n");
 322:Core/Src/main.c ****     // }
 323:Core/Src/main.c ****   
 324:Core/Src/main.c ****     // printf("hellow\r\n");
 325:Core/Src/main.c ****       gyro_data[0]= LSM6DS0_ReadGyro_X()/1000;
 326:Core/Src/main.c ****       gyro_data[1]= LSM6DS0_ReadGyro_Y()/1000;
 327:Core/Src/main.c ****       gyro_data[2]= LSM6DS0_ReadGyro_Z()/1000;
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****       accel_data[0]=LSM6DS0_ReadAccel_X();
 331:Core/Src/main.c ****       accel_data[1]=LSM6DS0_ReadAccel_Y();
 332:Core/Src/main.c ****       accel_data[2]=LSM6DS0_ReadAccel_Z();
 333:Core/Src/main.c **** 
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****       // Temp = LSM6DS0_ReadTemperature_C();
 336:Core/Src/main.c ****       printf("Temp :%d\r\n",(int)Temp);
 337:Core/Src/main.c ****       for(i=0; i < 4 ; i++)
 338:Core/Src/main.c ****       {
 339:Core/Src/main.c ****         dissectFloat(gyro_data[i], &intPart, &fracPart, 1);
 340:Core/Src/main.c ****         if (i==0)
 341:Core/Src/main.c ****         {
 342:Core/Src/main.c ****         printf("gyro_x = %d.%01d \r\n", intPart, fracPart);
 343:Core/Src/main.c ****         }
 344:Core/Src/main.c ****         if (i==1)
 345:Core/Src/main.c ****         {
 346:Core/Src/main.c ****         printf("gyro_y= %d.%01d \r\n", intPart, fracPart);
 347:Core/Src/main.c ****         }
 348:Core/Src/main.c ****         if (i==2)
 349:Core/Src/main.c ****         {
 350:Core/Src/main.c ****         printf("gyro_z= %d.%01d \r\n", intPart, fracPart);
ARM GAS  /tmp/ccjZEZrM.s 			page 25


 351:Core/Src/main.c ****         printf("-----------------\r\n");
 352:Core/Src/main.c ****         }
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****       }
 355:Core/Src/main.c ****       HAL_Delay(1000);
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****     //   dissectFloat(bus_vol, &intPart, &fracPart, 3);
 358:Core/Src/main.c ****     // printf("Bus_voltage = %d.%03d \r\n", intPart, fracPart);
 359:Core/Src/main.c ****     //   printf("Gyro: X=%d Y=%d Z=%d\r\n",(int)gyro_data[0],(int)gyro_data[1],(int)gyro_data[2]);
 360:Core/Src/main.c ****       // printf("Accel: X=%d Y=%d Z=%d\r\n",(int)accel_data[0],(int)accel_data[1],(int)accel_data[2
 361:Core/Src/main.c ****       
 362:Core/Src/main.c ****     /* USER CODE END WHILE */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 365:Core/Src/main.c ****   }
 366:Core/Src/main.c ****   
 367:Core/Src/main.c ****   /* USER CODE END 3 */
 368:Core/Src/main.c **** }
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** /**
 371:Core/Src/main.c ****   * @brief System Clock Configuration
 372:Core/Src/main.c ****   * @retval None
 373:Core/Src/main.c ****   */
 374:Core/Src/main.c **** void SystemClock_Config(void)
 375:Core/Src/main.c **** {
 376:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 377:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 380:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 381:Core/Src/main.c ****   */
 382:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 383:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 384:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 385:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 386:Core/Src/main.c ****   {
 387:Core/Src/main.c ****     Error_Handler();
 388:Core/Src/main.c ****   }
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 391:Core/Src/main.c ****   */
 392:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 393:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 394:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 395:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 396:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 397:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 400:Core/Src/main.c ****   {
 401:Core/Src/main.c ****     Error_Handler();
 402:Core/Src/main.c ****   }
 403:Core/Src/main.c **** }
 404:Core/Src/main.c **** 
 405:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** /* USER CODE END 4 */
ARM GAS  /tmp/ccjZEZrM.s 			page 26


 408:Core/Src/main.c **** 
 409:Core/Src/main.c **** /**
 410:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 411:Core/Src/main.c ****   * @retval None
 412:Core/Src/main.c ****   */
 413:Core/Src/main.c **** void Error_Handler(void)
 414:Core/Src/main.c **** {
 1040              		.loc 1 414 1 is_stmt 1 view -0
 1041              		.cfi_startproc
 1042              		@ Volatile: function does not return.
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 1045              		@ link register save eliminated.
 415:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 416:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 417:Core/Src/main.c ****   __disable_irq();
 1046              		.loc 1 417 3 view .LVU188
 1047              	.LBB4:
 1048              	.LBI4:
 1049              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccjZEZrM.s 			page 27


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  /tmp/ccjZEZrM.s 			page 28


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1050              		.loc 2 140 27 view .LVU189
 1051              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1052              		.loc 2 142 3 view .LVU190
 1053              		.syntax unified
 1054              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1055 0000 72B6     		cpsid i
 1056              	@ 0 "" 2
 1057              		.thumb
 1058              		.syntax unified
ARM GAS  /tmp/ccjZEZrM.s 			page 29


 1059              	.L62:
 1060              	.LBE5:
 1061              	.LBE4:
 418:Core/Src/main.c ****   while (1)
 1062              		.loc 1 418 3 view .LVU191
 419:Core/Src/main.c ****   {
 420:Core/Src/main.c ****   }
 1063              		.loc 1 420 3 view .LVU192
 418:Core/Src/main.c ****   while (1)
 1064              		.loc 1 418 9 view .LVU193
 1065 0002 FEE7     		b	.L62
 1066              		.cfi_endproc
 1067              	.LFE83:
 1069              		.section	.text.SystemClock_Config,"ax",%progbits
 1070              		.align	1
 1071              		.global	SystemClock_Config
 1072              		.syntax unified
 1073              		.thumb
 1074              		.thumb_func
 1076              	SystemClock_Config:
 1077              	.LFB82:
 375:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1078              		.loc 1 375 1 view -0
 1079              		.cfi_startproc
 1080              		@ args = 0, pretend = 0, frame = 64
 1081              		@ frame_needed = 0, uses_anonymous_args = 0
 1082 0000 00B5     		push	{lr}
 1083              		.cfi_def_cfa_offset 4
 1084              		.cfi_offset 14, -4
 1085 0002 91B0     		sub	sp, sp, #68
 1086              		.cfi_def_cfa_offset 72
 376:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1087              		.loc 1 376 3 view .LVU195
 376:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1088              		.loc 1 376 22 is_stmt 0 view .LVU196
 1089 0004 2822     		movs	r2, #40
 1090 0006 0021     		movs	r1, #0
 1091 0008 06A8     		add	r0, sp, #24
 1092 000a FFF7FEFF 		bl	memset
 1093              	.LVL71:
 377:Core/Src/main.c **** 
 1094              		.loc 1 377 3 is_stmt 1 view .LVU197
 377:Core/Src/main.c **** 
 1095              		.loc 1 377 22 is_stmt 0 view .LVU198
 1096 000e 0023     		movs	r3, #0
 1097 0010 0193     		str	r3, [sp, #4]
 1098 0012 0293     		str	r3, [sp, #8]
 1099 0014 0393     		str	r3, [sp, #12]
 1100 0016 0493     		str	r3, [sp, #16]
 1101 0018 0593     		str	r3, [sp, #20]
 382:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1102              		.loc 1 382 3 is_stmt 1 view .LVU199
 382:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1103              		.loc 1 382 36 is_stmt 0 view .LVU200
 1104 001a 0123     		movs	r3, #1
 1105 001c 0693     		str	r3, [sp, #24]
 383:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
ARM GAS  /tmp/ccjZEZrM.s 			page 30


 1106              		.loc 1 383 3 is_stmt 1 view .LVU201
 383:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1107              		.loc 1 383 30 is_stmt 0 view .LVU202
 1108 001e 4FF48033 		mov	r3, #65536
 1109 0022 0793     		str	r3, [sp, #28]
 384:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1110              		.loc 1 384 3 is_stmt 1 view .LVU203
 385:Core/Src/main.c ****   {
 1111              		.loc 1 385 3 view .LVU204
 385:Core/Src/main.c ****   {
 1112              		.loc 1 385 7 is_stmt 0 view .LVU205
 1113 0024 06A8     		add	r0, sp, #24
 1114 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1115              	.LVL72:
 385:Core/Src/main.c ****   {
 1116              		.loc 1 385 6 discriminator 1 view .LVU206
 1117 002a 70B9     		cbnz	r0, .L67
 392:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1118              		.loc 1 392 3 is_stmt 1 view .LVU207
 392:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1119              		.loc 1 392 31 is_stmt 0 view .LVU208
 1120 002c 0F23     		movs	r3, #15
 1121 002e 0193     		str	r3, [sp, #4]
 394:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1122              		.loc 1 394 3 is_stmt 1 view .LVU209
 394:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1123              		.loc 1 394 34 is_stmt 0 view .LVU210
 1124 0030 0123     		movs	r3, #1
 1125 0032 0293     		str	r3, [sp, #8]
 395:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1126              		.loc 1 395 3 is_stmt 1 view .LVU211
 395:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1127              		.loc 1 395 35 is_stmt 0 view .LVU212
 1128 0034 0021     		movs	r1, #0
 1129 0036 0391     		str	r1, [sp, #12]
 396:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1130              		.loc 1 396 3 is_stmt 1 view .LVU213
 396:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1131              		.loc 1 396 36 is_stmt 0 view .LVU214
 1132 0038 0491     		str	r1, [sp, #16]
 397:Core/Src/main.c **** 
 1133              		.loc 1 397 3 is_stmt 1 view .LVU215
 397:Core/Src/main.c **** 
 1134              		.loc 1 397 36 is_stmt 0 view .LVU216
 1135 003a 0591     		str	r1, [sp, #20]
 399:Core/Src/main.c ****   {
 1136              		.loc 1 399 3 is_stmt 1 view .LVU217
 399:Core/Src/main.c ****   {
 1137              		.loc 1 399 7 is_stmt 0 view .LVU218
 1138 003c 01A8     		add	r0, sp, #4
 1139 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1140              	.LVL73:
 399:Core/Src/main.c ****   {
 1141              		.loc 1 399 6 discriminator 1 view .LVU219
 1142 0042 20B9     		cbnz	r0, .L68
 403:Core/Src/main.c **** 
 1143              		.loc 1 403 1 view .LVU220
ARM GAS  /tmp/ccjZEZrM.s 			page 31


 1144 0044 11B0     		add	sp, sp, #68
 1145              		.cfi_remember_state
 1146              		.cfi_def_cfa_offset 4
 1147              		@ sp needed
 1148 0046 5DF804FB 		ldr	pc, [sp], #4
 1149              	.L67:
 1150              		.cfi_restore_state
 387:Core/Src/main.c ****   }
 1151              		.loc 1 387 5 is_stmt 1 view .LVU221
 1152 004a FFF7FEFF 		bl	Error_Handler
 1153              	.LVL74:
 1154              	.L68:
 401:Core/Src/main.c ****   }
 1155              		.loc 1 401 5 view .LVU222
 1156 004e FFF7FEFF 		bl	Error_Handler
 1157              	.LVL75:
 1158              		.cfi_endproc
 1159              	.LFE82:
 1161              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1162              		.align	2
 1163              	.LC0:
 1164 0000 4C534D5F 		.ascii	"LSM_not_found\015\000"
 1164      6E6F745F 
 1164      666F756E 
 1164      640D00
 1165 000f 00       		.align	2
 1166              	.LC1:
 1167 0010 4C534D5F 		.ascii	"LSM_found..\015\000"
 1167      666F756E 
 1167      642E2E0D 
 1167      00
 1168 001d 000000   		.align	2
 1169              	.LC2:
 1170 0020 696E6974 		.ascii	"initializing six axis sensor....\015\000"
 1170      69616C69 
 1170      7A696E67 
 1170      20736978 
 1170      20617869 
 1171 0042 0000     		.align	2
 1172              	.LC3:
 1173 0044 6779726F 		.ascii	"gyro_init_failed\015\000"
 1173      5F696E69 
 1173      745F6661 
 1173      696C6564 
 1173      0D00
 1174 0056 0000     		.align	2
 1175              	.LC4:
 1176 0058 6779726F 		.ascii	"gyro_init_successful\015\000"
 1176      5F696E69 
 1176      745F7375 
 1176      63636573 
 1176      7366756C 
 1177 006e 0000     		.align	2
 1178              	.LC5:
 1179 0070 584C5F69 		.ascii	"XL_init_failed\015\000"
 1179      6E69745F 
 1179      6661696C 
ARM GAS  /tmp/ccjZEZrM.s 			page 32


 1179      65640D00 
 1180              		.align	2
 1181              	.LC6:
 1182 0080 584C5F69 		.ascii	"XL_init_successfull\015\000"
 1182      6E69745F 
 1182      73756363 
 1182      65737366 
 1182      756C6C0D 
 1183              		.global	__aeabi_fdiv
 1184 0095 000000   		.align	2
 1185              	.LC7:
 1186 0098 54656D70 		.ascii	"Temp :%d\015\012\000"
 1186      203A2564 
 1186      0D0A00
 1187 00a3 00       		.align	2
 1188              	.LC8:
 1189 00a4 6779726F 		.ascii	"gyro_x = %d.%01d \015\012\000"
 1189      5F78203D 
 1189      2025642E 
 1189      25303164 
 1189      200D0A00 
 1190              		.align	2
 1191              	.LC9:
 1192 00b8 6779726F 		.ascii	"gyro_y= %d.%01d \015\012\000"
 1192      5F793D20 
 1192      25642E25 
 1192      30316420 
 1192      0D0A00
 1193 00cb 00       		.align	2
 1194              	.LC10:
 1195 00cc 6779726F 		.ascii	"gyro_z= %d.%01d \015\012\000"
 1195      5F7A3D20 
 1195      25642E25 
 1195      30316420 
 1195      0D0A00
 1196 00df 00       		.align	2
 1197              	.LC11:
 1198 00e0 2D2D2D2D 		.ascii	"-----------------\015\000"
 1198      2D2D2D2D 
 1198      2D2D2D2D 
 1198      2D2D2D2D 
 1198      2D0D00
 1199              		.section	.text.main,"ax",%progbits
 1200              		.align	1
 1201              		.global	main
 1202              		.syntax unified
 1203              		.thumb
 1204              		.thumb_func
 1206              	main:
 1207              	.LFB81:
 257:Core/Src/main.c **** 
 1208              		.loc 1 257 1 view -0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 32
 1211              		@ frame_needed = 0, uses_anonymous_args = 0
 1212 0000 10B5     		push	{r4, lr}
 1213              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccjZEZrM.s 			page 33


 1214              		.cfi_offset 4, -8
 1215              		.cfi_offset 14, -4
 1216 0002 88B0     		sub	sp, sp, #32
 1217              		.cfi_def_cfa_offset 40
 266:Core/Src/main.c **** 
 1218              		.loc 1 266 3 view .LVU224
 1219 0004 FFF7FEFF 		bl	HAL_Init
 1220              	.LVL76:
 273:Core/Src/main.c **** 
 1221              		.loc 1 273 3 view .LVU225
 1222 0008 FFF7FEFF 		bl	SystemClock_Config
 1223              	.LVL77:
 280:Core/Src/main.c ****   MX_I2C1_Init();
 1224              		.loc 1 280 3 view .LVU226
 1225 000c FFF7FEFF 		bl	MX_GPIO_Init
 1226              	.LVL78:
 281:Core/Src/main.c ****   MX_USART1_UART_Init();
 1227              		.loc 1 281 3 view .LVU227
 1228 0010 FFF7FEFF 		bl	MX_I2C1_Init
 1229              	.LVL79:
 282:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1230              		.loc 1 282 3 view .LVU228
 1231 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 1232              	.LVL80:
 284:Core/Src/main.c ****         printf("LSM_not_found\r\n");
 1233              		.loc 1 284 3 view .LVU229
 284:Core/Src/main.c ****         printf("LSM_not_found\r\n");
 1234              		.loc 1 284 6 is_stmt 0 view .LVU230
 1235 0018 FFF7FEFF 		bl	LSM6DS0_begin
 1236              	.LVL81:
 284:Core/Src/main.c ****         printf("LSM_not_found\r\n");
 1237              		.loc 1 284 5 discriminator 1 view .LVU231
 1238 001c 98B9     		cbnz	r0, .L70
 285:Core/Src/main.c ****   }else{
 1239              		.loc 1 285 9 is_stmt 1 view .LVU232
 1240 001e 3948     		ldr	r0, .L86
 1241 0020 FFF7FEFF 		bl	puts
 1242              	.LVL82:
 1243              	.L71:
 290:Core/Src/main.c ****   if (check_Gyro_Init()!=1){
 1244              		.loc 1 290 3 view .LVU233
 1245 0024 FFF7FEFF 		bl	LSM6DS0_Init
 1246              	.LVL83:
 291:Core/Src/main.c ****     printf("gyro_init_failed\r\n");
 1247              		.loc 1 291 3 view .LVU234
 291:Core/Src/main.c ****     printf("gyro_init_failed\r\n");
 1248              		.loc 1 291 7 is_stmt 0 view .LVU235
 1249 0028 FFF7FEFF 		bl	check_Gyro_Init
 1250              	.LVL84:
 291:Core/Src/main.c ****     printf("gyro_init_failed\r\n");
 1251              		.loc 1 291 6 discriminator 1 view .LVU236
 1252 002c 0128     		cmp	r0, #1
 1253 002e 11D0     		beq	.L72
 292:Core/Src/main.c ****   }else{
 1254              		.loc 1 292 5 is_stmt 1 view .LVU237
 1255 0030 3548     		ldr	r0, .L86+4
 1256 0032 FFF7FEFF 		bl	puts
ARM GAS  /tmp/ccjZEZrM.s 			page 34


 1257              	.LVL85:
 1258              	.L73:
 296:Core/Src/main.c ****     printf("XL_init_failed\r\n");
 1259              		.loc 1 296 3 view .LVU238
 296:Core/Src/main.c ****     printf("XL_init_failed\r\n");
 1260              		.loc 1 296 6 is_stmt 0 view .LVU239
 1261 0036 FFF7FEFF 		bl	check_XL_Init
 1262              	.LVL86:
 296:Core/Src/main.c ****     printf("XL_init_failed\r\n");
 1263              		.loc 1 296 5 discriminator 1 view .LVU240
 1264 003a 0128     		cmp	r0, #1
 1265 003c 0ED0     		beq	.L74
 297:Core/Src/main.c ****   }
 1266              		.loc 1 297 5 is_stmt 1 view .LVU241
 1267 003e 3348     		ldr	r0, .L86+8
 1268 0040 FFF7FEFF 		bl	puts
 1269              	.LVL87:
 1270 0044 3AE0     		b	.L75
 1271              	.L70:
 287:Core/Src/main.c ****         printf("initializing six axis sensor....\r\n");
 1272              		.loc 1 287 9 view .LVU242
 1273 0046 3248     		ldr	r0, .L86+12
 1274 0048 FFF7FEFF 		bl	puts
 1275              	.LVL88:
 288:Core/Src/main.c ****    }
 1276              		.loc 1 288 9 view .LVU243
 1277 004c 3148     		ldr	r0, .L86+16
 1278 004e FFF7FEFF 		bl	puts
 1279              	.LVL89:
 1280 0052 E7E7     		b	.L71
 1281              	.L72:
 294:Core/Src/main.c ****   }
 1282              		.loc 1 294 5 view .LVU244
 1283 0054 3048     		ldr	r0, .L86+20
 1284 0056 FFF7FEFF 		bl	puts
 1285              	.LVL90:
 1286 005a ECE7     		b	.L73
 1287              	.L74:
 300:Core/Src/main.c ****   }
 1288              		.loc 1 300 5 view .LVU245
 1289 005c 2F48     		ldr	r0, .L86+24
 1290 005e FFF7FEFF 		bl	puts
 1291              	.LVL91:
 1292 0062 2BE0     		b	.L75
 1293              	.LVL92:
 1294              	.L78:
 344:Core/Src/main.c ****         {
 1295              		.loc 1 344 9 view .LVU246
 344:Core/Src/main.c ****         {
 1296              		.loc 1 344 12 is_stmt 0 view .LVU247
 1297 0064 012C     		cmp	r4, #1
 1298 0066 16D0     		beq	.L83
 1299              	.L79:
 348:Core/Src/main.c ****         {
 1300              		.loc 1 348 9 is_stmt 1 view .LVU248
 348:Core/Src/main.c ****         {
 1301              		.loc 1 348 12 is_stmt 0 view .LVU249
ARM GAS  /tmp/ccjZEZrM.s 			page 35


 1302 0068 022C     		cmp	r4, #2
 1303 006a 1AD0     		beq	.L84
 1304              	.L80:
 337:Core/Src/main.c ****       {
 1305              		.loc 1 337 25 is_stmt 1 discriminator 2 view .LVU250
 1306 006c 0134     		adds	r4, r4, #1
 1307              	.LVL93:
 1308              	.L77:
 337:Core/Src/main.c ****       {
 1309              		.loc 1 337 18 discriminator 1 view .LVU251
 1310 006e 032C     		cmp	r4, #3
 1311 0070 20DC     		bgt	.L85
 339:Core/Src/main.c ****         if (i==0)
 1312              		.loc 1 339 9 view .LVU252
 1313 0072 0123     		movs	r3, #1
 1314 0074 6A46     		mov	r2, sp
 1315 0076 01A9     		add	r1, sp, #4
 1316 0078 08A8     		add	r0, sp, #32
 1317 007a 00EB8400 		add	r0, r0, r4, lsl #2
 1318 007e 50F80C0C 		ldr	r0, [r0, #-12]	@ float
 1319 0082 FFF7FEFF 		bl	dissectFloat
 1320              	.LVL94:
 340:Core/Src/main.c ****         {
 1321              		.loc 1 340 9 view .LVU253
 340:Core/Src/main.c ****         {
 1322              		.loc 1 340 12 is_stmt 0 view .LVU254
 1323 0086 002C     		cmp	r4, #0
 1324 0088 ECD1     		bne	.L78
 342:Core/Src/main.c ****         }
 1325              		.loc 1 342 9 is_stmt 1 view .LVU255
 1326 008a 009A     		ldr	r2, [sp]
 1327 008c 0199     		ldr	r1, [sp, #4]
 1328 008e 2448     		ldr	r0, .L86+28
 1329 0090 FFF7FEFF 		bl	printf
 1330              	.LVL95:
 1331 0094 E6E7     		b	.L78
 1332              	.L83:
 346:Core/Src/main.c ****         }
 1333              		.loc 1 346 9 view .LVU256
 1334 0096 009A     		ldr	r2, [sp]
 1335 0098 0199     		ldr	r1, [sp, #4]
 1336 009a 2248     		ldr	r0, .L86+32
 1337 009c FFF7FEFF 		bl	printf
 1338              	.LVL96:
 1339 00a0 E2E7     		b	.L79
 1340              	.L84:
 350:Core/Src/main.c ****         printf("-----------------\r\n");
 1341              		.loc 1 350 9 view .LVU257
 1342 00a2 009A     		ldr	r2, [sp]
 1343 00a4 0199     		ldr	r1, [sp, #4]
 1344 00a6 2048     		ldr	r0, .L86+36
 1345 00a8 FFF7FEFF 		bl	printf
 1346              	.LVL97:
 351:Core/Src/main.c ****         }
 1347              		.loc 1 351 9 view .LVU258
 1348 00ac 1F48     		ldr	r0, .L86+40
 1349 00ae FFF7FEFF 		bl	puts
ARM GAS  /tmp/ccjZEZrM.s 			page 36


 1350              	.LVL98:
 1351 00b2 DBE7     		b	.L80
 1352              	.L85:
 355:Core/Src/main.c **** 
 1353              		.loc 1 355 7 view .LVU259
 1354 00b4 4FF47A70 		mov	r0, #1000
 1355 00b8 FFF7FEFF 		bl	HAL_Delay
 1356              	.LVL99:
 315:Core/Src/main.c ****   {
 1357              		.loc 1 315 9 view .LVU260
 1358              	.L75:
 308:Core/Src/main.c ****     float gyro_data[3];
 1359              		.loc 1 308 5 view .LVU261
 309:Core/Src/main.c ****     float accel_data[3];
 1360              		.loc 1 309 5 view .LVU262
 310:Core/Src/main.c ****     int i;
 1361              		.loc 1 310 5 view .LVU263
 311:Core/Src/main.c ****     int intPart,fracPart;
 1362              		.loc 1 311 5 view .LVU264
 312:Core/Src/main.c ****     // uint8_t status;
 1363              		.loc 1 312 5 view .LVU265
 315:Core/Src/main.c ****   {
 1364              		.loc 1 315 3 view .LVU266
 325:Core/Src/main.c ****       gyro_data[1]= LSM6DS0_ReadGyro_Y()/1000;
 1365              		.loc 1 325 7 view .LVU267
 325:Core/Src/main.c ****       gyro_data[1]= LSM6DS0_ReadGyro_Y()/1000;
 1366              		.loc 1 325 21 is_stmt 0 view .LVU268
 1367 00bc FFF7FEFF 		bl	LSM6DS0_ReadGyro_X
 1368              	.LVL100:
 325:Core/Src/main.c ****       gyro_data[1]= LSM6DS0_ReadGyro_Y()/1000;
 1369              		.loc 1 325 41 discriminator 1 view .LVU269
 1370 00c0 1B49     		ldr	r1, .L86+44
 1371 00c2 FFF7FEFF 		bl	__aeabi_fdiv
 1372              	.LVL101:
 325:Core/Src/main.c ****       gyro_data[1]= LSM6DS0_ReadGyro_Y()/1000;
 1373              		.loc 1 325 19 discriminator 1 view .LVU270
 1374 00c6 0590     		str	r0, [sp, #20]	@ float
 326:Core/Src/main.c ****       gyro_data[2]= LSM6DS0_ReadGyro_Z()/1000;
 1375              		.loc 1 326 7 is_stmt 1 view .LVU271
 326:Core/Src/main.c ****       gyro_data[2]= LSM6DS0_ReadGyro_Z()/1000;
 1376              		.loc 1 326 21 is_stmt 0 view .LVU272
 1377 00c8 FFF7FEFF 		bl	LSM6DS0_ReadGyro_Y
 1378              	.LVL102:
 326:Core/Src/main.c ****       gyro_data[2]= LSM6DS0_ReadGyro_Z()/1000;
 1379              		.loc 1 326 41 discriminator 1 view .LVU273
 1380 00cc 1849     		ldr	r1, .L86+44
 1381 00ce FFF7FEFF 		bl	__aeabi_fdiv
 1382              	.LVL103:
 326:Core/Src/main.c ****       gyro_data[2]= LSM6DS0_ReadGyro_Z()/1000;
 1383              		.loc 1 326 19 discriminator 1 view .LVU274
 1384 00d2 0690     		str	r0, [sp, #24]	@ float
 327:Core/Src/main.c **** 
 1385              		.loc 1 327 7 is_stmt 1 view .LVU275
 327:Core/Src/main.c **** 
 1386              		.loc 1 327 21 is_stmt 0 view .LVU276
 1387 00d4 FFF7FEFF 		bl	LSM6DS0_ReadGyro_Z
 1388              	.LVL104:
ARM GAS  /tmp/ccjZEZrM.s 			page 37


 327:Core/Src/main.c **** 
 1389              		.loc 1 327 41 discriminator 1 view .LVU277
 1390 00d8 1549     		ldr	r1, .L86+44
 1391 00da FFF7FEFF 		bl	__aeabi_fdiv
 1392              	.LVL105:
 327:Core/Src/main.c **** 
 1393              		.loc 1 327 19 discriminator 1 view .LVU278
 1394 00de 0790     		str	r0, [sp, #28]	@ float
 330:Core/Src/main.c ****       accel_data[1]=LSM6DS0_ReadAccel_Y();
 1395              		.loc 1 330 7 is_stmt 1 view .LVU279
 330:Core/Src/main.c ****       accel_data[1]=LSM6DS0_ReadAccel_Y();
 1396              		.loc 1 330 21 is_stmt 0 view .LVU280
 1397 00e0 FFF7FEFF 		bl	LSM6DS0_ReadAccel_X
 1398              	.LVL106:
 330:Core/Src/main.c ****       accel_data[1]=LSM6DS0_ReadAccel_Y();
 1399              		.loc 1 330 20 discriminator 1 view .LVU281
 1400 00e4 0290     		str	r0, [sp, #8]	@ float
 331:Core/Src/main.c ****       accel_data[2]=LSM6DS0_ReadAccel_Z();
 1401              		.loc 1 331 7 is_stmt 1 view .LVU282
 331:Core/Src/main.c ****       accel_data[2]=LSM6DS0_ReadAccel_Z();
 1402              		.loc 1 331 21 is_stmt 0 view .LVU283
 1403 00e6 FFF7FEFF 		bl	LSM6DS0_ReadAccel_Y
 1404              	.LVL107:
 331:Core/Src/main.c ****       accel_data[2]=LSM6DS0_ReadAccel_Z();
 1405              		.loc 1 331 20 discriminator 1 view .LVU284
 1406 00ea 0390     		str	r0, [sp, #12]	@ float
 332:Core/Src/main.c **** 
 1407              		.loc 1 332 7 is_stmt 1 view .LVU285
 332:Core/Src/main.c **** 
 1408              		.loc 1 332 21 is_stmt 0 view .LVU286
 1409 00ec FFF7FEFF 		bl	LSM6DS0_ReadAccel_Z
 1410              	.LVL108:
 332:Core/Src/main.c **** 
 1411              		.loc 1 332 20 discriminator 1 view .LVU287
 1412 00f0 0490     		str	r0, [sp, #16]	@ float
 336:Core/Src/main.c ****       for(i=0; i < 4 ; i++)
 1413              		.loc 1 336 7 is_stmt 1 view .LVU288
 1414 00f2 0020     		movs	r0, #0
 1415 00f4 FFF7FEFF 		bl	__aeabi_f2iz
 1416              	.LVL109:
 1417 00f8 0146     		mov	r1, r0
 1418 00fa 0E48     		ldr	r0, .L86+48
 1419 00fc FFF7FEFF 		bl	printf
 1420              	.LVL110:
 337:Core/Src/main.c ****       {
 1421              		.loc 1 337 7 view .LVU289
 337:Core/Src/main.c ****       {
 1422              		.loc 1 337 12 is_stmt 0 view .LVU290
 1423 0100 0024     		movs	r4, #0
 337:Core/Src/main.c ****       {
 1424              		.loc 1 337 7 view .LVU291
 1425 0102 B4E7     		b	.L77
 1426              	.L87:
 1427              		.align	2
 1428              	.L86:
 1429 0104 00000000 		.word	.LC0
 1430 0108 44000000 		.word	.LC3
ARM GAS  /tmp/ccjZEZrM.s 			page 38


 1431 010c 70000000 		.word	.LC5
 1432 0110 10000000 		.word	.LC1
 1433 0114 20000000 		.word	.LC2
 1434 0118 58000000 		.word	.LC4
 1435 011c 80000000 		.word	.LC6
 1436 0120 A4000000 		.word	.LC8
 1437 0124 B8000000 		.word	.LC9
 1438 0128 CC000000 		.word	.LC10
 1439 012c E0000000 		.word	.LC11
 1440 0130 00007A44 		.word	1148846080
 1441 0134 98000000 		.word	.LC7
 1442              		.cfi_endproc
 1443              	.LFE81:
 1445              		.text
 1446              	.Letext0:
 1447              		.file 3 "/home/sarthak/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 1448              		.file 4 "/home/sarthak/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 1449              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 1450              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1451              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1452              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1453              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1454              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1455              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1456              		.file 12 "Core/Inc/i2c.h"
 1457              		.file 13 "Core/Inc/usart.h"
 1458              		.file 14 "/home/sarthak/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 1459              		.file 15 "Core/Inc/gpio.h"
 1460              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1461              		.file 17 "<built-in>"
ARM GAS  /tmp/ccjZEZrM.s 			page 39


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccjZEZrM.s:19     .text._write:00000000 $t
     /tmp/ccjZEZrM.s:25     .text._write:00000000 _write
     /tmp/ccjZEZrM.s:57     .text._write:00000014 $d
     /tmp/ccjZEZrM.s:69     .text.dissectFloat:00000000 $t
     /tmp/ccjZEZrM.s:75     .text.dissectFloat:00000000 dissectFloat
     /tmp/ccjZEZrM.s:159    .text.dissectFloat:00000058 $d
     /tmp/ccjZEZrM.s:164    .text.LSM6DS0_begin:00000000 $t
     /tmp/ccjZEZrM.s:170    .text.LSM6DS0_begin:00000000 LSM6DS0_begin
     /tmp/ccjZEZrM.s:220    .text.LSM6DS0_begin:00000038 $d
     /tmp/ccjZEZrM.s:225    .text.LSM6DS0_Init:00000000 $t
     /tmp/ccjZEZrM.s:231    .text.LSM6DS0_Init:00000000 LSM6DS0_Init
     /tmp/ccjZEZrM.s:290    .text.LSM6DS0_Init:0000004c $d
     /tmp/ccjZEZrM.s:295    .text.check_Gyro_Init:00000000 $t
     /tmp/ccjZEZrM.s:301    .text.check_Gyro_Init:00000000 check_Gyro_Init
     /tmp/ccjZEZrM.s:351    .text.check_Gyro_Init:00000038 $d
     /tmp/ccjZEZrM.s:356    .text.check_XL_Init:00000000 $t
     /tmp/ccjZEZrM.s:362    .text.check_XL_Init:00000000 check_XL_Init
     /tmp/ccjZEZrM.s:412    .text.check_XL_Init:00000038 $d
     /tmp/ccjZEZrM.s:419    .text.LSM6DS0_ReadTemperature_C:00000000 $t
     /tmp/ccjZEZrM.s:425    .text.LSM6DS0_ReadTemperature_C:00000000 LSM6DS0_ReadTemperature_C
     /tmp/ccjZEZrM.s:499    .text.LSM6DS0_ReadTemperature_C:00000060 $d
     /tmp/ccjZEZrM.s:504    .text.LSM6DS0_ReadGyro_X:00000000 $t
     /tmp/ccjZEZrM.s:510    .text.LSM6DS0_ReadGyro_X:00000000 LSM6DS0_ReadGyro_X
     /tmp/ccjZEZrM.s:586    .text.LSM6DS0_ReadGyro_X:00000060 $d
     /tmp/ccjZEZrM.s:592    .text.LSM6DS0_ReadGyro_Y:00000000 $t
     /tmp/ccjZEZrM.s:598    .text.LSM6DS0_ReadGyro_Y:00000000 LSM6DS0_ReadGyro_Y
     /tmp/ccjZEZrM.s:674    .text.LSM6DS0_ReadGyro_Y:00000060 $d
     /tmp/ccjZEZrM.s:680    .text.LSM6DS0_ReadGyro_Z:00000000 $t
     /tmp/ccjZEZrM.s:686    .text.LSM6DS0_ReadGyro_Z:00000000 LSM6DS0_ReadGyro_Z
     /tmp/ccjZEZrM.s:762    .text.LSM6DS0_ReadGyro_Z:00000060 $d
     /tmp/ccjZEZrM.s:768    .text.LSM6DS0_ReadAccel_X:00000000 $t
     /tmp/ccjZEZrM.s:774    .text.LSM6DS0_ReadAccel_X:00000000 LSM6DS0_ReadAccel_X
     /tmp/ccjZEZrM.s:850    .text.LSM6DS0_ReadAccel_X:00000060 $d
     /tmp/ccjZEZrM.s:856    .text.LSM6DS0_ReadAccel_Y:00000000 $t
     /tmp/ccjZEZrM.s:862    .text.LSM6DS0_ReadAccel_Y:00000000 LSM6DS0_ReadAccel_Y
     /tmp/ccjZEZrM.s:938    .text.LSM6DS0_ReadAccel_Y:00000060 $d
     /tmp/ccjZEZrM.s:944    .text.LSM6DS0_ReadAccel_Z:00000000 $t
     /tmp/ccjZEZrM.s:950    .text.LSM6DS0_ReadAccel_Z:00000000 LSM6DS0_ReadAccel_Z
     /tmp/ccjZEZrM.s:1026   .text.LSM6DS0_ReadAccel_Z:00000060 $d
     /tmp/ccjZEZrM.s:1032   .text.Error_Handler:00000000 $t
     /tmp/ccjZEZrM.s:1038   .text.Error_Handler:00000000 Error_Handler
     /tmp/ccjZEZrM.s:1070   .text.SystemClock_Config:00000000 $t
     /tmp/ccjZEZrM.s:1076   .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccjZEZrM.s:1162   .rodata.main.str1.4:00000000 $d
     /tmp/ccjZEZrM.s:1200   .text.main:00000000 $t
     /tmp/ccjZEZrM.s:1206   .text.main:00000000 main
     /tmp/ccjZEZrM.s:1429   .text.main:00000104 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
__aeabi_f2iz
__aeabi_i2f
__aeabi_fsub
__aeabi_f2d
ARM GAS  /tmp/ccjZEZrM.s 			page 40


__aeabi_i2d
__aeabi_dmul
__aeabi_d2iz
pow
HAL_I2C_Mem_Read
hi2c1
HAL_I2C_Mem_Write
__aeabi_ui2f
__aeabi_fmul
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_fdiv
HAL_Init
MX_GPIO_Init
MX_I2C1_Init
MX_USART1_UART_Init
puts
printf
HAL_Delay
