ARM GAS  /tmp/ccK69erI.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text._write,"ax",%progbits
  19              		.align	1
  20              		.global	_write
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_write:
  26              	.LVL0:
  27              	.LFB65:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "i2c.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #define LSM6DS0_ADDR        0xD6 // Change this if your I2C address is different D7 for read and D6
  28:Core/Src/main.c **** #define WHO_AM_I            0x0F
  29:Core/Src/main.c **** #define CTRL_REG2_G         0x11
  30:Core/Src/main.c **** #define CTRL_REG1_XL        0x10
  31:Core/Src/main.c **** #define OUT_X_L_G           0x22    //22
ARM GAS  /tmp/ccK69erI.s 			page 2


  32:Core/Src/main.c **** #define OUT_X_L_XL          0x28
  33:Core/Src/main.c **** #define STATUS_REG          0x1E
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END Includes */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  39:Core/Src/main.c **** int _write(int file, char *data, int len) {
  28              		.loc 1 39 43 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 39 43 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 1446     		mov	r4, r2
  40:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)data, len, HAL_MAX_DELAY);
  38              		.loc 1 40 5 is_stmt 1 view .LVU2
  39 0004 4FF0FF33 		mov	r3, #-1
  40 0008 92B2     		uxth	r2, r2
  41              	.LVL1:
  42              		.loc 1 40 5 is_stmt 0 view .LVU3
  43 000a 0248     		ldr	r0, .L3
  44              	.LVL2:
  45              		.loc 1 40 5 view .LVU4
  46 000c FFF7FEFF 		bl	HAL_UART_Transmit
  47              	.LVL3:
  41:Core/Src/main.c ****     return len;
  48              		.loc 1 41 5 is_stmt 1 view .LVU5
  42:Core/Src/main.c **** }
  49              		.loc 1 42 1 is_stmt 0 view .LVU6
  50 0010 2046     		mov	r0, r4
  51 0012 10BD     		pop	{r4, pc}
  52              	.LVL4:
  53              	.L4:
  54              		.loc 1 42 1 view .LVU7
  55              		.align	2
  56              	.L3:
  57 0014 00000000 		.word	huart1
  58              		.cfi_endproc
  59              	.LFE65:
  61              		.section	.text.LSM6DS0_begin,"ax",%progbits
  62              		.align	1
  63              		.global	LSM6DS0_begin
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  68              	LSM6DS0_begin:
  69              	.LFB66:
  43:Core/Src/main.c **** /* USER CODE END PTD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PD */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** int LSM6DS0_begin(void){
ARM GAS  /tmp/ccK69erI.s 			page 3


  70              		.loc 1 48 24 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 8
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74 0000 00B5     		push	{lr}
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 14, -4
  77 0002 87B0     		sub	sp, sp, #28
  78              		.cfi_def_cfa_offset 32
  49:Core/Src/main.c ****   uint8_t data=0;
  79              		.loc 1 49 3 view .LVU9
  80              		.loc 1 49 11 is_stmt 0 view .LVU10
  81 0004 0023     		movs	r3, #0
  82 0006 8DF81730 		strb	r3, [sp, #23]
  50:Core/Src/main.c **** 
  51:Core/Src/main.c ****     // Check WHO_AM_I register
  52:Core/Src/main.c ****   HAL_I2C_Mem_Read(&hi2c1, 0xD7, WHO_AM_I, 1, &data, 1, HAL_MAX_DELAY);
  83              		.loc 1 52 3 is_stmt 1 view .LVU11
  84 000a 4FF0FF33 		mov	r3, #-1
  85 000e 0293     		str	r3, [sp, #8]
  86 0010 0123     		movs	r3, #1
  87 0012 0193     		str	r3, [sp, #4]
  88 0014 0DF11702 		add	r2, sp, #23
  89 0018 0092     		str	r2, [sp]
  90 001a 0F22     		movs	r2, #15
  91 001c D721     		movs	r1, #215
  92 001e 0648     		ldr	r0, .L9
  93 0020 FFF7FEFF 		bl	HAL_I2C_Mem_Read
  94              	.LVL5:
  53:Core/Src/main.c ****   if (data != 0x6C) {
  95              		.loc 1 53 3 view .LVU12
  96              		.loc 1 53 12 is_stmt 0 view .LVU13
  97 0024 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
  98              		.loc 1 53 6 view .LVU14
  99 0028 6C2B     		cmp	r3, #108
 100 002a 03D1     		bne	.L7
  54:Core/Src/main.c ****       // Handle error
  55:Core/Src/main.c ****       // HAL_GPIO_WritePin(LED_GPIO_Port,LED_Pin,SET);
  56:Core/Src/main.c ****     return 0;
  57:Core/Src/main.c ****   
  58:Core/Src/main.c ****   }
  59:Core/Src/main.c ****   return 1;
 101              		.loc 1 59 10 view .LVU15
 102 002c 0120     		movs	r0, #1
 103              	.L5:
  60:Core/Src/main.c **** }
 104              		.loc 1 60 1 view .LVU16
 105 002e 07B0     		add	sp, sp, #28
 106              		.cfi_remember_state
 107              		.cfi_def_cfa_offset 4
 108              		@ sp needed
 109 0030 5DF804FB 		ldr	pc, [sp], #4
 110              	.L7:
 111              		.cfi_restore_state
  56:Core/Src/main.c ****   
 112              		.loc 1 56 12 view .LVU17
 113 0034 0020     		movs	r0, #0
ARM GAS  /tmp/ccK69erI.s 			page 4


 114 0036 FAE7     		b	.L5
 115              	.L10:
 116              		.align	2
 117              	.L9:
 118 0038 00000000 		.word	hi2c1
 119              		.cfi_endproc
 120              	.LFE66:
 122              		.section	.text.LSM6DS0_Init,"ax",%progbits
 123              		.align	1
 124              		.global	LSM6DS0_Init
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 129              	LSM6DS0_Init:
 130              	.LFB67:
  61:Core/Src/main.c **** void LSM6DS0_Init(void) {
 131              		.loc 1 61 25 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 8
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 136              		.cfi_def_cfa_offset 20
 137              		.cfi_offset 4, -20
 138              		.cfi_offset 5, -16
 139              		.cfi_offset 6, -12
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 87B0     		sub	sp, sp, #28
 143              		.cfi_def_cfa_offset 48
  62:Core/Src/main.c ****     uint8_t data=0;
 144              		.loc 1 62 5 view .LVU19
 145              		.loc 1 62 13 is_stmt 0 view .LVU20
 146 0004 0023     		movs	r3, #0
 147 0006 8DF81730 		strb	r3, [sp, #23]
  63:Core/Src/main.c **** 
  64:Core/Src/main.c ****     // Initialize Gyroscope
  65:Core/Src/main.c ****     data = 0x6C; // 416 Hz, 2000 dps
 148              		.loc 1 65 5 is_stmt 1 view .LVU21
 149              		.loc 1 65 10 is_stmt 0 view .LVU22
 150 000a 6C23     		movs	r3, #108
 151 000c 8DF81730 		strb	r3, [sp, #23]
  66:Core/Src/main.c ****     HAL_I2C_Mem_Write(&hi2c1, LSM6DS0_ADDR, CTRL_REG2_G, 1, &data, 1, HAL_MAX_DELAY);
 152              		.loc 1 66 5 is_stmt 1 view .LVU23
 153 0010 0E4D     		ldr	r5, .L13
 154 0012 4FF0FF37 		mov	r7, #-1
 155 0016 0297     		str	r7, [sp, #8]
 156 0018 0124     		movs	r4, #1
 157 001a 0194     		str	r4, [sp, #4]
 158 001c 0DF11706 		add	r6, sp, #23
 159 0020 0096     		str	r6, [sp]
 160 0022 2346     		mov	r3, r4
 161 0024 1122     		movs	r2, #17
 162 0026 D621     		movs	r1, #214
 163 0028 2846     		mov	r0, r5
 164 002a FFF7FEFF 		bl	HAL_I2C_Mem_Write
 165              	.LVL6:
  67:Core/Src/main.c **** 
ARM GAS  /tmp/ccK69erI.s 			page 5


  68:Core/Src/main.c ****     // Initialize Accelerometer
  69:Core/Src/main.c ****     // HAL_I2C_Mem_Write(&hi2c1, LSM6DS0_ADDR, CTRL_REG1_XL, 1, &data1, 1, HAL_MAX_DELAY);
  70:Core/Src/main.c ****     data = 0x60; // 416 Hz, +/- 2g
 166              		.loc 1 70 5 view .LVU24
 167              		.loc 1 70 10 is_stmt 0 view .LVU25
 168 002e 6023     		movs	r3, #96
 169 0030 8DF81730 		strb	r3, [sp, #23]
  71:Core/Src/main.c ****     HAL_I2C_Mem_Write(&hi2c1, LSM6DS0_ADDR, CTRL_REG1_XL, 1, &data, 1, HAL_MAX_DELAY);
 170              		.loc 1 71 5 is_stmt 1 view .LVU26
 171 0034 0297     		str	r7, [sp, #8]
 172 0036 0194     		str	r4, [sp, #4]
 173 0038 0096     		str	r6, [sp]
 174 003a 2346     		mov	r3, r4
 175 003c 1022     		movs	r2, #16
 176 003e D621     		movs	r1, #214
 177 0040 2846     		mov	r0, r5
 178 0042 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 179              	.LVL7:
  72:Core/Src/main.c **** }
 180              		.loc 1 72 1 is_stmt 0 view .LVU27
 181 0046 07B0     		add	sp, sp, #28
 182              		.cfi_def_cfa_offset 20
 183              		@ sp needed
 184 0048 F0BD     		pop	{r4, r5, r6, r7, pc}
 185              	.L14:
 186 004a 00BF     		.align	2
 187              	.L13:
 188 004c 00000000 		.word	hi2c1
 189              		.cfi_endproc
 190              	.LFE67:
 192              		.section	.text.check_Gyro_Init,"ax",%progbits
 193              		.align	1
 194              		.global	check_Gyro_Init
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	check_Gyro_Init:
 200              	.LFB68:
  73:Core/Src/main.c **** int check_Gyro_Init(){
 201              		.loc 1 73 22 is_stmt 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 8
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 00B5     		push	{lr}
 206              		.cfi_def_cfa_offset 4
 207              		.cfi_offset 14, -4
 208 0002 87B0     		sub	sp, sp, #28
 209              		.cfi_def_cfa_offset 32
  74:Core/Src/main.c ****   uint8_t data=0;
 210              		.loc 1 74 3 view .LVU29
 211              		.loc 1 74 11 is_stmt 0 view .LVU30
 212 0004 0023     		movs	r3, #0
 213 0006 8DF81730 		strb	r3, [sp, #23]
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****     // Check WHO_AM_I register
  77:Core/Src/main.c ****   HAL_I2C_Mem_Read(&hi2c1, 0xD7, CTRL_REG2_G, 1, &data, 1, HAL_MAX_DELAY);
 214              		.loc 1 77 3 is_stmt 1 view .LVU31
ARM GAS  /tmp/ccK69erI.s 			page 6


 215 000a 4FF0FF33 		mov	r3, #-1
 216 000e 0293     		str	r3, [sp, #8]
 217 0010 0123     		movs	r3, #1
 218 0012 0193     		str	r3, [sp, #4]
 219 0014 0DF11702 		add	r2, sp, #23
 220 0018 0092     		str	r2, [sp]
 221 001a 1122     		movs	r2, #17
 222 001c D721     		movs	r1, #215
 223 001e 0648     		ldr	r0, .L19
 224 0020 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 225              	.LVL8:
  78:Core/Src/main.c ****   if(data !=0x6C){
 226              		.loc 1 78 3 view .LVU32
 227              		.loc 1 78 11 is_stmt 0 view .LVU33
 228 0024 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 229              		.loc 1 78 5 view .LVU34
 230 0028 6C2B     		cmp	r3, #108
 231 002a 03D0     		beq	.L17
  79:Core/Src/main.c ****     return 0;
 232              		.loc 1 79 12 view .LVU35
 233 002c 0020     		movs	r0, #0
 234              	.L15:
  80:Core/Src/main.c ****   }else{
  81:Core/Src/main.c ****     return 1;
  82:Core/Src/main.c ****   }
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** }
 235              		.loc 1 84 1 view .LVU36
 236 002e 07B0     		add	sp, sp, #28
 237              		.cfi_remember_state
 238              		.cfi_def_cfa_offset 4
 239              		@ sp needed
 240 0030 5DF804FB 		ldr	pc, [sp], #4
 241              	.L17:
 242              		.cfi_restore_state
  81:Core/Src/main.c ****   }
 243              		.loc 1 81 12 view .LVU37
 244 0034 0120     		movs	r0, #1
 245 0036 FAE7     		b	.L15
 246              	.L20:
 247              		.align	2
 248              	.L19:
 249 0038 00000000 		.word	hi2c1
 250              		.cfi_endproc
 251              	.LFE68:
 253              		.section	.text.check_XL_Init,"ax",%progbits
 254              		.align	1
 255              		.global	check_XL_Init
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 260              	check_XL_Init:
 261              	.LFB69:
  85:Core/Src/main.c **** int check_XL_Init(){
 262              		.loc 1 85 20 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccK69erI.s 			page 7


 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266 0000 00B5     		push	{lr}
 267              		.cfi_def_cfa_offset 4
 268              		.cfi_offset 14, -4
 269 0002 87B0     		sub	sp, sp, #28
 270              		.cfi_def_cfa_offset 32
  86:Core/Src/main.c ****   uint8_t data=0;
 271              		.loc 1 86 3 view .LVU39
 272              		.loc 1 86 11 is_stmt 0 view .LVU40
 273 0004 0023     		movs	r3, #0
 274 0006 8DF81730 		strb	r3, [sp, #23]
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****     // Check WHO_AM_I register
  89:Core/Src/main.c ****   HAL_I2C_Mem_Read(&hi2c1, 0xD7, CTRL_REG1_XL, 1, &data, 1, HAL_MAX_DELAY);
 275              		.loc 1 89 3 is_stmt 1 view .LVU41
 276 000a 4FF0FF33 		mov	r3, #-1
 277 000e 0293     		str	r3, [sp, #8]
 278 0010 0123     		movs	r3, #1
 279 0012 0193     		str	r3, [sp, #4]
 280 0014 0DF11702 		add	r2, sp, #23
 281 0018 0092     		str	r2, [sp]
 282 001a 1022     		movs	r2, #16
 283 001c D721     		movs	r1, #215
 284 001e 0648     		ldr	r0, .L25
 285 0020 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 286              	.LVL9:
  90:Core/Src/main.c ****   if(data !=0x60){
 287              		.loc 1 90 3 view .LVU42
 288              		.loc 1 90 11 is_stmt 0 view .LVU43
 289 0024 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 290              		.loc 1 90 5 view .LVU44
 291 0028 602B     		cmp	r3, #96
 292 002a 03D0     		beq	.L23
  91:Core/Src/main.c ****     return 0;
 293              		.loc 1 91 12 view .LVU45
 294 002c 0020     		movs	r0, #0
 295              	.L21:
  92:Core/Src/main.c ****   }else{
  93:Core/Src/main.c ****     return 1;
  94:Core/Src/main.c ****   }
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** }
 296              		.loc 1 96 1 view .LVU46
 297 002e 07B0     		add	sp, sp, #28
 298              		.cfi_remember_state
 299              		.cfi_def_cfa_offset 4
 300              		@ sp needed
 301 0030 5DF804FB 		ldr	pc, [sp], #4
 302              	.L23:
 303              		.cfi_restore_state
  93:Core/Src/main.c ****   }
 304              		.loc 1 93 12 view .LVU47
 305 0034 0120     		movs	r0, #1
 306 0036 FAE7     		b	.L21
 307              	.L26:
 308              		.align	2
 309              	.L25:
ARM GAS  /tmp/ccK69erI.s 			page 8


 310 0038 00000000 		.word	hi2c1
 311              		.cfi_endproc
 312              	.LFE69:
 314              		.section	.text.LSM6DS0_ReadGyro,"ax",%progbits
 315              		.align	1
 316              		.global	LSM6DS0_ReadGyro
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 321              	LSM6DS0_ReadGyro:
 322              	.LVL10:
 323              	.LFB70:
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** void LSM6DS0_ReadGyro(uint16_t gyro_data) {
 324              		.loc 1 99 43 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		.loc 1 99 43 is_stmt 0 view .LVU49
 329 0000 00B5     		push	{lr}
 330              		.cfi_def_cfa_offset 4
 331              		.cfi_offset 14, -4
 332 0002 85B0     		sub	sp, sp, #20
 333              		.cfi_def_cfa_offset 24
 100:Core/Src/main.c ****     // uint8_t data;
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, OUT_X_L_G, 2, gyro_data, 2, HAL_MAX_DELAY);
 334              		.loc 1 102 5 is_stmt 1 view .LVU50
 335 0004 4FF0FF33 		mov	r3, #-1
 336 0008 0293     		str	r3, [sp, #8]
 337 000a 0223     		movs	r3, #2
 338 000c 0193     		str	r3, [sp, #4]
 339 000e 0090     		str	r0, [sp]
 340 0010 2222     		movs	r2, #34
 341 0012 D621     		movs	r1, #214
 342 0014 0248     		ldr	r0, .L29
 343              	.LVL11:
 344              		.loc 1 102 5 is_stmt 0 view .LVU51
 345 0016 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 346              	.LVL12:
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** //     gyro_data[0] = (int16_t)(data[0] | (data[1] << 8))*70;
 105:Core/Src/main.c **** //     gyro_data[1] = (int16_t)(data[2] | (data[3] << 8))*70;
 106:Core/Src/main.c **** //     gyro_data[2] = (int16_t)(data[4] | (data[5] << 8))*70;
 107:Core/Src/main.c **** }
 347              		.loc 1 107 1 view .LVU52
 348 001a 05B0     		add	sp, sp, #20
 349              		.cfi_def_cfa_offset 4
 350              		@ sp needed
 351 001c 5DF804FB 		ldr	pc, [sp], #4
 352              	.L30:
 353              		.align	2
 354              	.L29:
 355 0020 00000000 		.word	hi2c1
 356              		.cfi_endproc
 357              	.LFE70:
ARM GAS  /tmp/ccK69erI.s 			page 9


 359              		.section	.text.LSM6DS0_ReadAccel,"ax",%progbits
 360              		.align	1
 361              		.global	LSM6DS0_ReadAccel
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 366              	LSM6DS0_ReadAccel:
 367              	.LVL13:
 368              	.LFB71:
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** void LSM6DS0_ReadAccel(uint16_t accel_data) {
 369              		.loc 1 109 45 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		.loc 1 109 45 is_stmt 0 view .LVU54
 374 0000 00B5     		push	{lr}
 375              		.cfi_def_cfa_offset 4
 376              		.cfi_offset 14, -4
 377 0002 85B0     		sub	sp, sp, #20
 378              		.cfi_def_cfa_offset 24
 110:Core/Src/main.c ****     // uint8_t data;
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, OUT_X_L_XL, 2, accel_data, 2, HAL_MAX_DELAY);
 379              		.loc 1 112 5 is_stmt 1 view .LVU55
 380 0004 4FF0FF33 		mov	r3, #-1
 381 0008 0293     		str	r3, [sp, #8]
 382 000a 0223     		movs	r3, #2
 383 000c 0193     		str	r3, [sp, #4]
 384 000e 0090     		str	r0, [sp]
 385 0010 2822     		movs	r2, #40
 386 0012 D621     		movs	r1, #214
 387 0014 0248     		ldr	r0, .L33
 388              	.LVL14:
 389              		.loc 1 112 5 is_stmt 0 view .LVU56
 390 0016 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 391              	.LVL15:
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****     // accel_data[0] = (int16_t)(data[0] | (data[1] << 8));
 115:Core/Src/main.c ****     // accel_data[1] = (int16_t)(data[2] | (data[3] << 8));
 116:Core/Src/main.c ****     // accel_data[2] = (int16_t)(data[4] | (data[5] << 8));
 117:Core/Src/main.c **** }
 392              		.loc 1 117 1 view .LVU57
 393 001a 05B0     		add	sp, sp, #20
 394              		.cfi_def_cfa_offset 4
 395              		@ sp needed
 396 001c 5DF804FB 		ldr	pc, [sp], #4
 397              	.L34:
 398              		.align	2
 399              	.L33:
 400 0020 00000000 		.word	hi2c1
 401              		.cfi_endproc
 402              	.LFE71:
 404              		.section	.text.Error_Handler,"ax",%progbits
 405              		.align	1
 406              		.global	Error_Handler
 407              		.syntax unified
ARM GAS  /tmp/ccK69erI.s 			page 10


 408              		.thumb
 409              		.thumb_func
 411              	Error_Handler:
 412              	.LFB74:
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****  
 120:Core/Src/main.c **** /* USER CODE END PD */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
 123:Core/Src/main.c **** /* USER CODE BEGIN PM */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** /* USER CODE END PM */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /* USER CODE BEGIN PV */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** /* USER CODE END PV */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 134:Core/Src/main.c **** void SystemClock_Config(void);
 135:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** /* USER CODE END PFP */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 140:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /* USER CODE END 0 */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** /**
 145:Core/Src/main.c ****   * @brief  The application entry point.
 146:Core/Src/main.c ****   * @retval int
 147:Core/Src/main.c ****   */
 148:Core/Src/main.c **** int main(void)
 149:Core/Src/main.c **** {
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /* USER CODE END 1 */
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 158:Core/Src/main.c ****   HAL_Init();
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE END Init */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* Configure the system clock */
 165:Core/Src/main.c ****   SystemClock_Config();
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE END SysInit */
 170:Core/Src/main.c **** 
ARM GAS  /tmp/ccK69erI.s 			page 11


 171:Core/Src/main.c ****   /* Initialize all configured peripherals */
 172:Core/Src/main.c ****   MX_GPIO_Init();
 173:Core/Src/main.c ****   MX_I2C1_Init();
 174:Core/Src/main.c ****   MX_USART1_UART_Init();
 175:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 176:Core/Src/main.c **** if(LSM6DS0_begin()==0){
 177:Core/Src/main.c ****       printf("LSM_not_founf\r\n");
 178:Core/Src/main.c ****     }else{
 179:Core/Src/main.c ****       printf("LSM_found..\r\n");
 180:Core/Src/main.c ****       printf("initializing six axis sensor....\r\n");
 181:Core/Src/main.c ****     }
 182:Core/Src/main.c ****     LSM6DS0_Init();
 183:Core/Src/main.c ****     if (check_Gyro_Init()!=1){
 184:Core/Src/main.c ****       printf("gyro_init_failed\r\n");
 185:Core/Src/main.c ****     }else{
 186:Core/Src/main.c ****       printf("gyro_init_successful\r\n");
 187:Core/Src/main.c ****     }
 188:Core/Src/main.c ****     if(check_XL_Init()!=1){
 189:Core/Src/main.c ****       printf("XL_init_failed\r\n");
 190:Core/Src/main.c ****     }
 191:Core/Src/main.c ****     else{
 192:Core/Src/main.c ****       printf("XL_init_successfull\r\n");
 193:Core/Src/main.c ****     }
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE END 2 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* Infinite loop */
 198:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 199:Core/Src/main.c ****   
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****     uint16_t gyro_data;
 202:Core/Src/main.c ****     uint16_t accel_data;
 203:Core/Src/main.c ****     // uint8_t status;
 204:Core/Src/main.c ****     // HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, STATUS_REG, 1, &status, 6, HAL_MAX_DELAY);
 205:Core/Src/main.c ****   while (check_Gyro_Init() && check_Gyro_Init())
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     
 208:Core/Src/main.c ****   
 209:Core/Src/main.c ****     // printf("hellow\r\n");
 210:Core/Src/main.c ****       LSM6DS0_ReadGyro(gyro_data);
 211:Core/Src/main.c ****       LSM6DS0_ReadAccel(accel_data);
 212:Core/Src/main.c ****       printf("Gyro: X=%d Y=%d Z=%d\r\n",gyro_data);
 213:Core/Src/main.c ****       printf("Accel: X=%d\r\n",(int)(accel_data*0.061));
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****     // HAL_Delay(1000);
 216:Core/Src/main.c ****     /* USER CODE END WHILE */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 219:Core/Src/main.c ****   }
 220:Core/Src/main.c ****   /* USER CODE END 3 */
 221:Core/Src/main.c **** }
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /**
 224:Core/Src/main.c ****   * @brief System Clock Configuration
 225:Core/Src/main.c ****   * @retval None
 226:Core/Src/main.c ****   */
 227:Core/Src/main.c **** void SystemClock_Config(void)
ARM GAS  /tmp/ccK69erI.s 			page 12


 228:Core/Src/main.c **** {
 229:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 230:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 233:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 234:Core/Src/main.c ****   */
 235:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 236:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 238:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****     Error_Handler();
 241:Core/Src/main.c ****   }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 246:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 247:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 248:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 249:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 250:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 253:Core/Src/main.c ****   {
 254:Core/Src/main.c ****     Error_Handler();
 255:Core/Src/main.c ****   }
 256:Core/Src/main.c **** }
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** /* USER CODE END 4 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** /**
 263:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 264:Core/Src/main.c ****   * @retval None
 265:Core/Src/main.c ****   */
 266:Core/Src/main.c **** void Error_Handler(void)
 267:Core/Src/main.c **** {
 413              		.loc 1 267 1 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ Volatile: function does not return.
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 268:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 269:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 270:Core/Src/main.c ****   __disable_irq();
 419              		.loc 1 270 3 view .LVU59
 420              	.LBB4:
 421              	.LBI4:
 422              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
ARM GAS  /tmp/ccK69erI.s 			page 13


   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
ARM GAS  /tmp/ccK69erI.s 			page 14


  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
ARM GAS  /tmp/ccK69erI.s 			page 15


 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 423              		.loc 2 140 27 view .LVU60
 424              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 425              		.loc 2 142 3 view .LVU61
 426              		.syntax unified
 427              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 428 0000 72B6     		cpsid i
 429              	@ 0 "" 2
 430              		.thumb
 431              		.syntax unified
 432              	.L36:
 433              	.LBE5:
 434              	.LBE4:
 271:Core/Src/main.c ****   while (1)
 435              		.loc 1 271 3 view .LVU62
 272:Core/Src/main.c ****   {
 273:Core/Src/main.c ****   }
 436              		.loc 1 273 3 view .LVU63
 271:Core/Src/main.c ****   while (1)
 437              		.loc 1 271 9 view .LVU64
 438 0002 FEE7     		b	.L36
 439              		.cfi_endproc
 440              	.LFE74:
 442              		.section	.text.SystemClock_Config,"ax",%progbits
 443              		.align	1
 444              		.global	SystemClock_Config
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 449              	SystemClock_Config:
 450              	.LFB73:
 228:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 451              		.loc 1 228 1 view -0
 452              		.cfi_startproc
ARM GAS  /tmp/ccK69erI.s 			page 16


 453              		@ args = 0, pretend = 0, frame = 64
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455 0000 00B5     		push	{lr}
 456              		.cfi_def_cfa_offset 4
 457              		.cfi_offset 14, -4
 458 0002 91B0     		sub	sp, sp, #68
 459              		.cfi_def_cfa_offset 72
 229:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 460              		.loc 1 229 3 view .LVU66
 229:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 461              		.loc 1 229 22 is_stmt 0 view .LVU67
 462 0004 2822     		movs	r2, #40
 463 0006 0021     		movs	r1, #0
 464 0008 06A8     		add	r0, sp, #24
 465 000a FFF7FEFF 		bl	memset
 466              	.LVL16:
 230:Core/Src/main.c **** 
 467              		.loc 1 230 3 is_stmt 1 view .LVU68
 230:Core/Src/main.c **** 
 468              		.loc 1 230 22 is_stmt 0 view .LVU69
 469 000e 0023     		movs	r3, #0
 470 0010 0193     		str	r3, [sp, #4]
 471 0012 0293     		str	r3, [sp, #8]
 472 0014 0393     		str	r3, [sp, #12]
 473 0016 0493     		str	r3, [sp, #16]
 474 0018 0593     		str	r3, [sp, #20]
 235:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 475              		.loc 1 235 3 is_stmt 1 view .LVU70
 235:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 476              		.loc 1 235 36 is_stmt 0 view .LVU71
 477 001a 0123     		movs	r3, #1
 478 001c 0693     		str	r3, [sp, #24]
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 479              		.loc 1 236 3 is_stmt 1 view .LVU72
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 480              		.loc 1 236 30 is_stmt 0 view .LVU73
 481 001e 4FF48033 		mov	r3, #65536
 482 0022 0793     		str	r3, [sp, #28]
 237:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 483              		.loc 1 237 3 is_stmt 1 view .LVU74
 238:Core/Src/main.c ****   {
 484              		.loc 1 238 3 view .LVU75
 238:Core/Src/main.c ****   {
 485              		.loc 1 238 7 is_stmt 0 view .LVU76
 486 0024 06A8     		add	r0, sp, #24
 487 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 488              	.LVL17:
 238:Core/Src/main.c ****   {
 489              		.loc 1 238 6 discriminator 1 view .LVU77
 490 002a 70B9     		cbnz	r0, .L41
 245:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 491              		.loc 1 245 3 is_stmt 1 view .LVU78
 245:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 492              		.loc 1 245 31 is_stmt 0 view .LVU79
 493 002c 0F23     		movs	r3, #15
 494 002e 0193     		str	r3, [sp, #4]
 247:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/ccK69erI.s 			page 17


 495              		.loc 1 247 3 is_stmt 1 view .LVU80
 247:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 496              		.loc 1 247 34 is_stmt 0 view .LVU81
 497 0030 0123     		movs	r3, #1
 498 0032 0293     		str	r3, [sp, #8]
 248:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 499              		.loc 1 248 3 is_stmt 1 view .LVU82
 248:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 500              		.loc 1 248 35 is_stmt 0 view .LVU83
 501 0034 0021     		movs	r1, #0
 502 0036 0391     		str	r1, [sp, #12]
 249:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 503              		.loc 1 249 3 is_stmt 1 view .LVU84
 249:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 504              		.loc 1 249 36 is_stmt 0 view .LVU85
 505 0038 0491     		str	r1, [sp, #16]
 250:Core/Src/main.c **** 
 506              		.loc 1 250 3 is_stmt 1 view .LVU86
 250:Core/Src/main.c **** 
 507              		.loc 1 250 36 is_stmt 0 view .LVU87
 508 003a 0591     		str	r1, [sp, #20]
 252:Core/Src/main.c ****   {
 509              		.loc 1 252 3 is_stmt 1 view .LVU88
 252:Core/Src/main.c ****   {
 510              		.loc 1 252 7 is_stmt 0 view .LVU89
 511 003c 01A8     		add	r0, sp, #4
 512 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 513              	.LVL18:
 252:Core/Src/main.c ****   {
 514              		.loc 1 252 6 discriminator 1 view .LVU90
 515 0042 20B9     		cbnz	r0, .L42
 256:Core/Src/main.c **** 
 516              		.loc 1 256 1 view .LVU91
 517 0044 11B0     		add	sp, sp, #68
 518              		.cfi_remember_state
 519              		.cfi_def_cfa_offset 4
 520              		@ sp needed
 521 0046 5DF804FB 		ldr	pc, [sp], #4
 522              	.L41:
 523              		.cfi_restore_state
 240:Core/Src/main.c ****   }
 524              		.loc 1 240 5 is_stmt 1 view .LVU92
 525 004a FFF7FEFF 		bl	Error_Handler
 526              	.LVL19:
 527              	.L42:
 254:Core/Src/main.c ****   }
 528              		.loc 1 254 5 view .LVU93
 529 004e FFF7FEFF 		bl	Error_Handler
 530              	.LVL20:
 531              		.cfi_endproc
 532              	.LFE73:
 534              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 535              		.align	2
 536              	.LC0:
 537 0000 4C534D5F 		.ascii	"LSM_not_founf\015\000"
 537      6E6F745F 
 537      666F756E 
ARM GAS  /tmp/ccK69erI.s 			page 18


 537      660D00
 538 000f 00       		.align	2
 539              	.LC1:
 540 0010 4C534D5F 		.ascii	"LSM_found..\015\000"
 540      666F756E 
 540      642E2E0D 
 540      00
 541 001d 000000   		.align	2
 542              	.LC2:
 543 0020 696E6974 		.ascii	"initializing six axis sensor....\015\000"
 543      69616C69 
 543      7A696E67 
 543      20736978 
 543      20617869 
 544 0042 0000     		.align	2
 545              	.LC3:
 546 0044 6779726F 		.ascii	"gyro_init_failed\015\000"
 546      5F696E69 
 546      745F6661 
 546      696C6564 
 546      0D00
 547 0056 0000     		.align	2
 548              	.LC4:
 549 0058 6779726F 		.ascii	"gyro_init_successful\015\000"
 549      5F696E69 
 549      745F7375 
 549      63636573 
 549      7366756C 
 550 006e 0000     		.align	2
 551              	.LC5:
 552 0070 584C5F69 		.ascii	"XL_init_failed\015\000"
 552      6E69745F 
 552      6661696C 
 552      65640D00 
 553              		.align	2
 554              	.LC6:
 555 0080 584C5F69 		.ascii	"XL_init_successfull\015\000"
 555      6E69745F 
 555      73756363 
 555      65737366 
 555      756C6C0D 
 556 0095 000000   		.align	2
 557              	.LC7:
 558 0098 4779726F 		.ascii	"Gyro: X=%d Y=%d Z=%d\015\012\000"
 558      3A20583D 
 558      25642059 
 558      3D256420 
 558      5A3D2564 
 559              		.global	__aeabi_i2d
 560              		.global	__aeabi_dmul
 561              		.global	__aeabi_d2iz
 562 00af 00       		.align	2
 563              	.LC8:
 564 00b0 41636365 		.ascii	"Accel: X=%d\015\012\000"
 564      6C3A2058 
 564      3D25640D 
 564      0A00
ARM GAS  /tmp/ccK69erI.s 			page 19


 565              		.section	.text.main,"ax",%progbits
 566              		.align	1
 567              		.global	main
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	main:
 573              	.LFB72:
 149:Core/Src/main.c **** 
 574              		.loc 1 149 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578 0000 10B5     		push	{r4, lr}
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 4, -8
 581              		.cfi_offset 14, -4
 582 0002 0024     		movs	r4, #0
 158:Core/Src/main.c **** 
 583              		.loc 1 158 3 view .LVU95
 584 0004 FFF7FEFF 		bl	HAL_Init
 585              	.LVL21:
 165:Core/Src/main.c **** 
 586              		.loc 1 165 3 view .LVU96
 587 0008 FFF7FEFF 		bl	SystemClock_Config
 588              	.LVL22:
 172:Core/Src/main.c ****   MX_I2C1_Init();
 589              		.loc 1 172 3 view .LVU97
 590 000c FFF7FEFF 		bl	MX_GPIO_Init
 591              	.LVL23:
 173:Core/Src/main.c ****   MX_USART1_UART_Init();
 592              		.loc 1 173 3 view .LVU98
 593 0010 FFF7FEFF 		bl	MX_I2C1_Init
 594              	.LVL24:
 174:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 595              		.loc 1 174 3 view .LVU99
 596 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 597              	.LVL25:
 176:Core/Src/main.c ****       printf("LSM_not_founf\r\n");
 598              		.loc 1 176 1 view .LVU100
 176:Core/Src/main.c ****       printf("LSM_not_founf\r\n");
 599              		.loc 1 176 4 is_stmt 0 view .LVU101
 600 0018 FFF7FEFF 		bl	LSM6DS0_begin
 601              	.LVL26:
 176:Core/Src/main.c ****       printf("LSM_not_founf\r\n");
 602              		.loc 1 176 3 discriminator 1 view .LVU102
 603 001c 98B9     		cbnz	r0, .L44
 604              	.LBB6:
 177:Core/Src/main.c ****     }else{
 605              		.loc 1 177 7 is_stmt 1 view .LVU103
 606 001e 2448     		ldr	r0, .L54+8
 607 0020 FFF7FEFF 		bl	puts
 608              	.LVL27:
 609              	.L45:
 610              	.LBE6:
 182:Core/Src/main.c ****     if (check_Gyro_Init()!=1){
 611              		.loc 1 182 5 view .LVU104
ARM GAS  /tmp/ccK69erI.s 			page 20


 612 0024 FFF7FEFF 		bl	LSM6DS0_Init
 613              	.LVL28:
 183:Core/Src/main.c ****       printf("gyro_init_failed\r\n");
 614              		.loc 1 183 5 view .LVU105
 183:Core/Src/main.c ****       printf("gyro_init_failed\r\n");
 615              		.loc 1 183 9 is_stmt 0 view .LVU106
 616 0028 FFF7FEFF 		bl	check_Gyro_Init
 617              	.LVL29:
 183:Core/Src/main.c ****       printf("gyro_init_failed\r\n");
 618              		.loc 1 183 8 discriminator 1 view .LVU107
 619 002c 0128     		cmp	r0, #1
 620 002e 11D0     		beq	.L46
 621              	.LBB7:
 184:Core/Src/main.c ****     }else{
 622              		.loc 1 184 7 is_stmt 1 view .LVU108
 623 0030 2048     		ldr	r0, .L54+12
 624 0032 FFF7FEFF 		bl	puts
 625              	.LVL30:
 626              	.L47:
 627              	.LBE7:
 188:Core/Src/main.c ****       printf("XL_init_failed\r\n");
 628              		.loc 1 188 5 view .LVU109
 188:Core/Src/main.c ****       printf("XL_init_failed\r\n");
 629              		.loc 1 188 8 is_stmt 0 view .LVU110
 630 0036 FFF7FEFF 		bl	check_XL_Init
 631              	.LVL31:
 188:Core/Src/main.c ****       printf("XL_init_failed\r\n");
 632              		.loc 1 188 7 discriminator 1 view .LVU111
 633 003a 0128     		cmp	r0, #1
 634 003c 0ED0     		beq	.L48
 635              	.LBB8:
 189:Core/Src/main.c ****     }
 636              		.loc 1 189 7 is_stmt 1 view .LVU112
 637 003e 1E48     		ldr	r0, .L54+16
 638 0040 FFF7FEFF 		bl	puts
 639              	.LVL32:
 640              	.LBE8:
 641 0044 26E0     		b	.L50
 642              	.L44:
 643              	.LBB9:
 179:Core/Src/main.c ****       printf("initializing six axis sensor....\r\n");
 644              		.loc 1 179 7 view .LVU113
 645 0046 1D48     		ldr	r0, .L54+20
 646 0048 FFF7FEFF 		bl	puts
 647              	.LVL33:
 180:Core/Src/main.c ****     }
 648              		.loc 1 180 7 view .LVU114
 649 004c 1C48     		ldr	r0, .L54+24
 650 004e FFF7FEFF 		bl	puts
 651              	.LVL34:
 652 0052 E7E7     		b	.L45
 653              	.L46:
 654              	.LBE9:
 655              	.LBB10:
 186:Core/Src/main.c ****     }
 656              		.loc 1 186 7 view .LVU115
 657 0054 1B48     		ldr	r0, .L54+28
ARM GAS  /tmp/ccK69erI.s 			page 21


 658 0056 FFF7FEFF 		bl	puts
 659              	.LVL35:
 660 005a ECE7     		b	.L47
 661              	.L48:
 662              	.LBE10:
 663              	.LBB11:
 192:Core/Src/main.c ****     }
 664              		.loc 1 192 7 view .LVU116
 665 005c 1A48     		ldr	r0, .L54+32
 666 005e FFF7FEFF 		bl	puts
 667              	.LVL36:
 668 0062 17E0     		b	.L50
 669              	.L52:
 670              	.LBE11:
 671              	.LBB12:
 210:Core/Src/main.c ****       LSM6DS0_ReadAccel(accel_data);
 672              		.loc 1 210 7 view .LVU117
 673 0064 2046     		mov	r0, r4
 674 0066 FFF7FEFF 		bl	LSM6DS0_ReadGyro
 675              	.LVL37:
 211:Core/Src/main.c ****       printf("Gyro: X=%d Y=%d Z=%d\r\n",gyro_data);
 676              		.loc 1 211 7 view .LVU118
 677 006a 2046     		mov	r0, r4
 678 006c FFF7FEFF 		bl	LSM6DS0_ReadAccel
 679              	.LVL38:
 212:Core/Src/main.c ****       printf("Accel: X=%d\r\n",(int)(accel_data*0.061));
 680              		.loc 1 212 7 view .LVU119
 681 0070 2146     		mov	r1, r4
 682 0072 1648     		ldr	r0, .L54+36
 683 0074 FFF7FEFF 		bl	printf
 684              	.LVL39:
 213:Core/Src/main.c **** 
 685              		.loc 1 213 7 view .LVU120
 213:Core/Src/main.c **** 
 686              		.loc 1 213 48 is_stmt 0 view .LVU121
 687 0078 2046     		mov	r0, r4
 688 007a FFF7FEFF 		bl	__aeabi_i2d
 689              	.LVL40:
 690 007e 0AA3     		adr	r3, .L54
 691 0080 D3E90023 		ldrd	r2, [r3]
 692 0084 FFF7FEFF 		bl	__aeabi_dmul
 693              	.LVL41:
 213:Core/Src/main.c **** 
 694              		.loc 1 213 7 view .LVU122
 695 0088 FFF7FEFF 		bl	__aeabi_d2iz
 696              	.LVL42:
 697 008c 0146     		mov	r1, r0
 698 008e 1048     		ldr	r0, .L54+40
 699 0090 FFF7FEFF 		bl	printf
 700              	.LVL43:
 701              	.L50:
 702              	.LBE12:
 205:Core/Src/main.c ****   {
 703              		.loc 1 205 28 is_stmt 1 view .LVU123
 205:Core/Src/main.c ****   {
 704              		.loc 1 205 10 is_stmt 0 view .LVU124
 705 0094 FFF7FEFF 		bl	check_Gyro_Init
ARM GAS  /tmp/ccK69erI.s 			page 22


 706              	.LVL44:
 205:Core/Src/main.c ****   {
 707              		.loc 1 205 28 discriminator 1 view .LVU125
 708 0098 18B1     		cbz	r0, .L51
 205:Core/Src/main.c ****   {
 709              		.loc 1 205 31 discriminator 1 view .LVU126
 710 009a FFF7FEFF 		bl	check_Gyro_Init
 711              	.LVL45:
 205:Core/Src/main.c ****   {
 712              		.loc 1 205 28 discriminator 1 view .LVU127
 713 009e 0028     		cmp	r0, #0
 714 00a0 E0D1     		bne	.L52
 715              	.L51:
 221:Core/Src/main.c **** 
 716              		.loc 1 221 1 view .LVU128
 717 00a2 0020     		movs	r0, #0
 718 00a4 10BD     		pop	{r4, pc}
 719              	.L55:
 720 00a6 00BF     		.align	3
 721              	.L54:
 722 00a8 08AC1C5A 		.word	1511828488
 723 00ac 643BAF3F 		.word	1068448612
 724 00b0 00000000 		.word	.LC0
 725 00b4 44000000 		.word	.LC3
 726 00b8 70000000 		.word	.LC5
 727 00bc 10000000 		.word	.LC1
 728 00c0 20000000 		.word	.LC2
 729 00c4 58000000 		.word	.LC4
 730 00c8 80000000 		.word	.LC6
 731 00cc 98000000 		.word	.LC7
 732 00d0 B0000000 		.word	.LC8
 733              		.cfi_endproc
 734              	.LFE72:
 736              		.text
 737              	.Letext0:
 738              		.file 3 "/home/sarthak/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 739              		.file 4 "/home/sarthak/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 740              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 741              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 742              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 743              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 744              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 745              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 746              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 747              		.file 12 "Core/Inc/i2c.h"
 748              		.file 13 "Core/Inc/usart.h"
 749              		.file 14 "Core/Inc/gpio.h"
 750              		.file 15 "<built-in>"
 751              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccK69erI.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccK69erI.s:19     .text._write:00000000 $t
     /tmp/ccK69erI.s:25     .text._write:00000000 _write
     /tmp/ccK69erI.s:57     .text._write:00000014 $d
     /tmp/ccK69erI.s:62     .text.LSM6DS0_begin:00000000 $t
     /tmp/ccK69erI.s:68     .text.LSM6DS0_begin:00000000 LSM6DS0_begin
     /tmp/ccK69erI.s:118    .text.LSM6DS0_begin:00000038 $d
     /tmp/ccK69erI.s:123    .text.LSM6DS0_Init:00000000 $t
     /tmp/ccK69erI.s:129    .text.LSM6DS0_Init:00000000 LSM6DS0_Init
     /tmp/ccK69erI.s:188    .text.LSM6DS0_Init:0000004c $d
     /tmp/ccK69erI.s:193    .text.check_Gyro_Init:00000000 $t
     /tmp/ccK69erI.s:199    .text.check_Gyro_Init:00000000 check_Gyro_Init
     /tmp/ccK69erI.s:249    .text.check_Gyro_Init:00000038 $d
     /tmp/ccK69erI.s:254    .text.check_XL_Init:00000000 $t
     /tmp/ccK69erI.s:260    .text.check_XL_Init:00000000 check_XL_Init
     /tmp/ccK69erI.s:310    .text.check_XL_Init:00000038 $d
     /tmp/ccK69erI.s:315    .text.LSM6DS0_ReadGyro:00000000 $t
     /tmp/ccK69erI.s:321    .text.LSM6DS0_ReadGyro:00000000 LSM6DS0_ReadGyro
     /tmp/ccK69erI.s:355    .text.LSM6DS0_ReadGyro:00000020 $d
     /tmp/ccK69erI.s:360    .text.LSM6DS0_ReadAccel:00000000 $t
     /tmp/ccK69erI.s:366    .text.LSM6DS0_ReadAccel:00000000 LSM6DS0_ReadAccel
     /tmp/ccK69erI.s:400    .text.LSM6DS0_ReadAccel:00000020 $d
     /tmp/ccK69erI.s:405    .text.Error_Handler:00000000 $t
     /tmp/ccK69erI.s:411    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccK69erI.s:443    .text.SystemClock_Config:00000000 $t
     /tmp/ccK69erI.s:449    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccK69erI.s:535    .rodata.main.str1.4:00000000 $d
     /tmp/ccK69erI.s:566    .text.main:00000000 $t
     /tmp/ccK69erI.s:572    .text.main:00000000 main
     /tmp/ccK69erI.s:722    .text.main:000000a8 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
HAL_I2C_Mem_Read
hi2c1
HAL_I2C_Mem_Write
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_i2d
__aeabi_dmul
__aeabi_d2iz
HAL_Init
MX_GPIO_Init
MX_I2C1_Init
MX_USART1_UART_Init
puts
printf
