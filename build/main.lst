ARM GAS  /tmp/ccnFevFe.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._write,"ax",%progbits
  16              		.align	1
  17              		.global	_write
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	_write:
  25              	.LVL0:
  26              	.LFB68:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "i2c.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #define LSM6DS0_ADDR        0xD6 // Change this if your I2C address is different D7 for read and D6
  29:Core/Src/main.c **** #define WHO_AM_I            0x0F
  30:Core/Src/main.c **** #define CTRL_REG2_G         0x11
  31:Core/Src/main.c **** #define CTRL_REG1_XL        0x10
ARM GAS  /tmp/ccnFevFe.s 			page 2


  32:Core/Src/main.c **** #define OUT_X_L_G           0x22    //22
  33:Core/Src/main.c **** #define OUT_X_L_XL          0x28
  34:Core/Src/main.c **** #define OUT_X_H_XL          0x29
  35:Core/Src/main.c **** #define OUT_Y_L_XL          0x2A
  36:Core/Src/main.c **** #define OUT_Y_H_XL          0x2B
  37:Core/Src/main.c **** #define OUT_Z_L_XL          0x2C
  38:Core/Src/main.c **** #define OUT_Z_H_XL          0x2D
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** #define STATUS_REG          0x1E
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END Includes */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  47:Core/Src/main.c **** int _write(int file, char *data, int len) {
  28              		.loc 1 47 43 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 47 43 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 1446     		mov	r4, r2
  48:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, (uint8_t*)data, len, HAL_MAX_DELAY);
  39              		.loc 1 48 5 is_stmt 1 view .LVU2
  40 0004 4FF0FF33 		mov	r3, #-1
  41 0008 92B2     		uxth	r2, r2
  42              	.LVL1:
  43              		.loc 1 48 5 is_stmt 0 view .LVU3
  44 000a 0248     		ldr	r0, .L3
  45              	.LVL2:
  46              		.loc 1 48 5 view .LVU4
  47 000c FFF7FEFF 		bl	HAL_UART_Transmit
  48              	.LVL3:
  49:Core/Src/main.c ****     return len;
  49              		.loc 1 49 5 is_stmt 1 view .LVU5
  50:Core/Src/main.c **** }
  50              		.loc 1 50 1 is_stmt 0 view .LVU6
  51 0010 2046     		mov	r0, r4
  52 0012 10BD     		pop	{r4, pc}
  53              	.LVL4:
  54              	.L4:
  55              		.loc 1 50 1 view .LVU7
  56              		.align	2
  57              	.L3:
  58 0014 00000000 		.word	huart1
  59              		.cfi_endproc
  60              	.LFE68:
  62              		.section	.text.LSM6DS0_begin,"ax",%progbits
  63              		.align	1
  64              		.global	LSM6DS0_begin
  65              		.syntax unified
  66              		.thumb
ARM GAS  /tmp/ccnFevFe.s 			page 3


  67              		.thumb_func
  68              		.fpu softvfp
  70              	LSM6DS0_begin:
  71              	.LFB69:
  51:Core/Src/main.c **** /* USER CODE END PTD */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  54:Core/Src/main.c **** /* USER CODE BEGIN PD */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** int LSM6DS0_begin(void){
  72              		.loc 1 56 24 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 8
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76 0000 00B5     		push	{lr}
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 4
  79              		.cfi_offset 14, -4
  80 0002 87B0     		sub	sp, sp, #28
  81              	.LCFI2:
  82              		.cfi_def_cfa_offset 32
  57:Core/Src/main.c ****   uint8_t data=0;
  83              		.loc 1 57 3 view .LVU9
  84              		.loc 1 57 11 is_stmt 0 view .LVU10
  85 0004 0023     		movs	r3, #0
  86 0006 8DF81730 		strb	r3, [sp, #23]
  58:Core/Src/main.c **** 
  59:Core/Src/main.c ****     // Check WHO_AM_I register
  60:Core/Src/main.c ****   HAL_I2C_Mem_Read(&hi2c1, 0xD7, WHO_AM_I, 1, &data, 1, HAL_MAX_DELAY);
  87              		.loc 1 60 3 is_stmt 1 view .LVU11
  88 000a 4FF0FF33 		mov	r3, #-1
  89 000e 0293     		str	r3, [sp, #8]
  90 0010 0123     		movs	r3, #1
  91 0012 0193     		str	r3, [sp, #4]
  92 0014 0DF11702 		add	r2, sp, #23
  93 0018 0092     		str	r2, [sp]
  94 001a 0F22     		movs	r2, #15
  95 001c D721     		movs	r1, #215
  96 001e 0648     		ldr	r0, .L9
  97 0020 FFF7FEFF 		bl	HAL_I2C_Mem_Read
  98              	.LVL5:
  61:Core/Src/main.c ****   if (data != 0x6C) {
  99              		.loc 1 61 3 view .LVU12
 100              		.loc 1 61 12 is_stmt 0 view .LVU13
 101 0024 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 102              		.loc 1 61 6 view .LVU14
 103 0028 6C2B     		cmp	r3, #108
 104 002a 03D1     		bne	.L7
  62:Core/Src/main.c ****       // Handle error
  63:Core/Src/main.c ****       // HAL_GPIO_WritePin(LED_GPIO_Port,LED_Pin,SET);
  64:Core/Src/main.c ****     return 0;
  65:Core/Src/main.c ****   
  66:Core/Src/main.c ****   }
  67:Core/Src/main.c ****   return 1;
 105              		.loc 1 67 10 view .LVU15
 106 002c 0120     		movs	r0, #1
 107              	.L5:
ARM GAS  /tmp/ccnFevFe.s 			page 4


  68:Core/Src/main.c **** }
 108              		.loc 1 68 1 view .LVU16
 109 002e 07B0     		add	sp, sp, #28
 110              	.LCFI3:
 111              		.cfi_remember_state
 112              		.cfi_def_cfa_offset 4
 113              		@ sp needed
 114 0030 5DF804FB 		ldr	pc, [sp], #4
 115              	.L7:
 116              	.LCFI4:
 117              		.cfi_restore_state
  64:Core/Src/main.c ****   
 118              		.loc 1 64 12 view .LVU17
 119 0034 0020     		movs	r0, #0
 120 0036 FAE7     		b	.L5
 121              	.L10:
 122              		.align	2
 123              	.L9:
 124 0038 00000000 		.word	hi2c1
 125              		.cfi_endproc
 126              	.LFE69:
 128              		.section	.text.LSM6DS0_Init,"ax",%progbits
 129              		.align	1
 130              		.global	LSM6DS0_Init
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 134              		.fpu softvfp
 136              	LSM6DS0_Init:
 137              	.LFB70:
  69:Core/Src/main.c **** void LSM6DS0_Init(void) {
 138              		.loc 1 69 25 is_stmt 1 view -0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 8
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 143              	.LCFI5:
 144              		.cfi_def_cfa_offset 20
 145              		.cfi_offset 4, -20
 146              		.cfi_offset 5, -16
 147              		.cfi_offset 6, -12
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 87B0     		sub	sp, sp, #28
 151              	.LCFI6:
 152              		.cfi_def_cfa_offset 48
  70:Core/Src/main.c ****     uint8_t data=0;
 153              		.loc 1 70 5 view .LVU19
 154              		.loc 1 70 13 is_stmt 0 view .LVU20
 155 0004 0023     		movs	r3, #0
 156 0006 8DF81730 		strb	r3, [sp, #23]
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****     // Initialize Gyroscope
  73:Core/Src/main.c ****     data = 0x6C; // 416 Hz, 2000 dps
 157              		.loc 1 73 5 is_stmt 1 view .LVU21
 158              		.loc 1 73 10 is_stmt 0 view .LVU22
 159 000a 6C23     		movs	r3, #108
ARM GAS  /tmp/ccnFevFe.s 			page 5


 160 000c 8DF81730 		strb	r3, [sp, #23]
  74:Core/Src/main.c ****     HAL_I2C_Mem_Write(&hi2c1, LSM6DS0_ADDR, CTRL_REG2_G, 1, &data, 1, HAL_MAX_DELAY);
 161              		.loc 1 74 5 is_stmt 1 view .LVU23
 162 0010 0E4D     		ldr	r5, .L13
 163 0012 4FF0FF37 		mov	r7, #-1
 164 0016 0297     		str	r7, [sp, #8]
 165 0018 0124     		movs	r4, #1
 166 001a 0194     		str	r4, [sp, #4]
 167 001c 0DF11706 		add	r6, sp, #23
 168 0020 0096     		str	r6, [sp]
 169 0022 2346     		mov	r3, r4
 170 0024 1122     		movs	r2, #17
 171 0026 D621     		movs	r1, #214
 172 0028 2846     		mov	r0, r5
 173 002a FFF7FEFF 		bl	HAL_I2C_Mem_Write
 174              	.LVL6:
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****     // Initialize Accelerometer
  77:Core/Src/main.c ****     // HAL_I2C_Mem_Write(&hi2c1, LSM6DS0_ADDR, CTRL_REG1_XL, 1, &data1, 1, HAL_MAX_DELAY);
  78:Core/Src/main.c ****     data = 0x60; // 416 Hz, +/- 2g
 175              		.loc 1 78 5 view .LVU24
 176              		.loc 1 78 10 is_stmt 0 view .LVU25
 177 002e 6023     		movs	r3, #96
 178 0030 8DF81730 		strb	r3, [sp, #23]
  79:Core/Src/main.c ****     HAL_I2C_Mem_Write(&hi2c1, LSM6DS0_ADDR, CTRL_REG1_XL, 1, &data, 1, HAL_MAX_DELAY);
 179              		.loc 1 79 5 is_stmt 1 view .LVU26
 180 0034 0297     		str	r7, [sp, #8]
 181 0036 0194     		str	r4, [sp, #4]
 182 0038 0096     		str	r6, [sp]
 183 003a 2346     		mov	r3, r4
 184 003c 1022     		movs	r2, #16
 185 003e D621     		movs	r1, #214
 186 0040 2846     		mov	r0, r5
 187 0042 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 188              	.LVL7:
  80:Core/Src/main.c **** }
 189              		.loc 1 80 1 is_stmt 0 view .LVU27
 190 0046 07B0     		add	sp, sp, #28
 191              	.LCFI7:
 192              		.cfi_def_cfa_offset 20
 193              		@ sp needed
 194 0048 F0BD     		pop	{r4, r5, r6, r7, pc}
 195              	.L14:
 196 004a 00BF     		.align	2
 197              	.L13:
 198 004c 00000000 		.word	hi2c1
 199              		.cfi_endproc
 200              	.LFE70:
 202              		.section	.text.check_Gyro_Init,"ax",%progbits
 203              		.align	1
 204              		.global	check_Gyro_Init
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu softvfp
 210              	check_Gyro_Init:
 211              	.LFB71:
ARM GAS  /tmp/ccnFevFe.s 			page 6


  81:Core/Src/main.c **** int check_Gyro_Init(){
 212              		.loc 1 81 22 is_stmt 1 view -0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 8
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216 0000 00B5     		push	{lr}
 217              	.LCFI8:
 218              		.cfi_def_cfa_offset 4
 219              		.cfi_offset 14, -4
 220 0002 87B0     		sub	sp, sp, #28
 221              	.LCFI9:
 222              		.cfi_def_cfa_offset 32
  82:Core/Src/main.c ****   uint8_t data=0;
 223              		.loc 1 82 3 view .LVU29
 224              		.loc 1 82 11 is_stmt 0 view .LVU30
 225 0004 0023     		movs	r3, #0
 226 0006 8DF81730 		strb	r3, [sp, #23]
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****     // Check WHO_AM_I register
  85:Core/Src/main.c ****   HAL_I2C_Mem_Read(&hi2c1, 0xD7, CTRL_REG2_G, 1, &data, 1, HAL_MAX_DELAY);
 227              		.loc 1 85 3 is_stmt 1 view .LVU31
 228 000a 4FF0FF33 		mov	r3, #-1
 229 000e 0293     		str	r3, [sp, #8]
 230 0010 0123     		movs	r3, #1
 231 0012 0193     		str	r3, [sp, #4]
 232 0014 0DF11702 		add	r2, sp, #23
 233 0018 0092     		str	r2, [sp]
 234 001a 1122     		movs	r2, #17
 235 001c D721     		movs	r1, #215
 236 001e 0648     		ldr	r0, .L19
 237 0020 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 238              	.LVL8:
  86:Core/Src/main.c ****   if(data !=0x6C){
 239              		.loc 1 86 3 view .LVU32
 240              		.loc 1 86 11 is_stmt 0 view .LVU33
 241 0024 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 242              		.loc 1 86 5 view .LVU34
 243 0028 6C2B     		cmp	r3, #108
 244 002a 03D0     		beq	.L17
  87:Core/Src/main.c ****     return 0;
 245              		.loc 1 87 12 view .LVU35
 246 002c 0020     		movs	r0, #0
 247              	.L15:
  88:Core/Src/main.c ****   }else{
  89:Core/Src/main.c ****     return 1;
  90:Core/Src/main.c ****   }
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** }
 248              		.loc 1 92 1 view .LVU36
 249 002e 07B0     		add	sp, sp, #28
 250              	.LCFI10:
 251              		.cfi_remember_state
 252              		.cfi_def_cfa_offset 4
 253              		@ sp needed
 254 0030 5DF804FB 		ldr	pc, [sp], #4
 255              	.L17:
 256              	.LCFI11:
ARM GAS  /tmp/ccnFevFe.s 			page 7


 257              		.cfi_restore_state
  89:Core/Src/main.c ****   }
 258              		.loc 1 89 12 view .LVU37
 259 0034 0120     		movs	r0, #1
 260 0036 FAE7     		b	.L15
 261              	.L20:
 262              		.align	2
 263              	.L19:
 264 0038 00000000 		.word	hi2c1
 265              		.cfi_endproc
 266              	.LFE71:
 268              		.section	.text.check_XL_Init,"ax",%progbits
 269              		.align	1
 270              		.global	check_XL_Init
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 274              		.fpu softvfp
 276              	check_XL_Init:
 277              	.LFB72:
  93:Core/Src/main.c **** int check_XL_Init(){
 278              		.loc 1 93 20 is_stmt 1 view -0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 8
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 00B5     		push	{lr}
 283              	.LCFI12:
 284              		.cfi_def_cfa_offset 4
 285              		.cfi_offset 14, -4
 286 0002 87B0     		sub	sp, sp, #28
 287              	.LCFI13:
 288              		.cfi_def_cfa_offset 32
  94:Core/Src/main.c ****   uint8_t data=0;
 289              		.loc 1 94 3 view .LVU39
 290              		.loc 1 94 11 is_stmt 0 view .LVU40
 291 0004 0023     		movs	r3, #0
 292 0006 8DF81730 		strb	r3, [sp, #23]
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****     // Check WHO_AM_I register
  97:Core/Src/main.c ****   HAL_I2C_Mem_Read(&hi2c1, 0xD7, CTRL_REG1_XL, 1, &data, 1, HAL_MAX_DELAY);
 293              		.loc 1 97 3 is_stmt 1 view .LVU41
 294 000a 4FF0FF33 		mov	r3, #-1
 295 000e 0293     		str	r3, [sp, #8]
 296 0010 0123     		movs	r3, #1
 297 0012 0193     		str	r3, [sp, #4]
 298 0014 0DF11702 		add	r2, sp, #23
 299 0018 0092     		str	r2, [sp]
 300 001a 1022     		movs	r2, #16
 301 001c D721     		movs	r1, #215
 302 001e 0648     		ldr	r0, .L25
 303 0020 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 304              	.LVL9:
  98:Core/Src/main.c ****   if(data !=0x60){
 305              		.loc 1 98 3 view .LVU42
 306              		.loc 1 98 11 is_stmt 0 view .LVU43
 307 0024 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 308              		.loc 1 98 5 view .LVU44
ARM GAS  /tmp/ccnFevFe.s 			page 8


 309 0028 602B     		cmp	r3, #96
 310 002a 03D0     		beq	.L23
  99:Core/Src/main.c ****     return 0;
 311              		.loc 1 99 12 view .LVU45
 312 002c 0020     		movs	r0, #0
 313              	.L21:
 100:Core/Src/main.c ****   }else{
 101:Core/Src/main.c ****     return 1;
 102:Core/Src/main.c ****   }
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** }
 314              		.loc 1 104 1 view .LVU46
 315 002e 07B0     		add	sp, sp, #28
 316              	.LCFI14:
 317              		.cfi_remember_state
 318              		.cfi_def_cfa_offset 4
 319              		@ sp needed
 320 0030 5DF804FB 		ldr	pc, [sp], #4
 321              	.L23:
 322              	.LCFI15:
 323              		.cfi_restore_state
 101:Core/Src/main.c ****   }
 324              		.loc 1 101 12 view .LVU47
 325 0034 0120     		movs	r0, #1
 326 0036 FAE7     		b	.L21
 327              	.L26:
 328              		.align	2
 329              	.L25:
 330 0038 00000000 		.word	hi2c1
 331              		.cfi_endproc
 332              	.LFE72:
 334              		.section	.text.LSM6DS0_ReadGyro,"ax",%progbits
 335              		.align	1
 336              		.global	LSM6DS0_ReadGyro
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu softvfp
 342              	LSM6DS0_ReadGyro:
 343              	.LVL10:
 344              	.LFB73:
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** void LSM6DS0_ReadGyro(int16_t *gyro_data) {
 345              		.loc 1 107 43 is_stmt 1 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 8
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		.loc 1 107 43 is_stmt 0 view .LVU49
 350 0000 10B5     		push	{r4, lr}
 351              	.LCFI16:
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 4, -8
 354              		.cfi_offset 14, -4
 355 0002 86B0     		sub	sp, sp, #24
 356              	.LCFI17:
 357              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/ccnFevFe.s 			page 9


 358 0004 0446     		mov	r4, r0
 108:Core/Src/main.c ****     uint8_t data[6];
 359              		.loc 1 108 5 is_stmt 1 view .LVU50
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, OUT_X_L_G, 1, data, 6, HAL_MAX_DELAY);
 360              		.loc 1 110 5 view .LVU51
 361 0006 4FF0FF33 		mov	r3, #-1
 362 000a 0293     		str	r3, [sp, #8]
 363 000c 0623     		movs	r3, #6
 364 000e 0193     		str	r3, [sp, #4]
 365 0010 04AB     		add	r3, sp, #16
 366 0012 0093     		str	r3, [sp]
 367 0014 0123     		movs	r3, #1
 368 0016 2222     		movs	r2, #34
 369 0018 D621     		movs	r1, #214
 370 001a 0D48     		ldr	r0, .L29
 371              	.LVL11:
 372              		.loc 1 110 5 is_stmt 0 view .LVU52
 373 001c FFF7FEFF 		bl	HAL_I2C_Mem_Read
 374              	.LVL12:
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****     gyro_data[0] = (int16_t)(data[0] | (data[1] << 8));
 375              		.loc 1 112 5 is_stmt 1 view .LVU53
 376              		.loc 1 112 34 is_stmt 0 view .LVU54
 377 0020 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 378              		.loc 1 112 45 view .LVU55
 379 0024 9DF81120 		ldrb	r2, [sp, #17]	@ zero_extendqisi2
 380              		.loc 1 112 20 view .LVU56
 381 0028 43EA0223 		orr	r3, r3, r2, lsl #8
 382              		.loc 1 112 18 view .LVU57
 383 002c 2380     		strh	r3, [r4]	@ movhi
 113:Core/Src/main.c ****     gyro_data[1] = (int16_t)(data[2] | (data[3] << 8));
 384              		.loc 1 113 5 is_stmt 1 view .LVU58
 385              		.loc 1 113 34 is_stmt 0 view .LVU59
 386 002e 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
 387              		.loc 1 113 45 view .LVU60
 388 0032 9DF81320 		ldrb	r2, [sp, #19]	@ zero_extendqisi2
 389              		.loc 1 113 20 view .LVU61
 390 0036 43EA0223 		orr	r3, r3, r2, lsl #8
 391              		.loc 1 113 18 view .LVU62
 392 003a 6380     		strh	r3, [r4, #2]	@ movhi
 114:Core/Src/main.c ****     gyro_data[2] = (int16_t)(data[4] | (data[5] << 8));
 393              		.loc 1 114 5 is_stmt 1 view .LVU63
 394              		.loc 1 114 34 is_stmt 0 view .LVU64
 395 003c 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 396              		.loc 1 114 45 view .LVU65
 397 0040 9DF81520 		ldrb	r2, [sp, #21]	@ zero_extendqisi2
 398              		.loc 1 114 20 view .LVU66
 399 0044 43EA0223 		orr	r3, r3, r2, lsl #8
 400              		.loc 1 114 18 view .LVU67
 401 0048 A380     		strh	r3, [r4, #4]	@ movhi
 115:Core/Src/main.c **** }
 402              		.loc 1 115 1 view .LVU68
 403 004a 06B0     		add	sp, sp, #24
 404              	.LCFI18:
 405              		.cfi_def_cfa_offset 8
 406              		@ sp needed
ARM GAS  /tmp/ccnFevFe.s 			page 10


 407 004c 10BD     		pop	{r4, pc}
 408              	.LVL13:
 409              	.L30:
 410              		.loc 1 115 1 view .LVU69
 411 004e 00BF     		.align	2
 412              	.L29:
 413 0050 00000000 		.word	hi2c1
 414              		.cfi_endproc
 415              	.LFE73:
 417              		.global	__aeabi_i2f
 418              		.global	__aeabi_fmul
 419              		.section	.text.LSM6DS0_ReadAccel_X,"ax",%progbits
 420              		.align	1
 421              		.global	LSM6DS0_ReadAccel_X
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 425              		.fpu softvfp
 427              	LSM6DS0_ReadAccel_X:
 428              	.LFB74:
 116:Core/Src/main.c **** float LSM6DS0_ReadAccel_X(void) {
 429              		.loc 1 116 33 is_stmt 1 view -0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 8
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433 0000 70B5     		push	{r4, r5, r6, lr}
 434              	.LCFI19:
 435              		.cfi_def_cfa_offset 16
 436              		.cfi_offset 4, -16
 437              		.cfi_offset 5, -12
 438              		.cfi_offset 6, -8
 439              		.cfi_offset 14, -4
 440 0002 86B0     		sub	sp, sp, #24
 441              	.LCFI20:
 442              		.cfi_def_cfa_offset 40
 117:Core/Src/main.c ****     // uint8_t data[6];
 118:Core/Src/main.c ****     uint8_t Out_X_XL_L = 0;
 443              		.loc 1 118 5 view .LVU71
 444              		.loc 1 118 13 is_stmt 0 view .LVU72
 445 0004 0023     		movs	r3, #0
 446 0006 8DF81730 		strb	r3, [sp, #23]
 119:Core/Src/main.c **** 	  uint8_t Out_X_XL_H = 0;
 447              		.loc 1 119 4 is_stmt 1 view .LVU73
 448              		.loc 1 119 12 is_stmt 0 view .LVU74
 449 000a 8DF81630 		strb	r3, [sp, #22]
 120:Core/Src/main.c ****     int16_t Raw_X = 0;
 450              		.loc 1 120 5 is_stmt 1 view .LVU75
 451              	.LVL14:
 121:Core/Src/main.c ****     float Acceleration_X = 0;
 452              		.loc 1 121 5 view .LVU76
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, OUT_X_L_XL, I2C_MEMADD_SIZE_8BIT, &Out_X_XL_L, 1, HAL_MA
 453              		.loc 1 123 5 view .LVU77
 454 000e 144D     		ldr	r5, .L33
 455 0010 4FF0FF36 		mov	r6, #-1
 456 0014 0296     		str	r6, [sp, #8]
 457 0016 0124     		movs	r4, #1
ARM GAS  /tmp/ccnFevFe.s 			page 11


 458 0018 0194     		str	r4, [sp, #4]
 459 001a 0DF11703 		add	r3, sp, #23
 460 001e 0093     		str	r3, [sp]
 461 0020 2346     		mov	r3, r4
 462 0022 2822     		movs	r2, #40
 463 0024 D621     		movs	r1, #214
 464 0026 2846     		mov	r0, r5
 465 0028 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 466              	.LVL15:
 124:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, OUT_X_H_XL, I2C_MEMADD_SIZE_8BIT, &Out_X_XL_H, 1, HAL_MA
 467              		.loc 1 124 5 view .LVU78
 468 002c 0296     		str	r6, [sp, #8]
 469 002e 0194     		str	r4, [sp, #4]
 470 0030 0DF11603 		add	r3, sp, #22
 471 0034 0093     		str	r3, [sp]
 472 0036 2346     		mov	r3, r4
 473 0038 2922     		movs	r2, #41
 474 003a D621     		movs	r1, #214
 475 003c 2846     		mov	r0, r5
 476 003e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 477              	.LVL16:
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****     Raw_X = ((Out_X_XL_H << 8) | Out_X_XL_L);
 478              		.loc 1 126 5 view .LVU79
 479              		.loc 1 126 26 is_stmt 0 view .LVU80
 480 0042 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 481 0046 1B02     		lsls	r3, r3, #8
 482              		.loc 1 126 32 view .LVU81
 483 0048 1BB2     		sxth	r3, r3
 484 004a 9DF81700 		ldrb	r0, [sp, #23]	@ zero_extendqisi2
 485              	.LVL17:
 127:Core/Src/main.c ****     Acceleration_X = (float)Raw_X*0.061f;
 486              		.loc 1 127 5 is_stmt 1 view .LVU82
 487              		.loc 1 127 22 is_stmt 0 view .LVU83
 488 004e 1843     		orrs	r0, r0, r3
 489              	.LVL18:
 490              		.loc 1 127 22 view .LVU84
 491 0050 FFF7FEFF 		bl	__aeabi_i2f
 492              	.LVL19:
 493              		.loc 1 127 20 view .LVU85
 494 0054 0349     		ldr	r1, .L33+4
 495 0056 FFF7FEFF 		bl	__aeabi_fmul
 496              	.LVL20:
 128:Core/Src/main.c ****     return (Acceleration_X);
 497              		.loc 1 128 5 is_stmt 1 view .LVU86
 129:Core/Src/main.c **** }
 498              		.loc 1 129 1 is_stmt 0 view .LVU87
 499 005a 06B0     		add	sp, sp, #24
 500              	.LCFI21:
 501              		.cfi_def_cfa_offset 16
 502              		@ sp needed
 503 005c 70BD     		pop	{r4, r5, r6, pc}
 504              	.L34:
 505 005e 00BF     		.align	2
 506              	.L33:
 507 0060 00000000 		.word	hi2c1
 508 0064 23DB793D 		.word	1031396131
ARM GAS  /tmp/ccnFevFe.s 			page 12


 509              		.cfi_endproc
 510              	.LFE74:
 512              		.section	.text.LSM6DS0_ReadAccel_Y,"ax",%progbits
 513              		.align	1
 514              		.global	LSM6DS0_ReadAccel_Y
 515              		.syntax unified
 516              		.thumb
 517              		.thumb_func
 518              		.fpu softvfp
 520              	LSM6DS0_ReadAccel_Y:
 521              	.LFB75:
 130:Core/Src/main.c **** float LSM6DS0_ReadAccel_Y(void) {
 522              		.loc 1 130 33 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 8
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 70B5     		push	{r4, r5, r6, lr}
 527              	.LCFI22:
 528              		.cfi_def_cfa_offset 16
 529              		.cfi_offset 4, -16
 530              		.cfi_offset 5, -12
 531              		.cfi_offset 6, -8
 532              		.cfi_offset 14, -4
 533 0002 86B0     		sub	sp, sp, #24
 534              	.LCFI23:
 535              		.cfi_def_cfa_offset 40
 131:Core/Src/main.c ****     // uint8_t data[6];
 132:Core/Src/main.c ****     uint8_t Out_Y_XL_L = 0;
 536              		.loc 1 132 5 view .LVU89
 537              		.loc 1 132 13 is_stmt 0 view .LVU90
 538 0004 0023     		movs	r3, #0
 539 0006 8DF81730 		strb	r3, [sp, #23]
 133:Core/Src/main.c **** 	  uint8_t Out_Y_XL_H = 0;
 540              		.loc 1 133 4 is_stmt 1 view .LVU91
 541              		.loc 1 133 12 is_stmt 0 view .LVU92
 542 000a 8DF81630 		strb	r3, [sp, #22]
 134:Core/Src/main.c ****     int16_t Raw_Y = 0;
 543              		.loc 1 134 5 is_stmt 1 view .LVU93
 544              	.LVL21:
 135:Core/Src/main.c ****     float Acceleration_Y = 0;
 545              		.loc 1 135 5 view .LVU94
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, OUT_Y_L_XL, I2C_MEMADD_SIZE_8BIT, &Out_Y_XL_L, 1, HAL_MA
 546              		.loc 1 137 5 view .LVU95
 547 000e 144D     		ldr	r5, .L37
 548 0010 4FF0FF36 		mov	r6, #-1
 549 0014 0296     		str	r6, [sp, #8]
 550 0016 0124     		movs	r4, #1
 551 0018 0194     		str	r4, [sp, #4]
 552 001a 0DF11703 		add	r3, sp, #23
 553 001e 0093     		str	r3, [sp]
 554 0020 2346     		mov	r3, r4
 555 0022 2A22     		movs	r2, #42
 556 0024 D621     		movs	r1, #214
 557 0026 2846     		mov	r0, r5
 558 0028 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 559              	.LVL22:
ARM GAS  /tmp/ccnFevFe.s 			page 13


 138:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, OUT_Y_H_XL, I2C_MEMADD_SIZE_8BIT, &Out_Y_XL_H, 1, HAL_MA
 560              		.loc 1 138 5 view .LVU96
 561 002c 0296     		str	r6, [sp, #8]
 562 002e 0194     		str	r4, [sp, #4]
 563 0030 0DF11603 		add	r3, sp, #22
 564 0034 0093     		str	r3, [sp]
 565 0036 2346     		mov	r3, r4
 566 0038 2B22     		movs	r2, #43
 567 003a D621     		movs	r1, #214
 568 003c 2846     		mov	r0, r5
 569 003e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 570              	.LVL23:
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****     Raw_Y = ((Out_Y_XL_H << 8) | Out_Y_XL_L);
 571              		.loc 1 140 5 view .LVU97
 572              		.loc 1 140 26 is_stmt 0 view .LVU98
 573 0042 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 574 0046 1B02     		lsls	r3, r3, #8
 575              		.loc 1 140 32 view .LVU99
 576 0048 1BB2     		sxth	r3, r3
 577 004a 9DF81700 		ldrb	r0, [sp, #23]	@ zero_extendqisi2
 578              	.LVL24:
 141:Core/Src/main.c ****     Acceleration_Y = (float)Raw_Y*0.061f;
 579              		.loc 1 141 5 is_stmt 1 view .LVU100
 580              		.loc 1 141 22 is_stmt 0 view .LVU101
 581 004e 1843     		orrs	r0, r0, r3
 582              	.LVL25:
 583              		.loc 1 141 22 view .LVU102
 584 0050 FFF7FEFF 		bl	__aeabi_i2f
 585              	.LVL26:
 586              		.loc 1 141 20 view .LVU103
 587 0054 0349     		ldr	r1, .L37+4
 588 0056 FFF7FEFF 		bl	__aeabi_fmul
 589              	.LVL27:
 142:Core/Src/main.c ****     return (Acceleration_Y);
 590              		.loc 1 142 5 is_stmt 1 view .LVU104
 143:Core/Src/main.c **** }
 591              		.loc 1 143 1 is_stmt 0 view .LVU105
 592 005a 06B0     		add	sp, sp, #24
 593              	.LCFI24:
 594              		.cfi_def_cfa_offset 16
 595              		@ sp needed
 596 005c 70BD     		pop	{r4, r5, r6, pc}
 597              	.L38:
 598 005e 00BF     		.align	2
 599              	.L37:
 600 0060 00000000 		.word	hi2c1
 601 0064 23DB793D 		.word	1031396131
 602              		.cfi_endproc
 603              	.LFE75:
 605              		.section	.text.LSM6DS0_ReadAccel_Z,"ax",%progbits
 606              		.align	1
 607              		.global	LSM6DS0_ReadAccel_Z
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 611              		.fpu softvfp
ARM GAS  /tmp/ccnFevFe.s 			page 14


 613              	LSM6DS0_ReadAccel_Z:
 614              	.LFB76:
 144:Core/Src/main.c **** float LSM6DS0_ReadAccel_Z(void) {
 615              		.loc 1 144 33 is_stmt 1 view -0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 8
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619 0000 70B5     		push	{r4, r5, r6, lr}
 620              	.LCFI25:
 621              		.cfi_def_cfa_offset 16
 622              		.cfi_offset 4, -16
 623              		.cfi_offset 5, -12
 624              		.cfi_offset 6, -8
 625              		.cfi_offset 14, -4
 626 0002 86B0     		sub	sp, sp, #24
 627              	.LCFI26:
 628              		.cfi_def_cfa_offset 40
 145:Core/Src/main.c ****     // uint8_t data[6];
 146:Core/Src/main.c ****     uint8_t Out_Z_XL_L = 0;
 629              		.loc 1 146 5 view .LVU107
 630              		.loc 1 146 13 is_stmt 0 view .LVU108
 631 0004 0023     		movs	r3, #0
 632 0006 8DF81730 		strb	r3, [sp, #23]
 147:Core/Src/main.c **** 	  uint8_t Out_Z_XL_H = 0;
 633              		.loc 1 147 4 is_stmt 1 view .LVU109
 634              		.loc 1 147 12 is_stmt 0 view .LVU110
 635 000a 8DF81630 		strb	r3, [sp, #22]
 148:Core/Src/main.c ****     int16_t Raw_Z = 0;
 636              		.loc 1 148 5 is_stmt 1 view .LVU111
 637              	.LVL28:
 149:Core/Src/main.c ****     float Acceleration_Z = 0;
 638              		.loc 1 149 5 view .LVU112
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, OUT_Z_L_XL, I2C_MEMADD_SIZE_8BIT, &Out_Z_XL_L, 1, HAL_MA
 639              		.loc 1 151 5 view .LVU113
 640 000e 144D     		ldr	r5, .L41
 641 0010 4FF0FF36 		mov	r6, #-1
 642 0014 0296     		str	r6, [sp, #8]
 643 0016 0124     		movs	r4, #1
 644 0018 0194     		str	r4, [sp, #4]
 645 001a 0DF11703 		add	r3, sp, #23
 646 001e 0093     		str	r3, [sp]
 647 0020 2346     		mov	r3, r4
 648 0022 2C22     		movs	r2, #44
 649 0024 D621     		movs	r1, #214
 650 0026 2846     		mov	r0, r5
 651 0028 FFF7FEFF 		bl	HAL_I2C_Mem_Read
 652              	.LVL29:
 152:Core/Src/main.c ****     HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, OUT_Z_H_XL, I2C_MEMADD_SIZE_8BIT, &Out_Z_XL_H, 1, HAL_MA
 653              		.loc 1 152 5 view .LVU114
 654 002c 0296     		str	r6, [sp, #8]
 655 002e 0194     		str	r4, [sp, #4]
 656 0030 0DF11603 		add	r3, sp, #22
 657 0034 0093     		str	r3, [sp]
 658 0036 2346     		mov	r3, r4
 659 0038 2D22     		movs	r2, #45
 660 003a D621     		movs	r1, #214
ARM GAS  /tmp/ccnFevFe.s 			page 15


 661 003c 2846     		mov	r0, r5
 662 003e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 663              	.LVL30:
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****     Raw_Z = ((Out_Z_XL_H << 8) | Out_Z_XL_L);
 664              		.loc 1 154 5 view .LVU115
 665              		.loc 1 154 26 is_stmt 0 view .LVU116
 666 0042 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 667 0046 1B02     		lsls	r3, r3, #8
 668              		.loc 1 154 32 view .LVU117
 669 0048 1BB2     		sxth	r3, r3
 670 004a 9DF81700 		ldrb	r0, [sp, #23]	@ zero_extendqisi2
 671              	.LVL31:
 155:Core/Src/main.c ****     Acceleration_Z = (float)Raw_Z*0.061f;
 672              		.loc 1 155 5 is_stmt 1 view .LVU118
 673              		.loc 1 155 22 is_stmt 0 view .LVU119
 674 004e 1843     		orrs	r0, r0, r3
 675              	.LVL32:
 676              		.loc 1 155 22 view .LVU120
 677 0050 FFF7FEFF 		bl	__aeabi_i2f
 678              	.LVL33:
 679              		.loc 1 155 20 view .LVU121
 680 0054 0349     		ldr	r1, .L41+4
 681 0056 FFF7FEFF 		bl	__aeabi_fmul
 682              	.LVL34:
 156:Core/Src/main.c ****     return (Acceleration_Z);
 683              		.loc 1 156 5 is_stmt 1 view .LVU122
 157:Core/Src/main.c **** }
 684              		.loc 1 157 1 is_stmt 0 view .LVU123
 685 005a 06B0     		add	sp, sp, #24
 686              	.LCFI27:
 687              		.cfi_def_cfa_offset 16
 688              		@ sp needed
 689 005c 70BD     		pop	{r4, r5, r6, pc}
 690              	.L42:
 691 005e 00BF     		.align	2
 692              	.L41:
 693 0060 00000000 		.word	hi2c1
 694 0064 23DB793D 		.word	1031396131
 695              		.cfi_endproc
 696              	.LFE76:
 698              		.section	.text.Error_Handler,"ax",%progbits
 699              		.align	1
 700              		.global	Error_Handler
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 704              		.fpu softvfp
 706              	Error_Handler:
 707              	.LFB79:
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****  
 160:Core/Src/main.c **** /* USER CODE END PD */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
 163:Core/Src/main.c **** /* USER CODE BEGIN PM */
 164:Core/Src/main.c **** 
ARM GAS  /tmp/ccnFevFe.s 			page 16


 165:Core/Src/main.c **** /* USER CODE END PM */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** /* USER CODE BEGIN PV */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /* USER CODE END PV */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 174:Core/Src/main.c **** void SystemClock_Config(void);
 175:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /* USER CODE END PFP */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 180:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /* USER CODE END 0 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief  The application entry point.
 186:Core/Src/main.c ****   * @retval int
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c **** int main(void)
 189:Core/Src/main.c **** {
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE END 1 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 198:Core/Src/main.c ****   HAL_Init();
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE END Init */
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* Configure the system clock */
 205:Core/Src/main.c ****   SystemClock_Config();
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE END SysInit */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* Initialize all configured peripherals */
 212:Core/Src/main.c ****   MX_GPIO_Init();
 213:Core/Src/main.c ****   MX_I2C1_Init();
 214:Core/Src/main.c ****   MX_USART1_UART_Init();
 215:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 216:Core/Src/main.c ****   if(LSM6DS0_begin()==0){
 217:Core/Src/main.c ****         printf("LSM_not_found\r\n");
 218:Core/Src/main.c ****   }else{
 219:Core/Src/main.c ****         printf("LSM_found..\r\n");
 220:Core/Src/main.c ****         printf("initializing six axis sensor....\r\n");
 221:Core/Src/main.c ****    }
ARM GAS  /tmp/ccnFevFe.s 			page 17


 222:Core/Src/main.c ****   LSM6DS0_Init();
 223:Core/Src/main.c ****   if (check_Gyro_Init()!=1){
 224:Core/Src/main.c ****     printf("gyro_init_failed\r\n");
 225:Core/Src/main.c ****   }else{
 226:Core/Src/main.c ****     printf("gyro_init_successful\r\n");
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   if(check_XL_Init()!=1){
 229:Core/Src/main.c ****     printf("XL_init_failed\r\n");
 230:Core/Src/main.c ****   }
 231:Core/Src/main.c ****   else{
 232:Core/Src/main.c ****     printf("XL_init_successfull\r\n");
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE END 2 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* Infinite loop */
 238:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 239:Core/Src/main.c ****   
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****     int16_t gyro_data[3];
 242:Core/Src/main.c ****     float accel_data[3];
 243:Core/Src/main.c ****     // uint8_t status;
 244:Core/Src/main.c ****     // HAL_I2C_Mem_Read(&hi2c1, LSM6DS0_ADDR, STATUS_REG, 1, &status, 6, HAL_MAX_DELAY);
 245:Core/Src/main.c ****   while (1)
 246:Core/Src/main.c ****   {
 247:Core/Src/main.c ****     // if(LSM6DS0_begin()==0){
 248:Core/Src/main.c ****     //     printf("LSM_not_found\r\n");
 249:Core/Src/main.c ****     // }else{
 250:Core/Src/main.c ****     //     printf("LSM_found..\r\n");
 251:Core/Src/main.c ****     //     printf("initializing six axis sensor....\r\n");
 252:Core/Src/main.c ****     // }
 253:Core/Src/main.c ****   
 254:Core/Src/main.c ****     // printf("hellow\r\n");
 255:Core/Src/main.c ****       accel_data[0]=LSM6DS0_ReadAccel_X();
 256:Core/Src/main.c ****       accel_data[1]=LSM6DS0_ReadAccel_Y();
 257:Core/Src/main.c ****       accel_data[2]=LSM6DS0_ReadAccel_Z();
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****       // accel_data = (int)accel_data;
 261:Core/Src/main.c ****       // printf("Gyro: X=%d\r\n",gyro_data);
 262:Core/Src/main.c ****       printf("Accel: X=%d Y=%d Z=%d\r\n",(int)accel_data[0],(int)accel_data[1],(int)accel_data[2]);
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****     /* USER CODE END WHILE */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 267:Core/Src/main.c ****   }
 268:Core/Src/main.c ****   
 269:Core/Src/main.c ****   /* USER CODE END 3 */
 270:Core/Src/main.c **** }
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** /**
 273:Core/Src/main.c ****   * @brief System Clock Configuration
 274:Core/Src/main.c ****   * @retval None
 275:Core/Src/main.c ****   */
 276:Core/Src/main.c **** void SystemClock_Config(void)
 277:Core/Src/main.c **** {
 278:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  /tmp/ccnFevFe.s 			page 18


 279:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 282:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 283:Core/Src/main.c ****   */
 284:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 285:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 286:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 287:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 288:Core/Src/main.c ****   {
 289:Core/Src/main.c ****     Error_Handler();
 290:Core/Src/main.c ****   }
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 293:Core/Src/main.c ****   */
 294:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 295:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 296:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 297:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 298:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 299:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 302:Core/Src/main.c ****   {
 303:Core/Src/main.c ****     Error_Handler();
 304:Core/Src/main.c ****   }
 305:Core/Src/main.c **** }
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** /* USER CODE END 4 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** /**
 312:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 313:Core/Src/main.c ****   * @retval None
 314:Core/Src/main.c ****   */
 315:Core/Src/main.c **** void Error_Handler(void)
 316:Core/Src/main.c **** {
 708              		.loc 1 316 1 is_stmt 1 view -0
 709              		.cfi_startproc
 710              		@ Volatile: function does not return.
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 317:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 318:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 319:Core/Src/main.c ****   __disable_irq();
 714              		.loc 1 319 3 view .LVU125
 715              	.LBB4:
 716              	.LBI4:
 717              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
ARM GAS  /tmp/ccnFevFe.s 			page 19


   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccnFevFe.s 			page 20


  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
ARM GAS  /tmp/ccnFevFe.s 			page 21


 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 718              		.loc 2 140 27 view .LVU126
 719              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 720              		.loc 2 142 3 view .LVU127
 721              		.syntax unified
 722              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 723 0000 72B6     		cpsid i
 724              	@ 0 "" 2
 725              		.thumb
 726              		.syntax unified
 727              	.L44:
 728              	.LBE5:
 729              	.LBE4:
 320:Core/Src/main.c ****   while (1)
 730              		.loc 1 320 3 discriminator 1 view .LVU128
 321:Core/Src/main.c ****   {
 322:Core/Src/main.c ****   }
 731              		.loc 1 322 3 discriminator 1 view .LVU129
 320:Core/Src/main.c ****   while (1)
 732              		.loc 1 320 9 discriminator 1 view .LVU130
 733 0002 FEE7     		b	.L44
 734              		.cfi_endproc
 735              	.LFE79:
 737              		.section	.text.SystemClock_Config,"ax",%progbits
 738              		.align	1
 739              		.global	SystemClock_Config
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 743              		.fpu softvfp
 745              	SystemClock_Config:
 746              	.LFB78:
 277:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 747              		.loc 1 277 1 view -0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 64
ARM GAS  /tmp/ccnFevFe.s 			page 22


 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751 0000 00B5     		push	{lr}
 752              	.LCFI28:
 753              		.cfi_def_cfa_offset 4
 754              		.cfi_offset 14, -4
 755 0002 91B0     		sub	sp, sp, #68
 756              	.LCFI29:
 757              		.cfi_def_cfa_offset 72
 278:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 758              		.loc 1 278 3 view .LVU132
 278:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 759              		.loc 1 278 22 is_stmt 0 view .LVU133
 760 0004 2822     		movs	r2, #40
 761 0006 0021     		movs	r1, #0
 762 0008 06A8     		add	r0, sp, #24
 763 000a FFF7FEFF 		bl	memset
 764              	.LVL35:
 279:Core/Src/main.c **** 
 765              		.loc 1 279 3 is_stmt 1 view .LVU134
 279:Core/Src/main.c **** 
 766              		.loc 1 279 22 is_stmt 0 view .LVU135
 767 000e 0023     		movs	r3, #0
 768 0010 0193     		str	r3, [sp, #4]
 769 0012 0293     		str	r3, [sp, #8]
 770 0014 0393     		str	r3, [sp, #12]
 771 0016 0493     		str	r3, [sp, #16]
 772 0018 0593     		str	r3, [sp, #20]
 284:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 773              		.loc 1 284 3 is_stmt 1 view .LVU136
 284:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 774              		.loc 1 284 36 is_stmt 0 view .LVU137
 775 001a 0123     		movs	r3, #1
 776 001c 0693     		str	r3, [sp, #24]
 285:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 777              		.loc 1 285 3 is_stmt 1 view .LVU138
 285:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 778              		.loc 1 285 30 is_stmt 0 view .LVU139
 779 001e 4FF48033 		mov	r3, #65536
 780 0022 0793     		str	r3, [sp, #28]
 286:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 781              		.loc 1 286 3 is_stmt 1 view .LVU140
 287:Core/Src/main.c ****   {
 782              		.loc 1 287 3 view .LVU141
 287:Core/Src/main.c ****   {
 783              		.loc 1 287 7 is_stmt 0 view .LVU142
 784 0024 06A8     		add	r0, sp, #24
 785 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 786              	.LVL36:
 287:Core/Src/main.c ****   {
 787              		.loc 1 287 6 view .LVU143
 788 002a 70B9     		cbnz	r0, .L49
 294:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 789              		.loc 1 294 3 is_stmt 1 view .LVU144
 294:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 790              		.loc 1 294 31 is_stmt 0 view .LVU145
 791 002c 0F23     		movs	r3, #15
 792 002e 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccnFevFe.s 			page 23


 296:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 793              		.loc 1 296 3 is_stmt 1 view .LVU146
 296:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 794              		.loc 1 296 34 is_stmt 0 view .LVU147
 795 0030 0123     		movs	r3, #1
 796 0032 0293     		str	r3, [sp, #8]
 297:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 797              		.loc 1 297 3 is_stmt 1 view .LVU148
 297:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 798              		.loc 1 297 35 is_stmt 0 view .LVU149
 799 0034 0021     		movs	r1, #0
 800 0036 0391     		str	r1, [sp, #12]
 298:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 801              		.loc 1 298 3 is_stmt 1 view .LVU150
 298:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 802              		.loc 1 298 36 is_stmt 0 view .LVU151
 803 0038 0491     		str	r1, [sp, #16]
 299:Core/Src/main.c **** 
 804              		.loc 1 299 3 is_stmt 1 view .LVU152
 299:Core/Src/main.c **** 
 805              		.loc 1 299 36 is_stmt 0 view .LVU153
 806 003a 0591     		str	r1, [sp, #20]
 301:Core/Src/main.c ****   {
 807              		.loc 1 301 3 is_stmt 1 view .LVU154
 301:Core/Src/main.c ****   {
 808              		.loc 1 301 7 is_stmt 0 view .LVU155
 809 003c 01A8     		add	r0, sp, #4
 810 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 811              	.LVL37:
 301:Core/Src/main.c ****   {
 812              		.loc 1 301 6 view .LVU156
 813 0042 20B9     		cbnz	r0, .L50
 305:Core/Src/main.c **** 
 814              		.loc 1 305 1 view .LVU157
 815 0044 11B0     		add	sp, sp, #68
 816              	.LCFI30:
 817              		.cfi_remember_state
 818              		.cfi_def_cfa_offset 4
 819              		@ sp needed
 820 0046 5DF804FB 		ldr	pc, [sp], #4
 821              	.L49:
 822              	.LCFI31:
 823              		.cfi_restore_state
 289:Core/Src/main.c ****   }
 824              		.loc 1 289 5 is_stmt 1 view .LVU158
 825 004a FFF7FEFF 		bl	Error_Handler
 826              	.LVL38:
 827              	.L50:
 303:Core/Src/main.c ****   }
 828              		.loc 1 303 5 view .LVU159
 829 004e FFF7FEFF 		bl	Error_Handler
 830              	.LVL39:
 831              		.cfi_endproc
 832              	.LFE78:
 834              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 835              		.align	2
 836              	.LC0:
ARM GAS  /tmp/ccnFevFe.s 			page 24


 837 0000 4C534D5F 		.ascii	"LSM_not_found\015\000"
 837      6E6F745F 
 837      666F756E 
 837      640D00
 838 000f 00       		.align	2
 839              	.LC1:
 840 0010 4C534D5F 		.ascii	"LSM_found..\015\000"
 840      666F756E 
 840      642E2E0D 
 840      00
 841 001d 000000   		.align	2
 842              	.LC2:
 843 0020 696E6974 		.ascii	"initializing six axis sensor....\015\000"
 843      69616C69 
 843      7A696E67 
 843      20736978 
 843      20617869 
 844 0042 0000     		.align	2
 845              	.LC3:
 846 0044 6779726F 		.ascii	"gyro_init_failed\015\000"
 846      5F696E69 
 846      745F6661 
 846      696C6564 
 846      0D00
 847 0056 0000     		.align	2
 848              	.LC4:
 849 0058 6779726F 		.ascii	"gyro_init_successful\015\000"
 849      5F696E69 
 849      745F7375 
 849      63636573 
 849      7366756C 
 850 006e 0000     		.align	2
 851              	.LC5:
 852 0070 584C5F69 		.ascii	"XL_init_failed\015\000"
 852      6E69745F 
 852      6661696C 
 852      65640D00 
 853              		.align	2
 854              	.LC6:
 855 0080 584C5F69 		.ascii	"XL_init_successfull\015\000"
 855      6E69745F 
 855      73756363 
 855      65737366 
 855      756C6C0D 
 856              		.global	__aeabi_f2iz
 857 0095 000000   		.align	2
 858              	.LC7:
 859 0098 41636365 		.ascii	"Accel: X=%d Y=%d Z=%d\015\012\000"
 859      6C3A2058 
 859      3D256420 
 859      593D2564 
 859      205A3D25 
 860              		.section	.text.main,"ax",%progbits
 861              		.align	1
 862              		.global	main
 863              		.syntax unified
 864              		.thumb
ARM GAS  /tmp/ccnFevFe.s 			page 25


 865              		.thumb_func
 866              		.fpu softvfp
 868              	main:
 869              	.LFB77:
 189:Core/Src/main.c **** 
 870              		.loc 1 189 1 view -0
 871              		.cfi_startproc
 872              		@ Volatile: function does not return.
 873              		@ args = 0, pretend = 0, frame = 16
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875 0000 00B5     		push	{lr}
 876              	.LCFI32:
 877              		.cfi_def_cfa_offset 4
 878              		.cfi_offset 14, -4
 879 0002 85B0     		sub	sp, sp, #20
 880              	.LCFI33:
 881              		.cfi_def_cfa_offset 24
 198:Core/Src/main.c **** 
 882              		.loc 1 198 3 view .LVU161
 883 0004 FFF7FEFF 		bl	HAL_Init
 884              	.LVL40:
 205:Core/Src/main.c **** 
 885              		.loc 1 205 3 view .LVU162
 886 0008 FFF7FEFF 		bl	SystemClock_Config
 887              	.LVL41:
 212:Core/Src/main.c ****   MX_I2C1_Init();
 888              		.loc 1 212 3 view .LVU163
 889 000c FFF7FEFF 		bl	MX_GPIO_Init
 890              	.LVL42:
 213:Core/Src/main.c ****   MX_USART1_UART_Init();
 891              		.loc 1 213 3 view .LVU164
 892 0010 FFF7FEFF 		bl	MX_I2C1_Init
 893              	.LVL43:
 214:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 894              		.loc 1 214 3 view .LVU165
 895 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 896              	.LVL44:
 216:Core/Src/main.c ****         printf("LSM_not_found\r\n");
 897              		.loc 1 216 3 view .LVU166
 216:Core/Src/main.c ****         printf("LSM_not_found\r\n");
 898              		.loc 1 216 6 is_stmt 0 view .LVU167
 899 0018 FFF7FEFF 		bl	LSM6DS0_begin
 900              	.LVL45:
 216:Core/Src/main.c ****         printf("LSM_not_found\r\n");
 901              		.loc 1 216 5 view .LVU168
 902 001c 70BB     		cbnz	r0, .L52
 217:Core/Src/main.c ****   }else{
 903              		.loc 1 217 9 is_stmt 1 view .LVU169
 904 001e 1F48     		ldr	r0, .L60
 905 0020 FFF7FEFF 		bl	puts
 906              	.LVL46:
 907              	.L53:
 222:Core/Src/main.c ****   if (check_Gyro_Init()!=1){
 908              		.loc 1 222 3 view .LVU170
 909 0024 FFF7FEFF 		bl	LSM6DS0_Init
 910              	.LVL47:
 223:Core/Src/main.c ****     printf("gyro_init_failed\r\n");
ARM GAS  /tmp/ccnFevFe.s 			page 26


 911              		.loc 1 223 3 view .LVU171
 223:Core/Src/main.c ****     printf("gyro_init_failed\r\n");
 912              		.loc 1 223 7 is_stmt 0 view .LVU172
 913 0028 FFF7FEFF 		bl	check_Gyro_Init
 914              	.LVL48:
 223:Core/Src/main.c ****     printf("gyro_init_failed\r\n");
 915              		.loc 1 223 6 view .LVU173
 916 002c 0128     		cmp	r0, #1
 917 002e 2CD0     		beq	.L54
 224:Core/Src/main.c ****   }else{
 918              		.loc 1 224 5 is_stmt 1 view .LVU174
 919 0030 1B48     		ldr	r0, .L60+4
 920 0032 FFF7FEFF 		bl	puts
 921              	.LVL49:
 922              	.L55:
 228:Core/Src/main.c ****     printf("XL_init_failed\r\n");
 923              		.loc 1 228 3 view .LVU175
 228:Core/Src/main.c ****     printf("XL_init_failed\r\n");
 924              		.loc 1 228 6 is_stmt 0 view .LVU176
 925 0036 FFF7FEFF 		bl	check_XL_Init
 926              	.LVL50:
 228:Core/Src/main.c ****     printf("XL_init_failed\r\n");
 927              		.loc 1 228 5 view .LVU177
 928 003a 0128     		cmp	r0, #1
 929 003c 29D0     		beq	.L56
 229:Core/Src/main.c ****   }
 930              		.loc 1 229 5 is_stmt 1 view .LVU178
 931 003e 1948     		ldr	r0, .L60+8
 932 0040 FFF7FEFF 		bl	puts
 933              	.LVL51:
 934              	.L57:
 241:Core/Src/main.c ****     float accel_data[3];
 935              		.loc 1 241 5 discriminator 1 view .LVU179
 242:Core/Src/main.c ****     // uint8_t status;
 936              		.loc 1 242 5 discriminator 1 view .LVU180
 245:Core/Src/main.c ****   {
 937              		.loc 1 245 3 discriminator 1 view .LVU181
 255:Core/Src/main.c ****       accel_data[1]=LSM6DS0_ReadAccel_Y();
 938              		.loc 1 255 7 discriminator 1 view .LVU182
 255:Core/Src/main.c ****       accel_data[1]=LSM6DS0_ReadAccel_Y();
 939              		.loc 1 255 21 is_stmt 0 discriminator 1 view .LVU183
 940 0044 FFF7FEFF 		bl	LSM6DS0_ReadAccel_X
 941              	.LVL52:
 942 0048 0446     		mov	r4, r0
 255:Core/Src/main.c ****       accel_data[1]=LSM6DS0_ReadAccel_Y();
 943              		.loc 1 255 20 discriminator 1 view .LVU184
 944 004a 0190     		str	r0, [sp, #4]	@ float
 256:Core/Src/main.c ****       accel_data[2]=LSM6DS0_ReadAccel_Z();
 945              		.loc 1 256 7 is_stmt 1 discriminator 1 view .LVU185
 256:Core/Src/main.c ****       accel_data[2]=LSM6DS0_ReadAccel_Z();
 946              		.loc 1 256 21 is_stmt 0 discriminator 1 view .LVU186
 947 004c FFF7FEFF 		bl	LSM6DS0_ReadAccel_Y
 948              	.LVL53:
 949 0050 0546     		mov	r5, r0
 256:Core/Src/main.c ****       accel_data[2]=LSM6DS0_ReadAccel_Z();
 950              		.loc 1 256 20 discriminator 1 view .LVU187
 951 0052 0290     		str	r0, [sp, #8]	@ float
ARM GAS  /tmp/ccnFevFe.s 			page 27


 257:Core/Src/main.c **** 
 952              		.loc 1 257 7 is_stmt 1 discriminator 1 view .LVU188
 257:Core/Src/main.c **** 
 953              		.loc 1 257 21 is_stmt 0 discriminator 1 view .LVU189
 954 0054 FFF7FEFF 		bl	LSM6DS0_ReadAccel_Z
 955              	.LVL54:
 257:Core/Src/main.c **** 
 956              		.loc 1 257 20 discriminator 1 view .LVU190
 957 0058 0390     		str	r0, [sp, #12]	@ float
 262:Core/Src/main.c **** 
 958              		.loc 1 262 7 is_stmt 1 discriminator 1 view .LVU191
 959 005a FFF7FEFF 		bl	__aeabi_f2iz
 960              	.LVL55:
 961 005e 0646     		mov	r6, r0
 962 0060 2846     		mov	r0, r5
 963 0062 FFF7FEFF 		bl	__aeabi_f2iz
 964              	.LVL56:
 965 0066 0546     		mov	r5, r0
 966 0068 2046     		mov	r0, r4
 967 006a FFF7FEFF 		bl	__aeabi_f2iz
 968              	.LVL57:
 969 006e 0146     		mov	r1, r0
 970 0070 3346     		mov	r3, r6
 971 0072 2A46     		mov	r2, r5
 972 0074 0C48     		ldr	r0, .L60+12
 973 0076 FFF7FEFF 		bl	printf
 974              	.LVL58:
 245:Core/Src/main.c ****   {
 975              		.loc 1 245 9 discriminator 1 view .LVU192
 976 007a E3E7     		b	.L57
 977              	.L52:
 219:Core/Src/main.c ****         printf("initializing six axis sensor....\r\n");
 978              		.loc 1 219 9 view .LVU193
 979 007c 0B48     		ldr	r0, .L60+16
 980 007e FFF7FEFF 		bl	puts
 981              	.LVL59:
 220:Core/Src/main.c ****    }
 982              		.loc 1 220 9 view .LVU194
 983 0082 0B48     		ldr	r0, .L60+20
 984 0084 FFF7FEFF 		bl	puts
 985              	.LVL60:
 986 0088 CCE7     		b	.L53
 987              	.L54:
 226:Core/Src/main.c ****   }
 988              		.loc 1 226 5 view .LVU195
 989 008a 0A48     		ldr	r0, .L60+24
 990 008c FFF7FEFF 		bl	puts
 991              	.LVL61:
 992 0090 D1E7     		b	.L55
 993              	.L56:
 232:Core/Src/main.c ****   }
 994              		.loc 1 232 5 view .LVU196
 995 0092 0948     		ldr	r0, .L60+28
 996 0094 FFF7FEFF 		bl	puts
 997              	.LVL62:
 998 0098 D4E7     		b	.L57
 999              	.L61:
ARM GAS  /tmp/ccnFevFe.s 			page 28


 1000 009a 00BF     		.align	2
 1001              	.L60:
 1002 009c 00000000 		.word	.LC0
 1003 00a0 44000000 		.word	.LC3
 1004 00a4 70000000 		.word	.LC5
 1005 00a8 98000000 		.word	.LC7
 1006 00ac 10000000 		.word	.LC1
 1007 00b0 20000000 		.word	.LC2
 1008 00b4 58000000 		.word	.LC4
 1009 00b8 80000000 		.word	.LC6
 1010              		.cfi_endproc
 1011              	.LFE77:
 1013              		.text
 1014              	.Letext0:
 1015              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1016              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 1017              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1018              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1019              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1020              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1021              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1022              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1023              		.file 11 "Core/Inc/i2c.h"
 1024              		.file 12 "Core/Inc/usart.h"
 1025              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1026              		.file 14 "Core/Inc/gpio.h"
 1027              		.file 15 "<built-in>"
 1028              		.file 16 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/ccnFevFe.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccnFevFe.s:16     .text._write:0000000000000000 $t
     /tmp/ccnFevFe.s:24     .text._write:0000000000000000 _write
     /tmp/ccnFevFe.s:58     .text._write:0000000000000014 $d
     /tmp/ccnFevFe.s:63     .text.LSM6DS0_begin:0000000000000000 $t
     /tmp/ccnFevFe.s:70     .text.LSM6DS0_begin:0000000000000000 LSM6DS0_begin
     /tmp/ccnFevFe.s:124    .text.LSM6DS0_begin:0000000000000038 $d
     /tmp/ccnFevFe.s:129    .text.LSM6DS0_Init:0000000000000000 $t
     /tmp/ccnFevFe.s:136    .text.LSM6DS0_Init:0000000000000000 LSM6DS0_Init
     /tmp/ccnFevFe.s:198    .text.LSM6DS0_Init:000000000000004c $d
     /tmp/ccnFevFe.s:203    .text.check_Gyro_Init:0000000000000000 $t
     /tmp/ccnFevFe.s:210    .text.check_Gyro_Init:0000000000000000 check_Gyro_Init
     /tmp/ccnFevFe.s:264    .text.check_Gyro_Init:0000000000000038 $d
     /tmp/ccnFevFe.s:269    .text.check_XL_Init:0000000000000000 $t
     /tmp/ccnFevFe.s:276    .text.check_XL_Init:0000000000000000 check_XL_Init
     /tmp/ccnFevFe.s:330    .text.check_XL_Init:0000000000000038 $d
     /tmp/ccnFevFe.s:335    .text.LSM6DS0_ReadGyro:0000000000000000 $t
     /tmp/ccnFevFe.s:342    .text.LSM6DS0_ReadGyro:0000000000000000 LSM6DS0_ReadGyro
     /tmp/ccnFevFe.s:413    .text.LSM6DS0_ReadGyro:0000000000000050 $d
     /tmp/ccnFevFe.s:420    .text.LSM6DS0_ReadAccel_X:0000000000000000 $t
     /tmp/ccnFevFe.s:427    .text.LSM6DS0_ReadAccel_X:0000000000000000 LSM6DS0_ReadAccel_X
     /tmp/ccnFevFe.s:507    .text.LSM6DS0_ReadAccel_X:0000000000000060 $d
     /tmp/ccnFevFe.s:513    .text.LSM6DS0_ReadAccel_Y:0000000000000000 $t
     /tmp/ccnFevFe.s:520    .text.LSM6DS0_ReadAccel_Y:0000000000000000 LSM6DS0_ReadAccel_Y
     /tmp/ccnFevFe.s:600    .text.LSM6DS0_ReadAccel_Y:0000000000000060 $d
     /tmp/ccnFevFe.s:606    .text.LSM6DS0_ReadAccel_Z:0000000000000000 $t
     /tmp/ccnFevFe.s:613    .text.LSM6DS0_ReadAccel_Z:0000000000000000 LSM6DS0_ReadAccel_Z
     /tmp/ccnFevFe.s:693    .text.LSM6DS0_ReadAccel_Z:0000000000000060 $d
     /tmp/ccnFevFe.s:699    .text.Error_Handler:0000000000000000 $t
     /tmp/ccnFevFe.s:706    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccnFevFe.s:738    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccnFevFe.s:745    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccnFevFe.s:835    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccnFevFe.s:861    .text.main:0000000000000000 $t
     /tmp/ccnFevFe.s:868    .text.main:0000000000000000 main
     /tmp/ccnFevFe.s:1002   .text.main:000000000000009c $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
HAL_I2C_Mem_Read
hi2c1
HAL_I2C_Mem_Write
__aeabi_i2f
__aeabi_fmul
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2iz
HAL_Init
MX_GPIO_Init
MX_I2C1_Init
MX_USART1_UART_Init
puts
printf
